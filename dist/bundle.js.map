{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;;;AAA8C;AACK;;AAE5C;AACP;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,eAAe,4DAAS;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0BAA0B,4DAAS;;AAEnC;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG,6DAAS;AACZ;AACA,IAAI,4DAAS;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ,4DAAS;AACjB;AACA;AACA,UAAU,4DAAS;AACnB;AACA,OAAO;AACP;AACA;AACA,MAAM;AACN,KAAK,4DAAS;AACd;AACA,iBAAiB,4DAAS;AAC1B,MAAM;AACN,KAAK,4DAAS;AACd;AACA,iBAAiB,4DAAS;AAC1B,MAAM;AACN,KAAK,4DAAS,WAAW,4DAAS;AAClC,MAAM;AACN,KAAK,4DAAS,WAAW,4DAAS;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,6DAAS,eAAe,4DAAS;AACrC,IAAI,6DAAS;AACb;AACA;AACA,MAAM,4DAAS;;AAEf,IAAI,6DAAS;AACb;AACA;AACA;;AAEA;AACA;AACA,kCAAkC,4DAAS;AAC3C;AACA;AACA,MAAM,4DAAS;AACf,IAAI,6DAAS;AACb;AACA;AACA;;AAEA;AACA;AACA,iCAAiC,4DAAS;AAC1C;AACA;AACA,KAAK,4DAAS;AACd,GAAG,6DAAS;AACZ;AACA;;AAEA,gCAAgC,4DAAS;AACzC;AACA,2BAA2B,4DAAS;AACpC;AACA,MAAM,iEAAU;AAChB;AACA;AACA,KAAK,4DAAS;AACd,MAAM,4DAAS;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,4DAAS,eAAe,4DAAS;AACpC;AACA;AACA,GAAG,6DAAS;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,4DAAS;AACZ,GAAG,6DAAS;AACZ;AACA;AACA;AACA,QAAQ,4DAAS;AACjB,IAAI,4DAAS;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,aAAa;AACb;AACA;AACA,WAAW;AACX;AACA;;;;;;;;;;;;;;;;;ACnOA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,UAAU;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,cAAc;AAChC;AACA;AACA;AACA;AACA,kBAAkB,cAAc;AAChC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kBAAkB,UAAU;AAC5B,mBAAmB,cAAc;;AAEjC;AACA;AACA;AACA;AACA,kBAAkB,UAAU;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEO;AACP;AACA;AACO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACtNA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,oBAAoB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;;;;;;;;;;;;;;;ACjHO;AACP;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ,qCAAqC,IAAI;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,kCAAkC;AACnD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,oBAAoB,wBAAwB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC/foD;AAChB;AACpC;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iEAAU;AAC1B,gBAAgB,iEAAU;AAC1B,gBAAgB,iEAAU;AAC1B,yBAAyB,iEAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,iEAAU;AAC3B;AACA;AACA;AACA;AACA;AACA,eAAe,iEAAU;AACzB,eAAe,iEAAU;AACzB,eAAe,iEAAU;AACzB;AACA;AACA;AACA,kBAAkB,QAAQ;AAC1B,QAAQ,iDAAO;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iEAAU;AACjC;AACA;;;;;;;;;;;;;;;;;;ACpEwC;AACY;AACb;;AAEvC;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,iEAAU;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAM,iEAAU;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,iDAAK;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC1GoD;AACA;;AAEpD;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,iEAAc;AAC3B;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACzBoD;;AAEpD;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,MAAM,iEAAU;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;;;;;;;;;;;;;;AC7CA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,qBAAqB;AACtD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AClCoD;;AAEpD;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,iEAAU;AACvB,MAAM,iEAAU;AAChB,mBAAmB,6CAA6C;AAChE;AACA;AACA,6CAA6C,iEAAU;AACvD;AACA,uBAAuB,iEAAU;AACjC;AACA,mCAAmC,iEAAU;AAC7C;AACA,mCAAmC,iEAAU;AAC7C;AACA;AACA;AACA,MAAM,iEAAU;AAChB,mBAAmB,6CAA6C;AAChE;AACA;AACA,6CAA6C,iEAAU;AACvD;AACA,uBAAuB,iEAAU;AACjC;AACA,mCAAmC,iEAAU;AAC7C;AACA,mCAAmC,iEAAU;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,QAAQ;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,iEAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACnHwE;AAC9B;AACkB;AACE;;AAE9D;AACA;AACA;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA,gCAAgC,sEAAkB;AAClD;AACA;AACA;AACA,iCAAiC,wEAAmB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM,iEAAU;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH,MAAM,iEAAU;AAChB;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,0BAA0B,iEAAU;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA,MAAM,iEAAU;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,iEAAU;AACf;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA,yBAAyB,iEAAU;AACnC,uBAAuB,iEAAU;;AAEjC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,kEAAU;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,0BAA0B,iEAAU;AACpC,wBAAwB,iEAAU;AAClC;AACA,IAAI,SAAS,iEAAU;AACvB,0BAA0B,iEAAU;AACpC,wBAAwB,iEAAU;AAClC;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE,kEAAU;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,iEAAU;AAClB;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,iEAAU;AAClB;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB,iEAAU;AACnC,uBAAuB,iEAAU;AACjC,uBAAuB,iEAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAM,iEAAU;AAChB;AACA;;AAEA;;AAEA;AACA;AACA;AACA,4BAA4B,iEAAU;AACtC;AACA;AACA;;AAEA,MAAM,iEAAU;AAChB;AACA;AACA,4BAA4B,iEAAU;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,iEAAU;AACd;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,GAAG;AACvC;;AAEA;AACA,MAAM,iEAAU;AAChB;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;;AAEJ;AACA;AACA,OAAO,iEAAU;AACjB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,iEAAU,oBAAoB,iEAAU;AAC9C,GAAG,uDAAa;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,iEAAU;AACd;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM,iEAAU,wBAAwB,iEAAU;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACxeA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA,uBAAuB,kCAAkC;AACzD;AACA;AACA;AACA;AACA;AACA,yCAAyC,QAAQ;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,0BAA0B;AAC5C;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACtEoD;;AAEpD;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,QAAQ;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,0CAA0C,QAAQ;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC9GwC;AACM;AACM;AACE;AACtD;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,UAAU;AACtB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG,uDAAS;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA,mBAAmB,iDAAO;AAC1B;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM,iEAAU;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,iEAAU;AAChB;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,iDAAO;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,iDAAO;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,iDAAO;AACf,iCAAiC,iDAAK;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,iDAAO;AACd,iCAAiC,iDAAK;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,0DAAgB;AACpC;AACA;AACA;AACA;AACA,YAAY,0BAA0B;AACtC,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,0BAA0B;AACtC,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,uDAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,uDAAS;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,uDAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,uDAAS;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,iEAAU;AAChB,SAAS,OAAO;AAChB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM,iEAAU;AAChB,SAAS,OAAO;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;AACA;AACA,OAAO,SAAS,iDAAO,QAAQ,iDAAO;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;;;;;;;;;;;;;;;;ACniBoD;AACb;AACvC;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAM,iEAAU;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA,mBAAmB,iEAAU;AAC7B;AACA,IAAI,oDAAU;AACd;AACA,IAAI,oDAAU;AACd;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjF8C;AACA;AACA;AACI;AACN;AACQ;AACA;AACI;AACA;AACI;AACF;AACc;AACpC;AAC6B;AACb;AACQ;;AAE5D;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACO;AACP;AACA,8BAA8B,kEAAgB;AAC9C;;AAEA,EAAE,2EAAkB;;AAEpB;;AAEA,yBAAyB,wDAAW;;AAEpC,2BAA2B,4DAAa;AACxC;;AAEA,yBAAyB,wDAAW;AACpC,wBAAwB,sDAAU;AAClC;AACA;AACA;AACA;AACA;AACA,2BAA2B,8DAAa;AACxC,0BAA0B,8DAAc;AACxC,8BAA8B,uEAAkB;AAChD;AACA;AACA;;AAEA,gCAAgC,sEAAkB;AAClD;AACA;AACA;;AAEA,+BAA+B,qEAAiB;AAChD;AACA;AACA;;AAEA,8BAA8B,kEAAgB;AAC9C;AACA;AACA;;AAEA;AACA;;AAEA,qBAAqB,kEAAc;;AAEnC,kCAAkC,kEAAU;AAC5C,kCAAkC,kEAAU;AAC5C;;AAEA;AACA,wBAAwB,kEAAU;AAClC;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAoC,kEAAU;AAC9C,oCAAoC,kEAAU;AAC9C;AACA,mCAAmC,kEAAU;AAC7C,mCAAmC,kEAAU;AAC7C;AACA;;AAEA;AACA;AACA,YAAY,kEAAU;AACtB;AACA;AACA,IAAI,kEAAU;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM,kEAAU;AAChB;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA,4BAA4B,kEAAU;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,gEAAY;AACrB,2CAA2C;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC,qBAAqB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,kEAAU;AAC3B,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,kEAAU;AAC3B,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,kDAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,iEAAa;AACnB,MAAM,iEAAa;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE,uDAAS;AACX;AACA;AACA;AACA;;AAEA,EAAE,uDAAS;AACX;AACA;AACA;AACA;;AAEA,EAAE,uDAAS;AACX;AACA;AACA;AACA;;AAEA,EAAE,uDAAS;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,uDAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uDAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,uDAAS;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC1boC;AACoC;;AAExE;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,0EAAkB;AACpB,EAAE,0EAAkB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,iEAAU;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,iEAAU;;AAEd;AACA,yBAAyB,iEAAU;AACnC;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA,qBAAqB,iDAAO;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iEAAU;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,iDAAO;AAC1D;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA,wBAAwB,iEAAU;AAClC;;AAEA,MAAM,iEAAU;AAChB;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,iDAAO;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA,iCAAiC,iEAAU;AAC3C;AACA;AACA;AACA;;AAEA,aAAa,iEAAU;AACvB;AACA;AACA;AACA;AACA,iBAAiB,iEAAU;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,iEAAU;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,8BAA8B,iEAAU;;AAExC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS,iEAAU;AACnB;;AAEA;AACA,iBAAiB,iEAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iEAAU;AAC3B;AACA;AACA,kCAAkC,iEAAU;AAC5C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,iDAAO;AACV;AACA;AACA;AACA;AACA;AACA,GAAG,iDAAO;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,iDAAO;AACV;AACA;AACA;AACA;AACA;AACA,GAAG,iDAAO;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,iDAAO;AACV;AACA;AACA;AACA;AACA;AACA,GAAG,iDAAO;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,iDAAO;AACV;AACA;AACA;AACA;AACA,SAAS,iDAAO;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iDAAO;AAChB;AACA;AACA;AACA,GAAG,iDAAO;AACV;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,4BAA4B,iDAAO;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;ACvYoD;;AAEpD;AACA;AACA;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,iEAAU;AAChB;AACA;AACA,MAAM,iEAAU;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;;;;;;;;;;;;;;;AC1GuC;AAChC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,QAAQ;AAC1D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4BAA4B,eAAe;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO,iDAAK;AACZ;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,WAAW;AACX;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0BAA0B,kBAAkB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACpUyD;AACf;AACO;AAC1C;AACP;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,yCAAG;AACpB;AACA;AACA;AACA;AACA;AACA,KAAK,wDAAS;AACd;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,kBAAkB,0DAAgB;AAClC;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,6DAAS;AACd;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,4DAAS;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACxIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,0BAA0B;AACrC,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAWC;;;;;;;;;;;;;;;;;;AChJmD;AAIpB;;AAEhC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;;AAEA,gCAAgC,gFAAwB;AACxD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gCAAgC,8EAAsB;AACtD;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC/HoD;AACG;AACZ;AAIpB;AACwB;;AAExC;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,wEAAyB;AAC3C;AACA,GAAG,6DAAgB;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,6DAAgB;AACjC;AACA;AACA;AACA;;AAEA,kBAAkB,sEAAuB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,iEAAU;AAClC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE,yDAAS;AACX;AACA,EAAE,yDAAS;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,gEAAe;AACnB;AACA;AACA;AACA,IAAI,gEAAe;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,gEAAe;AAC9B;AACA;AACA,GAAG;AACH;AACA;;;;;;;;;;;;;;;;;;;ACnKwC;;AAExC;AACO;AACP;AACA;AACO;AACP,eAAe,iDAAK;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACO;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC/BoD;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iEAAU;AAC1B,gBAAgB,iEAAU;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,iEAAU;AACnC,wBAAwB,iEAAU;AAClC,0BAA0B,iEAAU;AACpC,+BAA+B,iEAAU;AACzC,6BAA6B,iEAAU;AACvC,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;;AAEA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,0BAA0B,iEAAU;AACpC,oBAAoB,iEAAU;AAC9B;AACA,uBAAuB,iEAAU;AACjC;;AAEA;AACA;;;;;;;;;;;;;;;ACxHO;AACP;AACA,IAAI,oCAAoC;AACxC,IAAI,oCAAoC;AACxC,IAAI,oCAAoC;AACxC,IAAI,oCAAoC;AACxC,IAAI,oCAAoC;AACxC,IAAI,oCAAoC;AACxC,IAAI,qCAAqC;;AAEzC,OAAO,uCAAuC;AAC9C,OAAO,gDAAgD;AACvD,OAAO,uCAAuC;AAC9C,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC78B2C;;AAEpC;AACP;AACA,EAAE,wDAAS,uCAAuC,IAAI;AACtD;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AClB6C;AACZ;AACoB;AACV;AACS;AACG;AACE;AAMrC;AACgC;;AAEpD;AACA;;AAEA;AACA;AACA,yBAAyB,8DAAW;;AAEpC,EAAE,qEAAc;AAChB,EAAE,qEAAc;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iEAAU;AACjC;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,yDAAS;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,wDAAS;AACb,IAAI;AACJ,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE,yDAAS;AACX,EAAE,yDAAS;AACX;AACA;AACA;;AAEA;;AAEA,EAAE,yDAAS;AACX;AACA,wBAAwB,sDAAU;AAClC,oBAAoB,0CAAI;AACxB,GAAG,yDAAS;;AAEZ;;AAEA,GAAG,yDAAS;AACZ,mDAAmD,wDAAS;AAC5D,IAAI;AACJ;AACA,GAAG,6DAAY;AACf,GAAG,yDAAS;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,uDAAW;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,QAAQ;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA,sBAAsB,iEAAU;AAChC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM,iEAAU;AAChB;AACA;AACA;AACA;AACA,4BAA4B,8BAA8B;AAC1D;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM,iEAAqB;AAC3B;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA,MAAM,iEAAU;AAChB,wBAAwB,sEAAiB;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,+DAAmB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAM,oEAAc;AACpB,GAAG,oEAAc;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI,+DAAmB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,0DAAc;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA,uBAAuB;AACvB;;AAEA,sBAAsB,sBAAsB;AAC5C,0BAA0B,0BAA0B;AACpD;AACA,cAAc;AACd;;AAEA,6BAA6B,iBAAiB,EAAE,OAAO;AACvD;;AAEA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;;AAEO;AACP;;;;;;;;;;;;;;;;;;;;;;;;ACrgBwC;;AAExC;AACA;AACA;;AAEA;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,iDAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iDAAK;AAClC;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;;;;;;;;;;;;;;;ACvDsD;;AAE/C;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAU;AACjC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,yDAAU;AACf,KAAK,yDAAU;AACf;AACA,wBAAwB,wDAAU;AAClC;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAU;AAC9B,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAU;AAC9B,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAU;AAC9B,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAU;AAC9B,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAU;AAC9B,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAU;AAC9B,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAU;AAC9B,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,wDAAU;AACf,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,wDAAU;AACf,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAU;AAC9B,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAU;AAC9B,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAU;AACjC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAU;AACjC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAU;AACjC;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAU;AAC9B,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAU;AAC9B,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAU;AACjC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAU;AACjC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAU;AAC9B,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAU;AACjC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAU;AACjC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAU;AAC9B,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAU;AACjC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAU;AACjC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAU;AACjC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,wDAAU;AACf;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAU;AAC9B,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAU;AAC9B,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAU;AAC9B,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAU;AAC9B,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAU;AAC9B,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAU;AACjC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAU;AACjC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAU;AACjC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAU;AACjC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,wDAAU;AACf;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,wDAAU;AACf;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,wDAAU;AACf;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wDAAU;AAClC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,wDAAU;AACf,KAAK,MAAM,SAAI;AACf,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,wDAAU;AACf,KAAK,MAAM,SAAI;AACf,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAU;AACjC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAU;AACjC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAU;AACjC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAU;AACjC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAU;AACjC;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACjhBgD;;AAEhD;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA,gBAAgB,8DAAgB;AAChC;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACnByD;AACX;AAIb;;AAEjC;AACA;AACA,kBAAkB,uEAAkB;AACpC,sBAAsB,+EAAsB;;AAE5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,wBAAwB,uDAAS;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,CAAC,4EAAmB;AACpB;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP,uBAAuB,uEAAkB;AACzC;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AClF6C;;AAEtC;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,0DAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,IAAI,4BAA4B;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,gCAAgC;AACtC,MAAM;AACN;AACA;AACA;AACA,MAAM,gCAAgC;AACtC,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK,iBAAiB;AACtB,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA,0CAA0C,IAAI,sBAAsB;AACpE;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,gCAAgC,0DAAgB;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,IAAI,0DAAgB;AACpB;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,UAAU;AACtB;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;ACjcO;AACP;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;;;;;;;;;;;;;;;ACT0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,oDAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,oDAAS;AAC9B;AACA;AACA;;AAEA,iBAAiB,oDAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;;;;;;;;;;;;;;;;ACjD0C;;AAEnC;AACP;AACA;AACA,gBAAgB,oDAAS;AACzB;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACVgE;AAClB;AACL;AACzC;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA,kBAAkB,uDAAS;AAC3B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,uDAAS;AACtB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,cAAc,uDAAS;AACvB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,aAAa,uDAAS;AACtB;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,uDAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,uDAAS;AACrB;AACA;AACA;AACA,IAAI,6EAAsB;AAC1B;AACA;AACA;AACA;AACA;AACA,aAAa,uDAAS;AACtB;AACA;AACA;AACA;AACA,eAAe,uDAAS;AACxB;AACA;AACA,MAAM;AACN,MAAM;AACN;AACA;;AAEA;AACA,eAAe,uDAAS;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK,uDAAS;AACd,MAAM;AACN;AACA;AACA,KAAK,uDAAS;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,uDAAS;AAClB;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC1LoD;AACW;AAClB;AACH;AACH;;AAEhC;AACP;AACA;AACA,iBAAiB,oDAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,EAAE,oDAAS;AACX,EAAE,oDAAS;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oDAAS;AACxB,eAAe,0DAAgB;AAC/B;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,oDAAS;AACxB,eAAe,0DAAgB;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,oDAAS;AACpB,WAAW,0DAAgB;AAC3B;AACA;AACA,GAAG,qDAAS;AACZ,GAAG,6DAAU;AACb,IAAI,6DAAS;AACb,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,oDAAS;AACpB,WAAW,0DAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,iEAAc;AACjC;AACA,EAAE,oDAAS;AACX,EAAE,oDAAS;AACX,EAAE,6DAAS;AACX;AACA;;;;;;;;;;;;;;;;;;;;;;;ACnG0C;AAMd;AACmB;AACL;AACc;AACR;AACO;;AAEvD;AACA;AACA;AACA;AACA;;AAEO;AACP,oBAAoB,4DAAS;AAC7B;;AAEO;AACP,kBAAkB,2DAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,oDAAS;AACzB;AACA;AACA;AACA,8BAA8B,gEAAa;AAC3C;AACA;;AAEA,qBAAqB,oDAAS;AAC9B;;AAEA,aAAa,oDAAS;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,oDAAS;AACZ,IAAI;AACJ;AACA;AACA,GAAG,oDAAS;AACZ;AACA;;AAEA;AACA,aAAa,oDAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,4DAAS;AAClC,kBAAkB,oDAAS;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B,4DAAS;AACxC;AACA;AACA;AACA;;AAEA,cAAc,oDAAS;;AAEvB;AACA,gBAAgB,oDAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,oDAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,EAAE;;AAEF;AACA,cAAc,oDAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA,4BAA4B,oDAAS;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,oEAAc;AACvB,KAAK,0DAAY;AACjB;AACA;AACA;AACA,SAAS,kEAAgB;;AAEzB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,EAAE;;AAEF,wBAAwB,oDAAS;AACjC;AACA;AACA,SAAS,gEAAa;AACtB;AACA;AACA,GAAG,iEAAa;AAChB;AACA,EAAE;AACF,wBAAwB,oDAAS;AACjC;AACA;AACA,SAAS,gEAAa;AACtB,2BAA2B,gEAAa;AACxC,EAAE;;AAEF,CAAC,oDAAS;AACV;AACA;AACA,EAAE,oDAAS;AACX;AACA,EAAE,oDAAS;AACX;AACA;AACA;;AAEA,CAAC,oDAAS;AACV,CAAC,oDAAS;AACV;AACA,EAAE,oDAAS;AACX;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACtN0C;AACc;AACpB;AACU;AACiB;AAC3B;AACmB;AACZ;;AAE3C;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;;AAEA,oBAAoB,8CAAM;AAC1B;AACA,EAAE,6DAAS;;AAEX;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gCAAgC,8CAAM;AACtC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,2BAA2B,oDAAS;;AAEpC;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAE,oDAAS;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,oDAAS;AACzB,kBAAkB,oDAAS;AAC3B,iBAAiB,oDAAS;;AAE1B,EAAE,oDAAS;AACX,EAAE,oDAAS;AACX,EAAE,oDAAS;AACX;AACA;AACA;AACA;;AAEA,EAAE,oDAAS;AACX;;AAEA;;AAEA,+BAA+B,oDAAS;AACxC;AACA;AACA,EAAE,oDAAS;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,yBAAyB,oDAAS;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,oDAAS;AAClC,EAAE,oDAAS;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,oDAAS;AAC1B,EAAE,oDAAS;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,oDAAS;AAC3B,EAAE,oDAAS;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,oDAAS;AAChC,EAAE,oDAAS;AACX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,oDAAS;AAC9B,EAAE,oDAAS;AACX;AACA;;AAEA;AACA,gBAAgB,oDAAS;AACzB,EAAE,oDAAS;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,oDAAS;AAC1B;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,oDAAS;AAClC;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,oDAAS;AACX;AACA;AACA;AACA;AACA;AACA,EAAE,oDAAS;AACX;AACA;AACA;AACA;AACA;AACA,sBAAsB,oDAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,qEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,2BAA2B,oDAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,oDAAS;AAClC;AACA;AACA;AACA,GAAG,oDAAS;AACZ;AACA;AACA;AACA;AACA;AACA,4BAA4B,oDAAS;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,oDAAS;AACX;AACA;AACA;;AAEA;AACA,EAAE,oDAAS;AACX;AACA;AACA;;AAEA;AACA;AACA,yBAAyB,oDAAS;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,oDAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA,qBAAqB,oDAAS;AAC9B;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,6DAAS;AACZ,GAAG;AACH;AACA;;AAEA;AACA;AACA,mBAAmB,oDAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,oDAAS;AACjC;AACA;AACA;AACA,KAAK,4DAAS;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,4DAAS;AACvB;AACA;AACA;AACA,uBAAuB,oDAAS;AAChC;AACA;AACA;AACA;AACA,MAAM,6DAAS;AACf;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,uBAAuB,4DAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,oDAAS;AACnC;AACA;AACA;AACA,KAAK,4DAAS;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oDAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG,oDAAS;AACZ;AACA;AACA;AACA;AACA,EAAE,oDAAS;AACX;AACA;AACA;;AAEA;AACA;AACA,EAAE,oDAAS;AACX;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4DAAS;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0BAA0B,oDAAS;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG,oDAAS;AACZ;AACA;AACA;AACA;AACA,EAAE,oDAAS;AACX;AACA;AACA;;AAEA;AACA;AACA,EAAE,oDAAS;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB,oDAAS;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG,oDAAS;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,oDAAS;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,oDAAS;AACX;AACA;AACA;;AAEA;AACA,EAAE,oDAAS;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,oDAAS;AACpC;AACA;AACA,IAAI,4DAAS;AACb;AACA;AACA;AACA;AACA,SAAS,4DAAS;AAClB,MAAM,oDAAS;AACf;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,4DAAS;AACd,SAAS,4DAAS;AAClB,MAAM,oDAAS;AACf;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM,oDAAS;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,oDAAS;AAC9B;AACA;AACA;AACA,SAAS,4DAAS;AAClB,MAAM,4DAAS;AACf,iBAAiB,4DAAS;AAC1B,WAAW,4DAAS;AACpB,QAAQ,4DAAS;AACjB;AACA,iDAAiD,4DAAS;AAC1D,OAAO,6DAAS,YAAY,4DAAS;AACrC;AACA,MAAM,oDAAS;AACf,OAAO;AACP,MAAM,4DAAS,mBAAmB,4DAAS;AAC3C,MAAM,6DAAS;AACf,MAAM,6DAAS;AACf;AACA,MAAM,oDAAS;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,oDAAS;AAC9B;AACA;AACA;AACA;AACA,GAAG,oDAAS;AACZ;AACA;AACA;AACA;AACA,MAAM,4DAAS;AACf,GAAG,oDAAS;AACZ,GAAG,6DAAS;AACZ,GAAG,oDAAS;AACZ;AACA;AACA;AACA;AACA,sBAAsB,oDAAS;AAC/B;AACA;AACA;AACA;AACA,GAAG,oDAAS;AACZ;AACA;AACA;AACA;AACA,EAAE,4DAAS;AACX,EAAE,oDAAS;;AAEX,EAAE,oDAAS;AACX;;AAEA;AACA;AACA,qBAAqB,oDAAS;AAC9B;AACA;AACA;AACA;;AAEA,GAAG,oDAAS;AACZ;AACA;AACA;AACA;AACA,EAAE,4DAAS;AACX,EAAE,oDAAS;AACX,EAAE,oDAAS;AACX;AACA;AACA;AACA,uBAAuB,oDAAS;AAChC;AACA;AACA;AACA;AACA,GAAG,oDAAS;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE,oDAAS,yBAAyB,4DAAe;AACnD;AACA;AACA;AACA;AACA,8BAA8B,iEAAc;AAC5C;;AAEA;AACA;AACA,0BAA0B,oDAAS;AACnC;AACA;AACA;AACA;AACA;;AAEA,cAAc,oDAAS;AACvB;AACA,MAAM,mBAAmB;AACzB,MAAM;AACN;AACA;;AAEA,0BAA0B,oDAAS;AACnC,2BAA2B,oDAAS;AACpC;AACA;AACA;AACA,qBAAqB,oEAAc;AACnC;AACA;AACA,IAAI;AACJ;AACA,oBAAoB,oDAAS;AAC7B;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA,sBAAsB,oEAAc;AACpC;AACA;AACA,IAAI;AACJ;AACA,qBAAqB,oDAAS;AAC9B;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,oDAAS;AAC3B;AACA;AACA;AACA;AACA,KAAK,oDAAS;AACd,KAAK,qEAAc;AACnB,MAAM;AACN,KAAK,oDAAS;AACd,KAAK,qEAAc;AACnB;AACA;AACA;AACA,MAAM,oEAAc;AACpB,GAAG,oDAAS;AACZ;;AAEA;AACA;AACA;AACA,kBAAkB,oDAAS;AAC3B;AACA;AACA;AACA;AACA,KAAK,oDAAS;AACd,KAAK,qEAAc;AACnB,MAAM;AACN,KAAK,oDAAS;AACd,KAAK,qEAAc;AACnB;AACA;AACA;AACA,MAAM,oEAAc;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,oDAAS;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,oDAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACz2B+C;AACL;;AAEnC;AACP;AACA;AACA,aAAa,oDAAS;AACtB;AACA;AACA,GAAG,oDAAS;AACZ;AACA;AACA;;AAEA;AACA;AACA,GAAG,oDAAS;AACZ;AACA;AACA;AACA;AACA;AACA,GAAG,oDAAS;AACZ;AACA;AACA;;AAEA;AACA;AACA,GAAG,oDAAS;AACZ;AACA;AACA;AACA,wBAAwB,oDAAS;AACjC;AACA;AACA,yCAAyC,4DAAS;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,oDAAS;AACZ;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACjDa;;AAEb,gBAAgB,mBAAO,CAAC,4DAAY;;AAEpC;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC,eAAe,QAAQ;AACvB,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB,OAAO;AACvB;;AAEA,GAAG;AACH;AACA;AACA;AACA,iCAAiC;;AAEjC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,2CAA2C;;AAE3C;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB,gBAAgB,OAAO;AACvB;;AAEA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;;;AAGR,wCAAwC,EAAE,KAAK;;AAE/C;AACA;AACA,OAAO,GAAG;;AAEV;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,QAAQ;;;AAGR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA,8CAA8C;;AAE9C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,kDAAkD;;AAElD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,WAAW,QAAQ,QAAQ;AAC3B,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH,4BAA4B;;AAE5B;AACA,CAAC;;AAED;AACA;AACA,WAAW,QAAQ,QAAQ;AAC3B,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,oDAAoD;;AAEpD;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,WAAW,QAAQ,QAAQ;AAC3B,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH,2BAA2B;;AAE3B;AACA,CAAC;;AAED;AACA;AACA,WAAW,QAAQ,QAAQ;AAC3B,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,oDAAoD;;AAEpD;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;;;AAGJ;AACA,sEAAsE;AACtE;AACA;AACA,CAAC;;AAED;AACA;AACA,WAAW,QAAQ,QAAQ;AAC3B,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,oDAAoD;;AAEpD;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,WAAW,QAAQ,QAAQ;AAC3B,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,oDAAoD;;AAEpD;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,WAAW,QAAQ,QAAQ;AAC3B,YAAY;AACZ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc;AACd;;;AAGA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA,6DAA6D;;AAE7D;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uEAAuE;AACvE;AACA;AACA,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,WAAW,QAAQ,QAAQ;AAC3B,YAAY;AACZ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc;AACd;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wEAAwE;AACxE;AACA;AACA,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,WAAW,QAAQ,UAAU;AAC7B,YAAY;AACZ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,cAAc;AACd;;;AAGA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,SAAS;AACT,QAAQ;AACR;AACA;AACA;;;AAGA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,cAAc;AACd;AACA,0CAA0C,mEAAmE;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;;AAEA;AACA,WAAW,GAAG;;AAEd;AACA;;AAEA;AACA,4CAA4C,0IAA0I;AACtL;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,cAAc;AACd;AACA,4CAA4C,mEAAmE;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;;AAEA;AACA,WAAW;AACX;AACA,QAAQ;AACR;AACA,yBAAyB,kBAAkB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,QAAQ,SAAS;AAC5B,YAAY;AACZ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,WAAW,QAAQ,QAAQ;AAC3B,YAAY;AACZ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,2BAA2B;;AAE3B;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA,cAAc;AACd;;;AAGA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,WAAW,QAAQ,QAAQ;AAC3B,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,iDAAiD;;AAEjD;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,WAAW,QAAQ,QAAQ;AAC3B,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,oDAAoD;;AAEpD;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,YAAY;AACZ;;AAEA;AACA;;AAEA,gCAAgC;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,WAAW,QAAQ,QAAQ;AAC3B,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,oDAAoD;;AAEpD;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,WAAW,QAAQ,QAAQ;AAC3B,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,oDAAoD;;AAEpD;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,WAAW,QAAQ,QAAQ;AAC3B,YAAY;AACZ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;;AAEA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,aAAa,gCAAgC;AAC7C,aAAa,UAAU;AACvB,cAAc;AACd;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;;AAGZ;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,aAAa;AACb;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,QAAQ;;;AAGR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;AACV;AACA;AACA,OAAO;AACP;AACA,4DAA4D;;AAE5D;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA,mDAAmD;;AAEnD;AACA;AACA,OAAO,GAAG;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,GAAG;;AAEZ;AACA;AACA,SAAS;AACT,OAAO,GAAG;;AAEV;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;;AAEA;AACA,wBAAwB;;AAExB;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,eAAe,0BAA0B;AACzC,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;;;AAGR;;AAEA,sBAAsB,wBAAwB;AAC9C;AACA;AACA;;AAEA,kDAAkD;;AAElD,mEAAmE;;AAEnE,uDAAuD;;AAEvD,2CAA2C,yBAAyB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW,IAAI;;AAEf;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,OAAO,GAAG;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,yCAAyC;AACzC;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,WAAW,aAAa,mBAAmB,OAAO,uBAAuB,OAAO;AAChF,WAAW,QAAQ,WAAW;AAC9B,YAAY;AACZ;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;;;AAGA;AACA;AACA;AACA;;AAEA;AACA,sDAAsD;;AAEtD;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,KAAK;AACpB,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxtDY;;AAEZ;AACA,4BAA4B;AAC5B,qBAAqB;AACrB,qBAAqB;AACrB,qBAAqB;AACrB;AACA;AACA;;AAEA,2BAA2B,GAAG,GAAG,GAAG,GAAG,GAAG;AAC1C;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,oBAAoB;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB;AACA;AACA,WAAW,OAAO;AAClB;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW,+DAA+D;AAC1E;AACO;AACP;AACA;AACA;;AAEA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB;AACtB,sBAAsB;;AAEtB;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;;AAEO,wBAAwB,wBAAwB;AAChD,qBAAqB,wBAAwB;AAC7C,oBAAoB,wBAAwB;AAC5C,sBAAsB,wBAAwB;AAC9C,qBAAqB,wBAAwB;AAC7C,wBAAwB,wBAAwB;AAChD,qBAAqB,wBAAwB;;;;;;;;;;;;;;;;;AChMpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEkC;;AAElC;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACO;AACP;AACA,SAAS,iDAAI;AACb;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;;;;;;;UC5DA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;ACN8C;AACf;AACqB;AACU;AAC1B;AACe;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,cAAc,wDAAM;AACpB,UAAU,yCAAE;AACZ,iBAAiB,8DAAc;AAC/B;;AAEA;;AAEA,CAAC,mDAAQ;AACT;AACA;AACA;;AAEA;AACA;AACA,eAAe,iEAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC,6DAAU;AACX,EAAE,4DAAS;AACX;AACA","sources":["webpack://bithovenmain/./js/InputListeners.js","webpack://bithovenmain/./js/MicInputHandler.js","webpack://bithovenmain/./js/MidiInputHandler.js","webpack://bithovenmain/./js/MidiLoader.js","webpack://bithovenmain/./js/Rendering/BackgroundRender.js","webpack://bithovenmain/./js/Rendering/DebugRender.js","webpack://bithovenmain/./js/Rendering/InSongTextRenderer.js","webpack://bithovenmain/./js/Rendering/MarkerRenderer.js","webpack://bithovenmain/./js/Rendering/MeasureLinesRender.js","webpack://bithovenmain/./js/Rendering/NoteParticleRender.js","webpack://bithovenmain/./js/Rendering/NoteRender.js","webpack://bithovenmain/./js/Rendering/OverlayRender.js","webpack://bithovenmain/./js/Rendering/PianoParticleRender.js","webpack://bithovenmain/./js/Rendering/PianoRender.js","webpack://bithovenmain/./js/Rendering/ProgressBarRender.js","webpack://bithovenmain/./js/Rendering/Render.js","webpack://bithovenmain/./js/Rendering/RenderDimensions.js","webpack://bithovenmain/./js/Rendering/SustainRenderer.js","webpack://bithovenmain/./js/Song.js","webpack://bithovenmain/./js/SoundfontLoader.js","webpack://bithovenmain/./js/Util.js","webpack://bithovenmain/./js/audio/AudioNote.js","webpack://bithovenmain/./js/audio/AudioPlayer.js","webpack://bithovenmain/./js/audio/Buffers.js","webpack://bithovenmain/./js/audio/GainNodeController.js","webpack://bithovenmain/./js/data/CONST.js","webpack://bithovenmain/./js/player/FileLoader.js","webpack://bithovenmain/./js/player/Player.js","webpack://bithovenmain/./js/player/Tracks.js","webpack://bithovenmain/./js/settings/DefaultSettings.js","webpack://bithovenmain/./js/settings/LocalStorageHandler.js","webpack://bithovenmain/./js/settings/Settings.js","webpack://bithovenmain/./js/ui/DomHelper.js","webpack://bithovenmain/./js/ui/ElementHighlight.js","webpack://bithovenmain/./js/ui/Loader.js","webpack://bithovenmain/./js/ui/Notification.js","webpack://bithovenmain/./js/ui/SettingUI.js","webpack://bithovenmain/./js/ui/SongUI.js","webpack://bithovenmain/./js/ui/TrackUI.js","webpack://bithovenmain/./js/ui/UI.js","webpack://bithovenmain/./js/ui/ZoomUI.js","webpack://bithovenmain/./js/ui/node_modules/midi-writer-js/build/index.js","webpack://bithovenmain/./js/ui/node_modules/note-parser/index.js","webpack://bithovenmain/./js/ui/node_modules/tonal-midi/index.js","webpack://bithovenmain/webpack/bootstrap","webpack://bithovenmain/webpack/runtime/compat get default export","webpack://bithovenmain/webpack/runtime/define property getters","webpack://bithovenmain/webpack/runtime/hasOwnProperty shorthand","webpack://bithovenmain/webpack/runtime/make namespace object","webpack://bithovenmain/./js/main.js"],"sourcesContent":["import { getPlayer } from \"./player/Player.js\"\nimport { getSetting } from \"./settings/Settings.js\"\n\nexport class InputListeners {\n\tconstructor(ui, render) {\n\t\tthis.grabSpeed = []\n\t\tthis.delay = false\n\n\t\tthis.addMouseAndTouchListeners(render, ui)\n\n\t\tdocument.body.addEventListener(\"wheel\", this.onWheel())\n\n\t\tthis.addProgressBarMouseListeners(render)\n\n\t\twindow.addEventListener(\"keydown\", this.onKeyDown(ui))\n\n\t\tui.setOnMenuHeightChange(val => render.onMenuHeightChanged(val))\n\n\t\tui.fireInitialListeners()\n\n\t\tlet player = getPlayer()\n\t\trender.setPianoInputListeners(\n\t\t\tplayer.addInputNoteOn.bind(player),\n\t\t\tplayer.addInputNoteOff.bind(player)\n\t\t)\n\t}\n\n\taddMouseAndTouchListeners(render, ui) {\n\t\twindow.addEventListener(\"mouseup\", ev => this.onMouseUp(ev, render))\n\t\tdocument.body.addEventListener(\n\t\t\t\"mousedown\",\n\t\t\tev => this.onMouseDown(ev, render),\n\t\t\t{ passive: false }\n\t\t)\n\t\tdocument.body.addEventListener(\n\t\t\t\"mousemove\",\n\t\t\tev => this.onMouseMove(ev, render, ui),\n\t\t\t{ passive: false }\n\t\t)\n\t\twindow.addEventListener(\"touchend\", ev => this.onMouseUp(ev, render), {\n\t\t\tpassive: false\n\t\t})\n\t\tdocument.body.addEventListener(\n\t\t\t\"touchstart\",\n\t\t\tev => this.onMouseDown(ev, render),\n\t\t\t{ passive: false }\n\t\t)\n\t\tdocument.body.addEventListener(\n\t\t\t\"touchmove\",\n\t\t\tev => this.onMouseMove(ev, render, ui),\n\t\t\t{ passive: false }\n\t\t)\n\t}\n\n\taddProgressBarMouseListeners(render) {\n\t\trender\n\t\t\t.getProgressBarCanvas()\n\t\t\t.addEventListener(\"mousemove\", this.onMouseMoveProgressCanvas(render))\n\t\trender\n\t\t\t.getProgressBarCanvas()\n\t\t\t.addEventListener(\"mousedown\", this.onMouseDownProgressCanvas(render))\n\t}\n\n\tonWheel() {\n\t\treturn event => {\n\t\t\tif (event.target != document.body) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif (this.delay) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tthis.delay = true\n\n\t\t\tlet alreadyScrolling = getPlayer().scrolling != 0\n\n\t\t\t//Because Firefox does not set .wheelDelta\n\t\t\tlet wheelDelta = event.wheelDelta ? event.wheelDelta : -1 * event.deltaY\n\n\t\t\tlet evDel =\n\t\t\t\t((wheelDelta + 1) / (Math.abs(wheelDelta) + 1)) *\n\t\t\t\tMath.min(500, Math.abs(wheelDelta))\n\n\t\t\tvar wheel = (evDel / Math.abs(evDel)) * 500\n\n\t\t\tgetPlayer().scrolling -= 0.001 * wheel\n\t\t\tif (!alreadyScrolling) {\n\t\t\t\tgetPlayer().handleScroll()\n\t\t\t}\n\t\t\tthis.delay = false\n\t\t}\n\t}\n\n\tonKeyDown(ui) {\n\t\treturn e => {\n\t\t\tif (!getPlayer().isFreeplay) {\n\t\t\t\tif (e.code == \"Space\") {\n\t\t\t\t\te.preventDefault()\n\t\t\t\t\tif (!getPlayer().paused) {\n\t\t\t\t\t\tui.clickPause(e)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tui.clickPlay(e)\n\t\t\t\t\t}\n\t\t\t\t} else if (e.code == \"ArrowUp\") {\n\t\t\t\t\tgetPlayer().increaseSpeed(0.05)\n\t\t\t\t\tui.getSpeedDisplayField().value =\n\t\t\t\t\t\tMath.floor(getPlayer().playbackSpeed * 100) + \"%\"\n\t\t\t\t} else if (e.code == \"ArrowDown\") {\n\t\t\t\t\tgetPlayer().increaseSpeed(-0.05)\n\t\t\t\t\tui.getSpeedDisplayField().value =\n\t\t\t\t\t\tMath.floor(getPlayer().playbackSpeed * 100) + \"%\"\n\t\t\t\t} else if (e.code == \"ArrowLeft\") {\n\t\t\t\t\tgetPlayer().setTime(getPlayer().getTime() - 5)\n\t\t\t\t} else if (e.code == \"ArrowRight\") {\n\t\t\t\t\tgetPlayer().setTime(getPlayer().getTime() + 5)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tonMouseDownProgressCanvas(render) {\n\t\treturn ev => {\n\t\t\tev.preventDefault()\n\t\t\tif (ev.target == render.getProgressBarCanvas()) {\n\t\t\t\tthis.grabbedProgressBar = true\n\t\t\t\tgetPlayer().wasPaused = getPlayer().paused\n\t\t\t\tgetPlayer().pause()\n\t\t\t\tlet newTime =\n\t\t\t\t\t(ev.clientX / render.renderDimensions.windowWidth) *\n\t\t\t\t\t(getPlayer().song.getEnd() / 1000)\n\n\t\t\t\tgetPlayer().setTime(newTime)\n\t\t\t}\n\t\t}\n\t}\n\n\tonMouseMoveProgressCanvas(render) {\n\t\treturn ev => {\n\t\t\tif (this.grabbedProgressBar && getPlayer().song) {\n\t\t\t\tlet newTime =\n\t\t\t\t\t(ev.clientX / render.renderDimensions.windowWidth) *\n\t\t\t\t\t(getPlayer().song.getEnd() / 1000)\n\t\t\t\tgetPlayer().setTime(newTime)\n\t\t\t}\n\t\t}\n\t}\n\n\tonMouseMove(ev, render, ui) {\n\t\tlet pos = this.getXYFromMouseEvent(ev)\n\t\tif (this.grabbedProgressBar && getPlayer().song) {\n\t\t\tlet newTime =\n\t\t\t\t(ev.clientX / render.renderDimensions.windowWidth) *\n\t\t\t\t(getPlayer().song.getEnd() / 1000)\n\t\t\tgetPlayer().setTime(newTime)\n\t\t\treturn\n\t\t}\n\n\t\tif (this.grabbedMainCanvas && getPlayer().song) {\n\t\t\tif (this.lastYGrabbed) {\n\t\t\t\tlet alreadyScrolling = getPlayer().scrolling != 0\n\t\t\t\tlet yChange =\n\t\t\t\t\t(getSetting(\"reverseNoteDirection\") ? -1 : 1) *\n\t\t\t\t\t(this.lastYGrabbed - pos.y)\n\t\t\t\tif (!alreadyScrolling) {\n\t\t\t\t\tgetPlayer().setTime(\n\t\t\t\t\t\tgetPlayer().getTime() - render.getTimeFromHeight(yChange)\n\t\t\t\t\t)\n\t\t\t\t\tthis.grabSpeed.push(yChange)\n\t\t\t\t\tif (this.grabSpeed.length > 3) {\n\t\t\t\t\t\tthis.grabSpeed.splice(0, 1)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.lastYGrabbed = pos.y\n\t\t}\n\n\t\trender.setMouseCoords(ev.clientX, ev.clientY)\n\n\t\tui.mouseMoved()\n\t}\n\n\tonMouseDown(ev, render) {\n\t\tlet pos = this.getXYFromMouseEvent(ev)\n\t\tif (\n\t\t\tev.target == document.body &&\n\t\t\trender.isOnMainCanvas(pos) &&\n\t\t\t!this.grabbedProgressBar\n\t\t) {\n\t\t\tgetPlayer().wasPaused = getPlayer().paused\n\t\t\tev.preventDefault()\n\t\t\tthis.grabbedMainCanvas = true\n\t\t\tgetPlayer().pause()\n\t\t}\n\t}\n\n\tonMouseUp(ev, render) {\n\t\tlet pos = this.getXYFromMouseEvent(ev)\n\t\tif (ev.target == document.body && render.isOnMainCanvas(pos)) {\n\t\t\tev.preventDefault()\n\t\t}\n\t\tif (this.grabSpeed.length) {\n\t\t\tgetPlayer().scrolling = this.grabSpeed[this.grabSpeed.length - 1] / 50\n\t\t\tgetPlayer().handleScroll()\n\t\t\tthis.grabSpeed = []\n\t\t}\n\t\tif (this.grabbedProgressBar || this.grabbedMainCanvas) {\n\t\t\tif (!getPlayer().wasPaused) {\n\t\t\t\tgetPlayer().resume()\n\t\t\t}\n\t\t}\n\t\tthis.grabbedProgressBar = false\n\t\tthis.grabbedMainCanvas = false\n\t\tthis.lastYGrabbed = false\n\t}\n\n\tgetXYFromMouseEvent(ev) {\n\t\tif (ev.clientX == undefined) {\n\t\t\tif (ev.touches.length) {\n\t\t\t\treturn {\n\t\t\t\t\tx: ev.touches[ev.touches.length - 1].clientX,\n\t\t\t\t\ty: ev.touches[ev.touches.length - 1].clientY\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn { x: -1, y: -1 }\n\t\t\t}\n\t\t}\n\t\treturn { x: ev.clientX, y: ev.clientY }\n\t}\n}\n","class MicInputHandler {\n\tconstructor() {\n\t\tif (navigator.mediaDevices === undefined) {\n\t\t\tnavigator.mediaDevices = {}\n\t\t}\n\n\t\tif (navigator.mediaDevices.getUserMedia === undefined) {\n\t\t\tnavigator.mediaDevices.getUserMedia = function (constraints) {\n\t\t\t\t// First get ahold of the legacy getUserMedia, if present\n\t\t\t\tvar getUserMedia =\n\t\t\t\t\tnavigator.webkitGetUserMedia ||\n\t\t\t\t\tnavigator.mozGetUserMedia ||\n\t\t\t\t\tnavigator.msGetUserMedia\n\n\t\t\t\t// Some browsers just don't implement it - return a rejected promise with an error\n\t\t\t\t// to keep a consistent interface\n\t\t\t\tif (!getUserMedia) {\n\t\t\t\t\treturn Promise.reject(\n\t\t\t\t\t\tnew Error(\"getUserMedia is not implemented in this browser\")\n\t\t\t\t\t)\n\t\t\t\t}\n\n\t\t\t\t// Otherwise, wrap the call to the old navigator.getUserMedia with a Promise\n\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\tgetUserMedia.call(navigator, constraints, resolve, reject)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tthis.frequencies = {}\n\t\tthis.lastStrongestFrequency = 0\n\t\tlet audioContext = new (window.AudioContext || window.webkitAudioContext)({\n\t\t\tsampleRate: 8000\n\t\t})\n\t\tvar source\n\t\tvar analyser = audioContext.createAnalyser()\n\t\tanalyser.minDecibels = -90\n\t\tanalyser.maxDecibels = -10\n\t\tanalyser.smoothingTimeConstant = 0.5\n\t\tthis.audioContext = audioContext\n\t\tthis.analyser = analyser\n\n\t\tif (navigator.mediaDevices.getUserMedia) {\n\t\t\tconsole.log(\"getUserMedia supported.\")\n\t\t\tvar constraints = { audio: true }\n\t\t\tnavigator.mediaDevices\n\t\t\t\t.getUserMedia(constraints)\n\t\t\t\t.then(\n\t\t\t\t\tfunction (stream) {\n\t\t\t\t\t\tsource = audioContext.createMediaStreamSource(stream)\n\t\t\t\t\t\t// source.connect(audioContext.destination)\n\t\t\t\t\t\tsource.connect(analyser)\n\n\t\t\t\t\t\t// this.getCurrentFrequency()\n\t\t\t\t\t}.bind(this)\n\t\t\t\t)\n\t\t\t\t.catch(function (err) {\n\t\t\t\t\tconsole.log(\"The following gUM error occured: \" + err)\n\t\t\t\t})\n\t\t}\n\t}\n\tgetCurrentFrequency() {\n\t\tthis.analyser.fftSize = 2048\n\t\tvar bufferLength = this.analyser.fftSize\n\t\tvar dataArray = new Float32Array(bufferLength)\n\t\tthis.analyser.getFloatTimeDomainData(dataArray)\n\t\treturn this.autoCorrelate(dataArray, this.audioContext.sampleRate)\n\n\t\t// var dataArray = new Uint8Array(bufferLength)\n\t\t// this.analyser.getByteFrequencyData(dataArray)\n\t\t// let maxIndex = 0\n\t\t// let max = -Infinity\n\t\t// let tot = dataArray.reduce((a, b) => a + b, 0)\n\t\t// let weightedFrequency = 0\n\t\t// let strongestFrequency = 0\n\t\t// let sampleRate = this.audioContext.sampleRate\n\t\t// dataArray.forEach((value, index) => {\n\t\t// \tif (value > max && value > 50) {\n\t\t// \t\tmax = value\n\t\t// \t\tmaxIndex = index\n\n\t\t// \t\tstrongestFrequency = (sampleRate / 2) * (index / bufferLength)\n\n\t\t// \t\tif (index > 0 && index < bufferLength) {\n\t\t// \t\t\tlet nextFreq = (sampleRate / 2) * ((index + 1) / bufferLength)\n\t\t// \t\t\tlet nextVal = dataArray[index + 1]\n\t\t// \t\t\tlet nextDiff = Math.abs(nextVal - value)\n\n\t\t// \t\t\tlet prevFreq = (sampleRate / 2) * ((index - 1) / bufferLength)\n\t\t// \t\t\tlet prevVal = dataArray[index - 1]\n\t\t// \t\t\tlet prevDiff = Math.abs(prevVal - value)\n\n\t\t// \t\t\tlet totVals = value + prevVal + nextVal\n\t\t// \t\t\tlet totDiff = nextDiff + prevDiff\n\n\t\t// \t\t\tstrongestFrequency =\n\t\t// \t\t\t\t(strongestFrequency * value) / totVals +\n\t\t// \t\t\t\t(nextVal / totVals) * nextFreq +\n\t\t// \t\t\t\t(prevVal / totVals) * prevFreq\n\t\t// \t\t}\n\t\t// \t}\n\t\t// \tweightedFrequency +=\n\t\t// \t\t(value / tot) * (sampleRate / 2) * (index / bufferLength)\n\t\t// })\n\t\t// if (max > 0) {\n\t\t// \tconsole.log(strongestFrequency)\n\t\t// }\n\t\t// return strongestFrequency\n\t}\n\tautoCorrelate(buf, sampleRate) {\n\t\t// Implements the ACF2+ algorithm\n\t\tvar SIZE = buf.length\n\t\tvar rms = 0\n\n\t\tfor (var i = 0; i < SIZE; i++) {\n\t\t\tvar val = buf[i]\n\t\t\trms += val * val\n\t\t}\n\t\trms = Math.sqrt(rms / SIZE)\n\t\tif (rms < 0.01)\n\t\t\t// not enough signal\n\t\t\treturn -1\n\n\t\tvar r1 = 0,\n\t\t\tr2 = SIZE - 1,\n\t\t\tthres = 0.2\n\t\tfor (var i = 0; i < SIZE / 2; i++)\n\t\t\tif (Math.abs(buf[i]) < thres) {\n\t\t\t\tr1 = i\n\t\t\t\tbreak\n\t\t\t}\n\t\tfor (var i = 1; i < SIZE / 2; i++)\n\t\t\tif (Math.abs(buf[SIZE - i]) < thres) {\n\t\t\t\tr2 = SIZE - i\n\t\t\t\tbreak\n\t\t\t}\n\n\t\tbuf = buf.slice(r1, r2)\n\t\tSIZE = buf.length\n\n\t\tvar c = new Array(SIZE).fill(0)\n\t\tfor (var i = 0; i < SIZE; i++)\n\t\t\tfor (var j = 0; j < SIZE - i; j++) c[i] = c[i] + buf[j] * buf[j + i]\n\n\t\tvar d = 0\n\t\twhile (c[d] > c[d + 1]) d++\n\t\tvar maxval = -1,\n\t\t\tmaxpos = -1\n\t\tfor (var i = d; i < SIZE; i++) {\n\t\t\tif (c[i] > maxval) {\n\t\t\t\tmaxval = c[i]\n\t\t\t\tmaxpos = i\n\t\t\t}\n\t\t}\n\t\tvar T0 = maxpos\n\n\t\tvar x1 = c[T0 - 1],\n\t\t\tx2 = c[T0],\n\t\t\tx3 = c[T0 + 1]\n\t\tlet a = (x1 + x3 - 2 * x2) / 2\n\t\tlet b = (x3 - x1) / 2\n\t\tif (a) T0 = T0 - b / (2 * a)\n\n\t\treturn sampleRate / T0\n\t}\n\tfrequencyToNote(frequency) {\n\t\tlet note = 12 * (Math.log(frequency / 440) / Math.log(2))\n\t\treturn Math.round(note) + 48\n\t}\n\n\tsetupUserMedia() {\n\t\tif (navigator.mediaDevices === undefined) {\n\t\t\tnavigator.mediaDevices = {}\n\t\t}\n\n\t\tif (navigator.mediaDevices.getUserMedia === undefined) {\n\t\t\tnavigator.mediaDevices.getUserMedia = function (constraints) {\n\t\t\t\t// First get ahold of the legacy getUserMedia, if present\n\t\t\t\tvar getUserMedia =\n\t\t\t\t\tnavigator.webkitGetUserMedia ||\n\t\t\t\t\tnavigator.mozGetUserMedia ||\n\t\t\t\t\tnavigator.msGetUserMedia\n\n\t\t\t\t// Some browsers just don't implement it - return a rejected promise with an error\n\t\t\t\t// to keep a consistent interface\n\t\t\t\tif (!getUserMedia) {\n\t\t\t\t\treturn Promise.reject(\n\t\t\t\t\t\tnew Error(\"getUserMedia is not implemented in this browser\")\n\t\t\t\t\t)\n\t\t\t\t}\n\n\t\t\t\t// Otherwise, wrap the call to the old navigator.getUserMedia with a Promise\n\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\tgetUserMedia.call(navigator, constraints, resolve, reject)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n}\n\nvar theMicInputHandler = null // new MicInputHandler()\n\nexport const getMicInputHandler = () => {\n\treturn theMicInputHandler\n}\nexport const getCurrentMicFrequency = () => {\n\tif (!theMicInputHandler) return -1\n\treturn theMicInputHandler.getCurrentFrequency()\n}\n\nexport const getCurrentMicNote = () => {\n\tif (!theMicInputHandler) return -1\n\treturn theMidInputHandler.frequencyToNote(\n\t\ttheMicInputHandler.getCurrentFrequency()\n\t)\n}\n","class MidiInputHandler {\n\tconstructor() {\n\t\t// patch up prefixes\n\t\twindow.AudioContext = window.AudioContext || window.webkitAudioContext\n\n\t\tthis.noMidiMessage =\n\t\t\t\"You will only be able to play Midi-Files. To play along, you need to use a browser with Midi-support, connect a Midi-Device to your computer and reload the page.\"\n\t\tthis.init()\n\t}\n\tinit() {\n\t\tif (navigator.requestMIDIAccess)\n\t\t\tnavigator\n\t\t\t\t.requestMIDIAccess()\n\t\t\t\t.then(this.onMIDIInit.bind(this), this.onMIDIReject.bind(this))\n\t\telse\n\t\t\talert(\n\t\t\t\t\"No MIDI support present in your browser.  Check https://developer.mozilla.org/en-US/docs/Web/API/MIDIAccess#Browser_compatibility to see which Browsers support this feature.\"\n\t\t\t)\n\t}\n\tgetAvailableInputDevices() {\n\t\ttry {\n\t\t\treturn Array.from(this.midiAccess.inputs.values())\n\t\t} catch (e) {\n\t\t\treturn []\n\t\t}\n\t}\n\tgetAvailableOutputDevices() {\n\t\ttry {\n\t\t\treturn Array.from(this.midiAccess.outputs.values())\n\t\t} catch (e) {\n\t\t\treturn []\n\t\t}\n\t}\n\tsetNoteOnCallback(callback) {\n\t\tthis.noteOnCallback = callback\n\t}\n\taddInput(device) {\n\t\tdevice.onmidimessage = this.MIDIMessageEventHandler.bind(this)\n\t}\n\tclearInput(device) {\n\t\tdevice.onmidimessage = null\n\t}\n\taddOutput(device) {\n\t\tthis.activeOutput = device\n\t}\n\tclearOutput(device) {\n\t\tif (this.activeOutput == device) {\n\t\t\tthis.activeOutput = null\n\t\t}\n\t}\n\tclearInputs() {\n\t\tArray.from(this.midiAccess.inputs.values()).forEach(\n\t\t\tdevice => (device.onmidimessage = null)\n\t\t)\n\t}\n\tisDeviceActive(device) {\n\t\treturn device.onmidimessage != null\n\t}\n\tisOutputDeviceActive(device) {\n\t\treturn this.activeOutput == device\n\t}\n\tonMIDIInit(midi) {\n\t\tthis.midiAccess = midi\n\t}\n\tsetNoteOffCallback(callback) {\n\t\tthis.noteOffCallback = callback\n\t}\n\tonMIDIReject(err) {\n\t\talert(\"The MIDI system failed to start. \" + this.noMidiMessage)\n\t}\n\n\tMIDIMessageEventHandler(event) {\n\t\t// Mask off the lower nibble (MIDI channel, which we don't care about)\n\t\tswitch (event.data[0] & 0xf0) {\n\t\t\tcase 0x90:\n\t\t\t\tif (event.data[2] != 0) {\n\t\t\t\t\t// if velocity != 0 => note-on\n\t\t\t\t\tthis.noteOnCallback(parseInt(event.data[1]) - 21)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\tcase 0x80:\n\t\t\t\tthis.noteOffCallback(parseInt(event.data[1]) - 21)\n\t\t\t\treturn\n\t\t}\n\t}\n\tgetActiveMidiOutput() {\n\t\treturn this.activeOutput\n\t}\n\tisOutputActive() {\n\t\treturn this.activeOutput ? true : false\n\t}\n\tisInputActive() {\n\t\tlet devices = this.getAvailableInputDevices()\n\t\tfor (let i = 0; i < devices.length; i++) {\n\t\t\tif (this.isDeviceActive(devices[i])) {\n\t\t\t\treturn true\n\t\t\t}\n\t\t}\n\t\treturn false\n\t}\n\tplayNote(noteNumber, velocity, noteOffVelocity, delayOn, delayOff) {\n\t\tlet noteOnEvent = [0x90, noteNumber, velocity]\n\t\tlet noteOffEvent = [0x80, noteNumber, noteOffVelocity]\n\t\tthis.activeOutput.send(noteOnEvent, window.performance.now() + delayOn)\n\t\tthis.activeOutput.send(noteOffEvent, window.performance.now() + delayOff)\n\t}\n\tmidiOutNoteOff() {}\n\tnoteOnCallback() {}\n\tnoteOffCallback() {}\n}\nconst theMidiHandler = new MidiInputHandler()\nexport const getMidiHandler = () => {\n\treturn theMidiHandler\n}\n","export class MidiLoader {\n\t/**\n\t *\n\t * @param {String} url\n\t */\n\tstatic async loadFile(url) {\n\t\tconst response = await fetch(url)\n\t\tif (response.ok) {\n\t\t\tlet arrayBuffer = await response.arrayBuffer()\n\t\t\tif (arrayBuffer) {\n\t\t\t\tarrayBuffer = new Uint8Array(arrayBuffer)\n\n\t\t\t\treturn parseMidi(arrayBuffer)\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Error(`could not load ${url}`)\n\t\t}\n\t}\n}\nfunction parseMidi(data) {\n\tvar p = new Parser(data)\n\n\tvar headerChunk = p.readChunk()\n\tif (headerChunk.id != \"MThd\")\n\t\tthrow \"Bad MIDI file.  Expected 'MHdr', got: '\" + headerChunk.id + \"'\"\n\tvar header = parseHeader(headerChunk.data)\n\n\tvar tracks = []\n\tfor (var i = 0; !p.eof() && i < header.numTracks; i++) {\n\t\tvar trackChunk = p.readChunk()\n\t\tif (trackChunk.id != \"MTrk\")\n\t\t\tthrow \"Bad MIDI file.  Expected 'MTrk', got: '\" + trackChunk.id + \"'\"\n\t\tvar track = parseTrack(trackChunk.data)\n\t\ttracks.push(track)\n\t}\n\n\tlet midiData = {\n\t\theader: header,\n\t\ttracks: tracks\n\t}\n\n\tlet temporalData = Parser.setTemporal(midiData)\n\treturn {\n\t\theader: header,\n\t\ttracks: tracks,\n\t\ttemporalData: temporalData\n\t}\n}\n\nfunction parseHeader(data) {\n\tvar p = new Parser(data)\n\n\tvar format = p.readUInt16()\n\tvar numTracks = p.readUInt16()\n\n\tvar result = {\n\t\tformat: format,\n\t\tnumTracks: numTracks\n\t}\n\n\tvar timeDivision = p.readUInt16()\n\tif (timeDivision & 0x8000) {\n\t\tresult.framesPerSecond = 0x100 - (timeDivision >> 8)\n\t\tresult.ticksPerFrame = timeDivision & 0xff\n\t} else {\n\t\tresult.ticksPerBeat = timeDivision\n\t}\n\n\treturn result\n}\n\nfunction parseTrack(data) {\n\tlet parser = new Parser(data)\n\n\tlet events = []\n\twhile (!parser.eof()) {\n\t\tlet event = readEvent()\n\t\tevents.push(event)\n\t}\n\n\treturn events\n\n\tvar lastEventTypeByte = null\n\n\tfunction readEvent() {\n\t\tvar event = {}\n\t\tevent.deltaTime = parser.readVarInt()\n\n\t\tvar eventTypeByte = parser.readUInt8()\n\n\t\tif ((eventTypeByte & 0xf0) === 0xf0) {\n\t\t\t// system / meta event\n\t\t\tif (eventTypeByte === 0xff) {\n\t\t\t\t// meta event\n\t\t\t\tevent.meta = true\n\t\t\t\tvar metatypeByte = parser.readUInt8()\n\t\t\t\tvar length = parser.readVarInt()\n\t\t\t\tswitch (metatypeByte) {\n\t\t\t\t\tcase 0x00:\n\t\t\t\t\t\tevent.type = \"sequenceNumber\"\n\t\t\t\t\t\tif (length !== 2)\n\t\t\t\t\t\t\tthrow (\n\t\t\t\t\t\t\t\t\"Expected length for sequenceNumber event is 2, got \" + length\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\tevent.number = parser.readUInt16()\n\t\t\t\t\t\treturn event\n\t\t\t\t\tcase 0x01:\n\t\t\t\t\t\tevent.type = \"text\"\n\t\t\t\t\t\tevent.text = parser.readString(length)\n\t\t\t\t\t\treturn event\n\t\t\t\t\tcase 0x02:\n\t\t\t\t\t\tevent.type = \"copyrightNotice\"\n\t\t\t\t\t\tevent.text = parser.readString(length)\n\t\t\t\t\t\treturn event\n\t\t\t\t\tcase 0x03:\n\t\t\t\t\t\tevent.type = \"trackName\"\n\t\t\t\t\t\tevent.text = parser.readString(length)\n\t\t\t\t\t\treturn event\n\t\t\t\t\tcase 0x04:\n\t\t\t\t\t\tevent.type = \"instrumentName\"\n\t\t\t\t\t\tevent.text = parser.readString(length)\n\t\t\t\t\t\treturn event\n\t\t\t\t\tcase 0x05:\n\t\t\t\t\t\tevent.type = \"lyrics\"\n\t\t\t\t\t\tevent.text = parser.readString(length)\n\t\t\t\t\t\treturn event\n\t\t\t\t\tcase 0x06:\n\t\t\t\t\t\tevent.type = \"marker\"\n\t\t\t\t\t\tevent.text = parser.readString(length)\n\t\t\t\t\t\treturn event\n\t\t\t\t\tcase 0x07:\n\t\t\t\t\t\tevent.type = \"cuePoint\"\n\t\t\t\t\t\tevent.text = parser.readString(length)\n\t\t\t\t\t\treturn event\n\t\t\t\t\tcase 0x20:\n\t\t\t\t\t\tevent.type = \"channelPrefix\"\n\t\t\t\t\t\tif (length != 1)\n\t\t\t\t\t\t\tthrow (\n\t\t\t\t\t\t\t\t\"Expected length for channelPrefix event is 1, got \" + length\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\tevent.channel = parser.readUInt8()\n\t\t\t\t\t\treturn event\n\t\t\t\t\tcase 0x21:\n\t\t\t\t\t\tevent.type = \"portPrefix\"\n\t\t\t\t\t\tif (length != 1)\n\t\t\t\t\t\t\tthrow \"Expected length for portPrefix event is 1, got \" + length\n\t\t\t\t\t\tevent.port = parser.readUInt8()\n\t\t\t\t\t\treturn event\n\t\t\t\t\tcase 0x2f:\n\t\t\t\t\t\tevent.type = \"endOfTrack\"\n\t\t\t\t\t\tif (length != 0)\n\t\t\t\t\t\t\tthrow \"Expected length for endOfTrack event is 0, got \" + length\n\t\t\t\t\t\treturn event\n\t\t\t\t\tcase 0x51:\n\t\t\t\t\t\tevent.type = \"setTempo\"\n\t\t\t\t\t\tif (length != 3)\n\t\t\t\t\t\t\tthrow \"Expected length for setTempo event is 3, got \" + length\n\t\t\t\t\t\tevent.microsecondsPerBeat = parser.readUInt24()\n\t\t\t\t\t\treturn event\n\t\t\t\t\tcase 0x54:\n\t\t\t\t\t\tevent.type = \"smpteOffset\"\n\t\t\t\t\t\tif (length != 5)\n\t\t\t\t\t\t\tthrow \"Expected length for smpteOffset event is 5, got \" + length\n\t\t\t\t\t\tvar hourByte = parser.readUInt8()\n\t\t\t\t\t\tvar FRAME_RATES = { 0x00: 24, 0x20: 25, 0x40: 29, 0x60: 30 }\n\t\t\t\t\t\tevent.frameRate = FRAME_RATES[hourByte & 0x60]\n\t\t\t\t\t\tevent.hour = hourByte & 0x1f\n\t\t\t\t\t\tevent.min = parser.readUInt8()\n\t\t\t\t\t\tevent.sec = parser.readUInt8()\n\t\t\t\t\t\tevent.frame = parser.readUInt8()\n\t\t\t\t\t\tevent.subFrame = parser.readUInt8()\n\t\t\t\t\t\treturn event\n\t\t\t\t\tcase 0x58:\n\t\t\t\t\t\tevent.type = \"timeSignature\"\n\t\t\t\t\t\tif (length != 4)\n\t\t\t\t\t\t\tthrow (\n\t\t\t\t\t\t\t\t\"Expected length for timeSignature event is 4, got \" + length\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\tevent.numerator = parser.readUInt8()\n\t\t\t\t\t\tevent.denominator = 1 << parser.readUInt8()\n\t\t\t\t\t\tevent.metronome = parser.readUInt8()\n\t\t\t\t\t\tevent.thirtyseconds = parser.readUInt8()\n\t\t\t\t\t\treturn event\n\t\t\t\t\tcase 0x59:\n\t\t\t\t\t\tevent.type = \"keySignature\"\n\t\t\t\t\t\tif (length != 2)\n\t\t\t\t\t\t\tthrow \"Expected length for keySignature event is 2, got \" + length\n\t\t\t\t\t\tevent.key = parser.readInt8()\n\t\t\t\t\t\tevent.scale = parser.readUInt8()\n\t\t\t\t\t\treturn event\n\t\t\t\t\tcase 0x7f:\n\t\t\t\t\t\tevent.type = \"sequencerSpecific\"\n\t\t\t\t\t\tevent.data = parser.readBytes(length)\n\t\t\t\t\t\treturn event\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tevent.type = \"unknownMeta\"\n\t\t\t\t\t\tevent.data = parser.readBytes(length)\n\t\t\t\t\t\tevent.metatypeByte = metatypeByte\n\t\t\t\t\t\treturn event\n\t\t\t\t}\n\t\t\t} else if (eventTypeByte == 0xf0) {\n\t\t\t\tevent.type = \"sysEx\"\n\t\t\t\tvar length = parser.readVarInt()\n\t\t\t\tevent.data = parser.readBytes(length)\n\t\t\t\treturn event\n\t\t\t} else if (eventTypeByte == 0xf7) {\n\t\t\t\tevent.type = \"endSysEx\"\n\t\t\t\tvar length = parser.readVarInt()\n\t\t\t\tevent.data = parser.readBytes(length)\n\t\t\t\treturn event\n\t\t\t} else {\n\t\t\t\tthrow \"Unrecognised MIDI event type byte: \" + eventTypeByte\n\t\t\t}\n\t\t} else {\n\t\t\t// channel event\n\t\t\tvar param1\n\t\t\tif ((eventTypeByte & 0x80) === 0) {\n\t\t\t\t// running status - reuse lastEventTypeByte as the event type.\n\t\t\t\t// eventTypeByte is actually the first parameter\n\t\t\t\tif (lastEventTypeByte === null)\n\t\t\t\t\tthrow \"Running status byte encountered before status byte\"\n\t\t\t\tparam1 = eventTypeByte\n\t\t\t\teventTypeByte = lastEventTypeByte\n\t\t\t\tevent.running = true\n\t\t\t} else {\n\t\t\t\tparam1 = parser.readUInt8()\n\t\t\t\tlastEventTypeByte = eventTypeByte\n\t\t\t}\n\t\t\tvar eventType = eventTypeByte >> 4\n\t\t\tevent.channel = eventTypeByte & 0x0f\n\t\t\tswitch (eventType) {\n\t\t\t\tcase 0x08:\n\t\t\t\t\tevent.type = \"noteOff\"\n\t\t\t\t\tevent.midiNoteNumber = param1\n\t\t\t\t\tevent.noteNumber = param1 - 21\n\t\t\t\t\tevent.velocity = parser.readUInt8()\n\t\t\t\t\treturn event\n\t\t\t\tcase 0x09:\n\t\t\t\t\tvar velocity = parser.readUInt8()\n\t\t\t\t\tevent.type = velocity === 0 ? \"noteOff\" : \"noteOn\"\n\t\t\t\t\tevent.midiNoteNumber = param1\n\t\t\t\t\tevent.noteNumber = param1 - 21\n\t\t\t\t\tevent.velocity = velocity\n\t\t\t\t\tif (velocity === 0) event.byte9 = true\n\t\t\t\t\treturn event\n\t\t\t\tcase 0x0a:\n\t\t\t\t\tevent.type = \"noteAftertouch\"\n\t\t\t\t\tevent.midiNoteNumber = param1\n\t\t\t\t\tevent.noteNumber = param1 - 21\n\t\t\t\t\tevent.amount = parser.readUInt8()\n\t\t\t\t\treturn event\n\t\t\t\tcase 0x0b:\n\t\t\t\t\tevent.type = \"controller\"\n\t\t\t\t\tevent.controllerType = param1\n\t\t\t\t\tevent.value = parser.readUInt8()\n\t\t\t\t\treturn event\n\t\t\t\tcase 0x0c:\n\t\t\t\t\tevent.type = \"programChange\"\n\t\t\t\t\tevent.programNumber = param1\n\t\t\t\t\treturn event\n\t\t\t\tcase 0x0d:\n\t\t\t\t\tevent.type = \"channelAftertouch\"\n\t\t\t\t\tevent.amount = param1\n\t\t\t\t\treturn event\n\t\t\t\tcase 0x0e:\n\t\t\t\t\tevent.type = \"pitchBend\"\n\t\t\t\t\tevent.value = param1 + (parser.readUInt8() << 7) - 0x2000\n\t\t\t\t\treturn event\n\t\t\t\tdefault:\n\t\t\t\t\tthrow \"Unrecognised MIDI event type: \" + eventType\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass Parser {\n\tconstructor(data) {\n\t\tthis.buffer = data\n\t\tthis.bufferLen = this.buffer.length\n\t\tthis.pos = 0\n\t}\n\n\teof() {\n\t\treturn this.pos >= this.bufferLen\n\t}\n\treadUInt8() {\n\t\tlet result = this.buffer[this.pos]\n\t\tthis.pos += 1\n\t\treturn result\n\t}\n\treadInt8() {\n\t\tlet u = this.readUInt8()\n\t\treturn u & 0x80 ? u - 0x100 : u\n\t}\n\treadUInt16() {\n\t\tlet b0 = this.readUInt8()\n\t\tlet b1 = this.readUInt8()\n\t\treturn (b0 << 8) + b1\n\t}\n\treadInt16() {\n\t\tlet u = this.readUInt16()\n\t\treturn u & 0x8000 ? u - 0x10000 : u\n\t}\n\treadUInt24() {\n\t\tlet b0 = this.readUInt8()\n\t\tlet b1 = this.readUInt8()\n\t\tlet b2 = this.readUInt8()\n\t\treturn (b0 << 16) + (b1 << 8) + b2\n\t}\n\treadInt24() {\n\t\tlet u = this.readUInt24()\n\t\treturn u & 0x800000 ? u - 0x1000000 : u\n\t}\n\treadUInt32() {\n\t\tlet b0 = this.readUInt8()\n\t\tlet b1 = this.readUInt8()\n\t\tlet b2 = this.readUInt8()\n\t\tlet b3 = this.readUInt8()\n\t\treturn (b0 << 24) + (b1 << 16) + (b2 << 8) + b3\n\t}\n\treadBytes(length) {\n\t\tlet bytes = this.buffer.slice(this.pos, this.pos + length)\n\t\tthis.pos += length\n\t\treturn bytes\n\t}\n\treadString(length) {\n\t\tlet bytes = this.readBytes(length)\n\t\treturn String.fromCharCode.apply(null, bytes)\n\t}\n\treadVarInt() {\n\t\tlet result = 0\n\t\twhile (!this.eof()) {\n\t\t\tlet b = this.readUInt8()\n\t\t\tif (b & 0x80) {\n\t\t\t\tresult += b & 0x7f\n\t\t\t\tresult <<= 7\n\t\t\t} else {\n\t\t\t\treturn result + b\n\t\t\t}\n\t\t}\n\t\treturn result\n\t}\n\treadChunk() {\n\t\tlet id = this.readString(4)\n\t\tlet length = this.readUInt32()\n\t\tlet data = this.readBytes(length)\n\t\treturn {\n\t\t\tid: id,\n\t\t\tdata: data,\n\t\t\tlength: length\n\t\t}\n\t}\n\n\t/*********\n\t * <ADAPTED FROM JASMID>\n\t * Replayer.js\n\t *********/\n\tstatic setTemporal(midiObj) {\n\t\tlet trackStates = []\n\t\tlet beatsPerMinute = 120\n\t\tlet ticksPerBeat = midiObj.header.ticksPerBeat\n\t\tvar totTime = 0\n\t\tvar bpms = []\n\t\tvar generatedBeats = 0\n\t\tvar beatsBySecond = { 0: [0] }\n\t\tvar sustainsBySecond = {}\n\t\tlet channels = getDefaultChannels()\n\t\tfor (let t in midiObj.tracks) {\n\t\t\tlet track = midiObj.tracks[t]\n\t\t\ttrackStates.push({\n\t\t\t\tnextEventIndex: 0,\n\t\t\t\tticksToNextEvent: track.length ? track[0].deltaTime : null\n\t\t\t})\n\t\t}\n\t\tvar midiEvent\n\n\t\tfunction getNextEvent() {\n\t\t\tvar ticksToNextEvent = null\n\t\t\tvar nextEventTrack = null\n\t\t\tvar nextEventIndex = null\n\n\t\t\t//search all tracks for next event.\n\t\t\tfor (var i = 0; i < trackStates.length; i++) {\n\t\t\t\tif (\n\t\t\t\t\ttrackStates[i].ticksToNextEvent != null &&\n\t\t\t\t\t(ticksToNextEvent == null ||\n\t\t\t\t\t\ttrackStates[i].ticksToNextEvent < ticksToNextEvent)\n\t\t\t\t) {\n\t\t\t\t\tticksToNextEvent = trackStates[i].ticksToNextEvent\n\t\t\t\t\tnextEventTrack = i\n\t\t\t\t\tnextEventIndex = trackStates[i].nextEventIndex\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (nextEventTrack != null) {\n\t\t\t\t// get next event from that track and\n\t\t\t\tvar nextEvent = midiObj.tracks[nextEventTrack][nextEventIndex]\n\t\t\t\tif (midiObj.tracks[nextEventTrack][nextEventIndex + 1]) {\n\t\t\t\t\ttrackStates[nextEventTrack].ticksToNextEvent +=\n\t\t\t\t\t\tmidiObj.tracks[nextEventTrack][nextEventIndex + 1].deltaTime\n\t\t\t\t} else {\n\t\t\t\t\ttrackStates[nextEventTrack].ticksToNextEvent = null\n\t\t\t\t}\n\t\t\t\ttrackStates[nextEventTrack].nextEventIndex += 1\n\t\t\t\t// advance timings on all tracks\n\t\t\t\tfor (var i = 0; i < trackStates.length; i++) {\n\t\t\t\t\tif (trackStates[i].ticksToNextEvent != null) {\n\t\t\t\t\t\ttrackStates[i].ticksToNextEvent -= ticksToNextEvent\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tticksToEvent: ticksToNextEvent,\n\t\t\t\t\tevent: nextEvent,\n\t\t\t\t\ttrack: nextEventTrack\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn null\n\t\t\t}\n\t\t} //end getNextEvent\n\n\t\tfunction processNext() {\n\t\t\tlet newBPM = false\n\t\t\tif (midiEvent.event.type == \"setTempo\") {\n\t\t\t\t// tempo change events can occur anywhere in the middle and affect events that follow\n\t\t\t\tbeatsPerMinute = 60000000 / midiEvent.event.microsecondsPerBeat\n\t\t\t\tnewBPM = true\n\t\t\t}\n\t\t\tif (\n\t\t\t\tmidiEvent.event.type == \"controller\" &&\n\t\t\t\tmidiEvent.event.controllerType == 7\n\t\t\t) {\n\t\t\t\tchannels[midiEvent.event.channel].volume = midiEvent.event.value\n\t\t\t}\n\n\t\t\tvar beatsToGenerate = 0\n\t\t\tvar secondsToGenerate = 0\n\t\t\tif (midiEvent.ticksToEvent > 0) {\n\t\t\t\tbeatsToGenerate = midiEvent.ticksToEvent / ticksPerBeat\n\t\t\t\tsecondsToGenerate = beatsToGenerate / (beatsPerMinute / 60)\n\t\t\t}\n\t\t\tvar time = secondsToGenerate * 1000 || 0\n\t\t\tmidiEvent.event.temporalDelta = time\n\t\t\ttotTime += time\n\t\t\tmidiEvent.event.timestamp = totTime\n\n\t\t\t//Keep track of sustain on/offs\n\t\t\tif (\n\t\t\t\tmidiEvent.event.type == \"controller\" &&\n\t\t\t\tmidiEvent.event.controllerType == 64\n\t\t\t) {\n\t\t\t\tlet currentSecond = Math.floor(totTime / 1000)\n\t\t\t\tif (!sustainsBySecond.hasOwnProperty(currentSecond)) {\n\t\t\t\t\tsustainsBySecond[currentSecond] = []\n\t\t\t\t}\n\t\t\t\tsustainsBySecond[currentSecond].push({\n\t\t\t\t\ttimestamp: totTime,\n\t\t\t\t\tisOn: midiEvent.event.value > 64,\n\t\t\t\t\tvalue: midiEvent.event.value\n\t\t\t\t})\n\t\t\t}\n\n\t\t\t//keep track of completed beats to show beatLines\n\t\t\tgeneratedBeats +=\n\t\t\t\tMath.floor(ticksPerBeat * beatsToGenerate) / ticksPerBeat\n\t\t\twhile (generatedBeats >= 1) {\n\t\t\t\tgeneratedBeats -= 1\n\t\t\t\tlet beatTime = totTime - generatedBeats * secondsToGenerate * 1000\n\t\t\t\tlet beatSecond = Math.floor(beatTime / 1000)\n\t\t\t\tif (!beatsBySecond.hasOwnProperty(beatSecond)) {\n\t\t\t\t\tbeatsBySecond[beatSecond] = []\n\t\t\t\t}\n\t\t\t\tbeatsBySecond[beatSecond].push(beatTime)\n\t\t\t}\n\n\t\t\tif (midiEvent.event.hasOwnProperty(\"channel\")) {\n\t\t\t\tmidiEvent.event.channelVolume = channels[midiEvent.event.channel].volume\n\t\t\t}\n\t\t\tmidiEvent = getNextEvent()\n\t\t\tif (newBPM) {\n\t\t\t\tbpms.push({\n\t\t\t\t\tbpm: beatsPerMinute,\n\t\t\t\t\ttimestamp: totTime\n\t\t\t\t})\n\t\t\t}\n\t\t} //end processNext\n\n\t\tif ((midiEvent = getNextEvent())) {\n\t\t\twhile (midiEvent) processNext(true)\n\t\t}\n\t\t/*********\n\t\t * </ADAPTED FROM JASMID>\n\t\t *********/\n\t\treturn { bpms, beatsBySecond, sustainsBySecond: sustainsBySecond }\n\t}\n}\n\nfunction getDefaultChannels() {\n\tlet channels = {}\n\tfor (var i = 0; i <= 15; i++) {\n\t\tchannels[i] = {\n\t\t\tinstrument: i,\n\t\t\tpitchBend: 0,\n\t\t\tvolume: 127,\n\t\t\tvolumeControl: 50,\n\t\t\tmute: false,\n\t\t\tmono: false,\n\t\t\tomni: false,\n\t\t\tsolo: false\n\t\t}\n\t}\n\tchannels[9].instrument = -1\n\treturn channels\n}\n","import { getSetting } from \"../settings/Settings.js\"\nimport { isBlack } from \"../Util.js\"\n/**\n * Class that renders the background of the main canvas\n */\nexport class BackgroundRender {\n\tconstructor(ctx, renderDimensions) {\n\t\tthis.ctx = ctx\n\t\tthis.renderDimensions = renderDimensions\n\t\tthis.renderDimensions.registerResizeCallback(this.render.bind(this))\n\t\tthis.render()\n\t}\n\trenderIfColorsChanged() {\n\t\tif (\n\t\t\tthis.col1 != getSetting(\"bgCol1\") ||\n\t\t\tthis.col2 != getSetting(\"bgCol2\") ||\n\t\t\tthis.col3 != getSetting(\"bgCol3\") ||\n\t\t\tthis.pianoPosition != getSetting(\"pianoPosition\")\n\t\t) {\n\t\t\tthis.render()\n\t\t}\n\t}\n\trender() {\n\t\tlet c = this.ctx\n\t\tc.clearRect(\n\t\t\t0,\n\t\t\t0,\n\t\t\tthis.renderDimensions.windowWidth,\n\t\t\tthis.renderDimensions.windowHeight\n\t\t)\n\n\t\tlet reversed = getSetting(\"reverseNoteDirection\")\n\t\tlet bgHeight = reversed\n\t\t\t? this.renderDimensions.windowHeight -\n\t\t\t  this.renderDimensions.getAbsolutePianoPosition()\n\t\t\t: this.renderDimensions.getAbsolutePianoPosition()\n\t\tlet bgY = reversed ? this.renderDimensions.getAbsolutePianoPosition() : 0\n\t\tconst col1 = getSetting(\"bgCol1\")\n\t\tconst col2 = getSetting(\"bgCol2\")\n\t\tconst col3 = getSetting(\"bgCol3\")\n\t\tc.strokeStyle = col1\n\t\tc.fillStyle = col2\n\t\tlet whiteKey = 0\n\t\tfor (let i = 0; i < 88; i++) {\n\t\t\tif (!isBlack(i)) {\n\t\t\t\tc.strokeStyle = col3\n\t\t\t\tc.fillStyle = (i + 2) % 2 ? col1 : col2\n\t\t\t\tc.lineWidth = 1\n\n\t\t\t\tlet dim = this.renderDimensions.getKeyDimensions(i)\n\t\t\t\tc.fillRect(dim.x, bgY, dim.w, bgHeight)\n\n\t\t\t\tif (1 + (whiteKey % 7) == 3) {\n\t\t\t\t\tc.lineWidth = 2\n\t\t\t\t\tc.beginPath()\n\t\t\t\t\tc.moveTo(dim.x, bgY)\n\t\t\t\t\tc.lineTo(dim.x, bgY + bgHeight)\n\t\t\t\t\tc.stroke()\n\t\t\t\t\tc.closePath()\n\t\t\t\t}\n\t\t\t\twhiteKey++\n\t\t\t}\n\t\t}\n\t\tthis.col1 = col1\n\t\tthis.col2 = col2\n\t\tthis.col3 = col3\n\t\tthis.pianoPosition = getSetting(\"pianoPosition\")\n\t}\n}\n","import { CONST } from \"../data/CONST.js\"\nimport { getSetting } from \"../settings/Settings.js\"\nimport { formatTime } from \"../Util.js\"\n\n/**\n * Class to render some general debug-info or when mouse is hovered over a note.\n */\nexport class DebugRender {\n\tconstructor(active, ctx, renderDimensions) {\n\t\tthis.noteInfoBoxesToDraw = []\n\t\tthis.active = active\n\t\tthis.ctx = ctx\n\t\tthis.renderDimensions = renderDimensions\n\n\t\tthis.fpsFilterStrength = 5\n\t\tthis.frameTime = 0\n\t\tthis.lastTimestamp = window.performance.now()\n\t}\n\taddNote(note) {\n\t\tthis.noteInfoBoxesToDraw.push(note)\n\t}\n\trender(renderInfos, mouseX, mouseY, menuHeight) {\n\t\tthis.thisTimestamp = window.performance.now()\n\t\tif (getSetting(\"showFps\")) {\n\t\t\tlet timePassed = this.thisTimestamp - this.lastTimestamp\n\t\t\tthis.frameTime += (timePassed - this.frameTime) / this.fpsFilterStrength\n\t\t\tthis.ctx.font = \"20px Arial black\"\n\t\t\tthis.ctx.fillStyle = \"rgba(255,255,255,0.8)\"\n\t\t\tthis.ctx.fillText(\n\t\t\t\t(1000 / this.frameTime).toFixed(0) + \" FPS\",\n\t\t\t\t20,\n\t\t\t\tmenuHeight + 60\n\t\t\t)\n\t\t}\n\n\t\tthis.lastTimestamp = this.thisTimestamp\n\n\t\tthis.renderNoteDebugInfo(renderInfos, mouseX, mouseY)\n\t}\n\trenderNoteDebugInfo(renderInfos, mouseX, mouseY) {\n\t\tif (getSetting(\"showNoteDebugInfo\")) {\n\t\t\tlet amountOfNotesDrawn = 0\n\t\t\tObject.keys(renderInfos).forEach(trackIndex => {\n\t\t\t\trenderInfos[trackIndex].black\n\t\t\t\t\t.filter(renderInfo =>\n\t\t\t\t\t\tthis.isMouseInRenderInfo(renderInfo, mouseX, mouseY)\n\t\t\t\t\t)\n\t\t\t\t\t.forEach(renderInfo => {\n\t\t\t\t\t\tthis.drawNoteInfoBox(renderInfo, mouseX, mouseY, amountOfNotesDrawn)\n\t\t\t\t\t\tamountOfNotesDrawn++\n\t\t\t\t\t})\n\t\t\t\trenderInfos[trackIndex].white\n\t\t\t\t\t.filter(renderInfo =>\n\t\t\t\t\t\tthis.isMouseInRenderInfo(renderInfo, mouseX, mouseY)\n\t\t\t\t\t)\n\t\t\t\t\t.forEach(renderInfo => {\n\t\t\t\t\t\tthis.drawNoteInfoBox(renderInfo, mouseX, mouseY, amountOfNotesDrawn)\n\t\t\t\t\t\tamountOfNotesDrawn++\n\t\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\tisMouseInRenderInfo(renderInfo, mouseX, mouseY) {\n\t\treturn (\n\t\t\tmouseX > renderInfo.x &&\n\t\t\tmouseX < renderInfo.x + renderInfo.w &&\n\t\t\tmouseY > renderInfo.y &&\n\t\t\tmouseY < renderInfo.y + renderInfo.h\n\t\t)\n\t}\n\n\tdrawNoteInfoBox(renderInfo, mouseX, mouseY, amountOfNotesDrawn) {\n\t\tlet c = this.ctx\n\t\tc.fillStyle = \"white\"\n\t\tc.font = \"12px Arial black\"\n\t\tc.textBaseline = \"top\"\n\t\tc.strokeStyle = renderInfo.fillStyle\n\t\tc.lineWidth = 4\n\n\t\tlet lines = [\n\t\t\t\"Note: \" + CONST.MIDI_NOTE_TO_KEY[renderInfo.noteNumber],\n\t\t\t\"NoteNumber: \" + renderInfo.noteNumber,\n\t\t\t\"MidiNoteNumber: \" + renderInfo.midiNoteNumber,\n\t\t\t\"Start: \" + renderInfo.timestamp,\n\t\t\t\"End: \" + renderInfo.offTime,\n\t\t\t\"Duration: \" + renderInfo.duration,\n\t\t\t\"Velocity: \" + renderInfo.velocity,\n\t\t\t\"Instrument: \" + renderInfo.instrument,\n\t\t\t\"Track: \" + renderInfo.track,\n\t\t\t\"Channel: \" + renderInfo.channel\n\t\t]\n\t\tlet left = mouseX > this.renderDimensions.windowWidth / 2 ? -160 : 60\n\t\tlet top =\n\t\t\tmouseY > this.renderDimensions.windowHeight / 2\n\t\t\t\t? -10 - 14 * lines.length\n\t\t\t\t: 10\n\n\t\ttop += amountOfNotesDrawn * lines.length * 15\n\t\tc.beginPath()\n\t\tc.moveTo(mouseX + left - 4, mouseY + top)\n\t\tc.lineTo(mouseX + left - 4, mouseY + top + lines.length * 14)\n\t\tc.stroke()\n\t\tfor (let l in lines) {\n\t\t\tc.fillText(lines[l], mouseX + left, mouseY + top + 14 * l)\n\t\t}\n\t}\n}\n","import { getCurrentSong } from \"../player/Player.js\"\nimport { getSetting } from \"../settings/Settings.js\"\n\n/**\n * Class to render the markers in the midi-song\n */\nexport class InSongTextRenderer {\n\tconstructor(ctx, renderDimensions) {\n\t\tthis.ctx = ctx\n\t\tthis.renderDimensions = renderDimensions\n\t}\n\trender(time) {\n\t\tif (time > -0.7) return\n\n\t\tlet c = this.ctx\n\t\tc.fillStyle = \"rgba(255,255,255,0.8)\"\n\t\tc.strokeStyle = \"rgba(255,255,255,0.8)\"\n\t\tc.font = \"40px Arial black\"\n\t\tc.textBaseline = \"top\"\n\t\tc.lineWidth = 1.5\n\t\tlet text = getCurrentSong().name\n\t\tlet y = this.renderDimensions.getYForTime(-700 - time * 1000)\n\t\tlet txtWd = c.measureText(text).width\n\t\tc.fillText(text, this.renderDimensions.windowWidth / 2 - txtWd / 2, y + 3)\n\t}\n}\n","import { getSetting } from \"../settings/Settings.js\"\n\n/**\n * Class to render the markers in the midi-song\n */\nexport class MarkerRenderer {\n\tconstructor(ctx, renderDimensions) {\n\t\tthis.ctx = ctx\n\t\tthis.renderDimensions = renderDimensions\n\t}\n\trender(time, markers) {\n\t\tif (getSetting(\"showMarkersSong\")) {\n\t\t\tlet lookAheadTime = Math.ceil(\n\t\t\t\ttime + this.renderDimensions.getSecondsDisplayedBefore() + 1\n\t\t\t)\n\n\t\t\tlet c = this.ctx\n\t\t\tc.fillStyle = \"rgba(255,255,255,0.8)\"\n\t\t\tc.strokeStyle = \"rgba(255,255,255,0.8)\"\n\t\t\tc.font = \"25px Arial black\"\n\t\t\tc.textBaseline = \"top\"\n\t\t\tc.lineWidth = 1.5\n\t\t\tmarkers.forEach(marker => {\n\t\t\t\tif (\n\t\t\t\t\tmarker.timestamp / 1000 >= time &&\n\t\t\t\t\tmarker.timestamp / 1000 < lookAheadTime\n\t\t\t\t) {\n\t\t\t\t\tlet y = this.renderDimensions.getYForTime(\n\t\t\t\t\t\tmarker.timestamp - time * 1000\n\t\t\t\t\t)\n\t\t\t\t\tlet txtWd = c.measureText(marker.text).width\n\t\t\t\t\tc.fillText(\n\t\t\t\t\t\tmarker.text,\n\t\t\t\t\t\tthis.renderDimensions.windowWidth / 2 - txtWd / 2,\n\t\t\t\t\t\ty + 3\n\t\t\t\t\t)\n\t\t\t\t\tc.beginPath()\n\t\t\t\t\tc.moveTo(0, y)\n\t\t\t\t\tc.lineTo(this.renderDimensions.windowWidth, y)\n\t\t\t\t\tc.closePath()\n\t\t\t\t\tc.stroke()\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n}\n","/**\n * Class to render measure lines on the main canvas.\n */\nexport class MeasureLinesRender {\n\tconstructor(ctx, renderDimensions) {\n\t\tthis.ctx = ctx\n\t\tthis.renderDimensions = renderDimensions\n\t}\n\trender(time, measureLines) {\n\t\tlet ctx = this.ctx\n\n\t\tctx.strokeStyle = \"rgba(255,255,255,0.3)\"\n\n\t\tctx.lineWidth = 0.5\n\t\tlet currentSecond = Math.floor(time)\n\t\tctx.beginPath()\n\t\tlet firstSecondShown =\n\t\t\tcurrentSecond - this.renderDimensions.getSecondsDisplayedAfter() - 1\n\t\tlet lastSecondShown =\n\t\t\tcurrentSecond + this.renderDimensions.getSecondsDisplayedBefore() + 1\n\t\tfor (let i = firstSecondShown; i < lastSecondShown; i++) {\n\t\t\tif (!measureLines[i]) {\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tmeasureLines[i].forEach(tempoLine => {\n\t\t\t\tlet ht = this.renderDimensions.getYForTime(tempoLine - time * 1000)\n\n\t\t\t\tctx.moveTo(0, ht)\n\t\t\t\tctx.lineTo(this.renderDimensions.windowWidth, ht)\n\t\t\t})\n\t\t}\n\t\tctx.closePath()\n\t\tctx.stroke()\n\t}\n}\n","import { getSetting } from \"../settings/Settings.js\"\n\n/**\n * Particles handler\n */\nexport class NoteParticleRender {\n\tconstructor(ctx, renderDimensions) {\n\t\tthis.ctx = ctx\n\t\tthis.renderDimensions = renderDimensions\n\t\tthis.particles = new Map()\n\t}\n\tcreateParticles(x, y, w, h, color, velocity) {\n\t\tlet amnt = getSetting(\"particleAmount\")\n\t\tif (getSetting(\"showParticlesTop\")) {\n\t\t\tfor (let i = 0; i < Math.random() * 0.5 * amnt + 0.5 * amnt; i++) {\n\t\t\t\tlet rndX = x + 3 + w * 0.5 + w * 0.5 * (-1 + 2 * Math.random())\n\t\t\t\tlet motX =\n\t\t\t\t\t(Math.random() - Math.random()) * 0.5 * getSetting(\"particleSpeed\")\n\t\t\t\tlet motY =\n\t\t\t\t\t(-Math.random() * getSetting(\"particleSpeed\") * velocity) / 127\n\t\t\t\tlet radius =\n\t\t\t\t\t(0.5 + 0.5 * Math.random()) * getSetting(\"particleSize\") + 0.5\n\t\t\t\trndX -= radius / 2\n\t\t\t\tlet lifeTime = Math.random() * getSetting(\"particleLife\") + 2\n\t\t\t\tthis.createParticle(rndX, y, motX, motY, radius, color, lifeTime)\n\t\t\t}\n\t\t}\n\t\tif (getSetting(\"showParticlesBottom\")) {\n\t\t\tfor (let i = 0; i < Math.random() * 0.5 * amnt + 0.5 * amnt; i++) {\n\t\t\t\tlet rndX = x + 3 + w * 0.5 + w * 0.5 * (-1 + 2 * Math.random())\n\t\t\t\tlet motX =\n\t\t\t\t\t(Math.random() - Math.random()) * 0.5 * getSetting(\"particleSpeed\")\n\t\t\t\tlet motY =\n\t\t\t\t\t(-Math.random() * getSetting(\"particleSpeed\") * velocity) / 127\n\t\t\t\tlet radius =\n\t\t\t\t\t(0.5 + 0.5 * Math.random()) * getSetting(\"particleSize\") + 0.5\n\t\t\t\trndX -= radius / 2\n\t\t\t\tlet lifeTime = Math.random() * getSetting(\"particleLife\") + 2\n\t\t\t\tthis.createParticle(\n\t\t\t\t\trndX,\n\t\t\t\t\ty + h,\n\t\t\t\t\tmotX,\n\t\t\t\t\t-1 * motY * 0.5,\n\t\t\t\t\tradius,\n\t\t\t\t\tcolor,\n\t\t\t\t\tlifeTime\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t}\n\tcreateParticle(x, y, motX, motY, radius, color, lifeTime) {\n\t\tif (!this.particles.has(color)) {\n\t\t\tthis.particles.set(color, [])\n\t\t}\n\t\tthis.particles.get(color).push([x, y, motX, motY, radius, lifeTime, 0])\n\t}\n\tupdateParticles() {\n\t\tthis.particles.forEach(particleArray =>\n\t\t\tparticleArray.forEach(particle => this.updateParticle(particle))\n\t\t)\n\t\tthis.clearDeadParticles()\n\t}\n\tclearDeadParticles() {\n\t\tthis.particles.forEach((particleArray, color) => {\n\t\t\tfor (let i = particleArray.length - 1; i >= 0; i--) {\n\t\t\t\tif (particleArray[i][6] >= particleArray[i][5]) {\n\t\t\t\t\tparticleArray.splice(i, 1)\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (particleArray.length == 0) {\n\t\t\t\tthis.particles.delete(color)\n\t\t\t}\n\t\t})\n\t}\n\n\tupdateParticle(particle) {\n\t\tparticle[0] += particle[2]\n\t\tparticle[1] += particle[3]\n\n\t\t// particle[3] *= 1 + (particle[6] / particle[5]) * 0.05\n\t\tparticle[3] += (particle[6] / particle[5]) * 0.3\n\n\t\t//dampen xy-motion\n\t\tparticle[2] *= 0.95\n\t\t// particle[3] *= 0.92\n\n\t\t//particle lifetime ticker\n\t\tparticle[6] += particle[4] * 0.1\n\t}\n\trender() {\n\t\tlet stroke = getSetting(\"particleStroke\")\n\t\tthis.ctx.globalAlpha = 0.5\n\t\tif (stroke) {\n\t\t\tthis.ctx.strokeStyle = \"rgba(255,255,255,0.8)\"\n\t\t\tthis.ctx.lineWidth = 0.5\n\t\t}\n\t\tthis.particles.forEach((particleArray, color) => {\n\t\t\tlet c = this.ctx\n\t\t\tc.fillStyle = color\n\t\t\tc.beginPath()\n\t\t\tparticleArray.forEach(particle => this.renderParticle(particle))\n\t\t\tc.fill()\n\t\t\tif (stroke) {\n\t\t\t\tc.stroke()\n\t\t\t}\n\t\t\tc.closePath()\n\t\t})\n\t\tthis.updateParticles()\n\t\tthis.ctx.globalAlpha = 1\n\t}\n\trenderParticle(particle) {\n\t\tthis.ctx.moveTo(particle[0], particle[1])\n\t\tlet rad = Math.max(0.1, (1 - particle[6] / particle[5]) * particle[4])\n\t\tthis.ctx.arc(particle[0], particle[1], rad, 0, Math.PI * 2, 0)\n\t}\n}\n","import { getSetting, setSettingCallback } from \"../settings/Settings.js\"\nimport { drawRoundRect } from \"../Util.js\"\nimport { NoteParticleRender } from \"./NoteParticleRender.js\"\nimport { PianoParticleRender } from \"./PianoParticleRender.js\"\n\n/**\n * Class to render the notes on screen.\n */\nexport class NoteRender {\n\tconstructor(ctx, ctxForeground, renderDimensions, pianoRender) {\n\t\tthis.ctx = ctx\n\t\tthis.renderDimensions = renderDimensions\n\t\tthis.ctxForeground = ctxForeground\n\n\t\tthis.pianoRender = pianoRender\n\t\tthis.lastActiveNotes = {}\n\t\tthis.noteParticleRender = new NoteParticleRender(\n\t\t\tthis.ctxForeground,\n\t\t\tthis.renderDimensions\n\t\t)\n\t\tthis.pianoParticleRender = new PianoParticleRender(\n\t\t\tthis.pianoRender.playedKeysCtxWhite,\n\t\t\tthis.pianoRender.playedKeysCtxBlack,\n\t\t\tthis.renderDimensions\n\t\t)\n\t}\n\trender(time, renderInfoByTrackMap, inputActiveNotes, inputPlayedNotes) {\n\t\tthis.noteParticleRender.render()\n\n\t\t//sustained note \"tails\"\n\t\tif (getSetting(\"showSustainedNotes\")) {\n\t\t\tthis.drawSustainedNotes(renderInfoByTrackMap, time)\n\t\t}\n\n\t\tlet activeNotesByTrackMap = this.getActiveNotesByTrackMap(\n\t\t\trenderInfoByTrackMap\n\t\t)\n\t\t//Active notes effect\n\t\tObject.keys(activeNotesByTrackMap).forEach(trackIndex => {\n\t\t\tthis.renderActiveNotesEffects(activeNotesByTrackMap[trackIndex])\n\t\t})\n\n\t\t//Notes\n\t\tObject.keys(renderInfoByTrackMap).forEach(trackIndex => {\n\t\t\tthis.drawNotes(\n\t\t\t\trenderInfoByTrackMap[trackIndex].white,\n\t\t\t\trenderInfoByTrackMap[trackIndex].black\n\t\t\t)\n\t\t})\n\t\tlet currentActiveNotes = {}\n\t\t//Active keys on piano + stroking of active notes\n\t\tObject.keys(activeNotesByTrackMap).forEach(trackIndex => {\n\t\t\tthis.renderActivePianoKeys(\n\t\t\t\tactiveNotesByTrackMap[trackIndex],\n\t\t\t\tcurrentActiveNotes\n\t\t\t)\n\n\t\t\tthis.createNoteParticles(activeNotesByTrackMap[trackIndex])\n\t\t})\n\t\tif (getSetting(\"drawPianoKeyHitEffect\")) {\n\t\t\tthis.pianoParticleRender.render()\n\t\t}\n\n\t\tthis.lastActiveNotes = currentActiveNotes\n\n\t\tthis.drawInputNotes(inputActiveNotes, inputPlayedNotes)\n\t}\n\n\tdrawSustainedNotes(renderInfoByTrackMap, time) {\n\t\tObject.keys(renderInfoByTrackMap).forEach(trackIndex => {\n\t\t\tlet notesRenderInfoBlack = renderInfoByTrackMap[trackIndex].black\n\t\t\tlet notesRenderInfoWhite = renderInfoByTrackMap[trackIndex].white\n\n\t\t\tthis.ctx.globalAlpha = getSetting(\"sustainedNotesOpacity\") / 100\n\t\t\tthis.ctx.strokeStyle = \"rgba(0,0,0,1)\"\n\t\t\tthis.ctx.lineWidth = 1\n\t\t\tif (notesRenderInfoWhite.length > 0) {\n\t\t\t\tthis.ctx.fillStyle = notesRenderInfoWhite[0].fillStyle\n\t\t\t}\n\t\t\tnotesRenderInfoWhite.forEach(renderInfo =>\n\t\t\t\tthis.drawSustainedNote(renderInfo)\n\t\t\t)\n\t\t\tif (notesRenderInfoBlack.length > 0) {\n\t\t\t\tthis.ctx.fillStyle = notesRenderInfoBlack[0].fillStyle\n\t\t\t}\n\t\t\tnotesRenderInfoBlack.forEach(renderInfo =>\n\t\t\t\tthis.drawSustainedNote(renderInfo)\n\t\t\t)\n\t\t})\n\t}\n\n\tdrawSustainedNote(renderInfos) {\n\t\tlet ctx = this.ctx\n\n\t\tlet x = renderInfos.x\n\t\tlet w = renderInfos.w / 2\n\n\t\tif (renderInfos.sustainH && renderInfos.sustainY) {\n\t\t\tctx.beginPath()\n\t\t\tctx.rect(x + w / 2, renderInfos.sustainY, w, renderInfos.sustainH)\n\t\t\tctx.closePath()\n\t\t\tctx.fill()\n\t\t}\n\t}\n\n\tgetActiveNotesByTrackMap(renderInfoByTrackMap) {\n\t\treturn Object.keys(renderInfoByTrackMap).map(trackIndex =>\n\t\t\tthis.getActiveNotes(\n\t\t\t\trenderInfoByTrackMap[trackIndex].black,\n\t\t\t\trenderInfoByTrackMap[trackIndex].white\n\t\t\t)\n\t\t)\n\t}\n\tgetActiveNotes(notesRenderInfoBlack, notesRenderInfoWhite) {\n\t\tlet activeNotesBlack = notesRenderInfoBlack\n\t\t\t.slice(0)\n\t\t\t.filter(renderInfo => renderInfo.isOn)\n\n\t\tlet activeNotesWhite = notesRenderInfoWhite\n\t\t\t.slice(0)\n\t\t\t.filter(renderInfo => renderInfo.isOn)\n\t\treturn { white: activeNotesWhite, black: activeNotesBlack }\n\t}\n\n\trenderActiveNotesEffects(activeNotes) {\n\t\tif (getSetting(\"showHitKeys\")) {\n\t\t\tif (activeNotes.white.length) {\n\t\t\t\tthis.ctx.fillStyle = activeNotes.white[0].fillStyle\n\t\t\t}\n\t\t\tactiveNotes.white.forEach(note => this.renderActiveNoteEffect(note))\n\n\t\t\tif (activeNotes.black.length) {\n\t\t\t\tthis.ctx.fillStyle = activeNotes.black[0].fillStyle\n\t\t\t}\n\t\t\tactiveNotes.black.forEach(note => this.renderActiveNoteEffect(note))\n\t\t}\n\t}\n\n\trenderActiveNoteEffect(renderInfos) {\n\t\tlet ctx = this.ctx\n\t\tctx.globalAlpha = Math.max(\n\t\t\t0,\n\t\t\t0.7 - Math.min(0.7, renderInfos.noteDoneRatio)\n\t\t)\n\t\tlet wOffset = Math.pow(\n\t\t\tthis.renderDimensions.whiteKeyWidth / 2,\n\t\t\t1 + Math.min(1, renderInfos.noteDoneRatio) * renderInfos.isOn\n\t\t)\n\t\tthis.doNotePath(renderInfos, {\n\t\t\tx: renderInfos.x - wOffset / 2,\n\t\t\tw: renderInfos.w + wOffset,\n\t\t\ty:\n\t\t\t\trenderInfos.y -\n\t\t\t\t(getSetting(\"reverseNoteDirection\")\n\t\t\t\t\t? this.renderDimensions.whiteKeyHeight\n\t\t\t\t\t: 0),\n\t\t\th: renderInfos.h + this.renderDimensions.whiteKeyHeight\n\t\t})\n\n\t\tctx.fill()\n\t\tctx.globalAlpha = 1\n\t}\n\n\tdrawNotes(notesRenderInfoWhite, notesRenderInfoBlack) {\n\t\tlet {\n\t\t\tincomingWhiteNotes,\n\t\t\tincomingBlackNotes,\n\t\t\tplayedWhiteNotes,\n\t\t\tplayedBlackNotes\n\t\t} = this.getIncomingAndPlayedNotes(\n\t\t\tnotesRenderInfoWhite,\n\t\t\tnotesRenderInfoBlack\n\t\t)\n\n\t\tthis.ctx.globalAlpha = 1\n\t\tthis.ctx.strokeStyle = getSetting(\"strokeNotesColor\")\n\t\tthis.ctx.lineWidth = getSetting(\"strokeNotesWidth\")\n\n\t\tthis.drawIncomingNotes(incomingWhiteNotes, incomingBlackNotes)\n\n\t\tthis.drawPlayedNotes(playedWhiteNotes, playedBlackNotes)\n\t}\n\n\trectAbovePiano() {\n\t\tthis.ctx.rect(\n\t\t\t0,\n\t\t\t0,\n\t\t\tthis.renderDimensions.windowWidth,\n\t\t\tthis.renderDimensions.getAbsolutePianoPosition()\n\t\t)\n\t}\n\trectBelowPiano() {\n\t\tthis.ctx.rect(\n\t\t\t0,\n\t\t\tthis.renderDimensions.getAbsolutePianoPosition() +\n\t\t\t\tthis.renderDimensions.whiteKeyHeight,\n\t\t\tthis.renderDimensions.windowWidth,\n\t\t\tthis.renderDimensions.windowHeight -\n\t\t\t\t(this.renderDimensions.getAbsolutePianoPosition() +\n\t\t\t\t\tthis.renderDimensions.whiteKeyHeight)\n\t\t)\n\t}\n\tdrawPlayedNotes(playedWhiteNotes, playedBlackNotes) {\n\t\tthis.ctx.save()\n\t\tthis.ctx.beginPath()\n\t\tgetSetting(\"reverseNoteDirection\")\n\t\t\t? this.rectAbovePiano()\n\t\t\t: this.rectBelowPiano()\n\n\t\tthis.ctx.clip()\n\t\tthis.ctx.closePath()\n\t\tthis.ctx.fillStyle = playedWhiteNotes.length\n\t\t\t? playedWhiteNotes[0].fillStyle\n\t\t\t: \"\"\n\n\t\tplayedWhiteNotes.forEach(renderInfo => {\n\t\t\tthis.drawNoteAfter(renderInfo)\n\t\t\tthis.ctx.fill()\n\t\t\tthis.strokeActiveAndOthers(renderInfo)\n\t\t})\n\n\t\tthis.ctx.fillStyle = playedBlackNotes.length\n\t\t\t? playedBlackNotes[0].fillStyle\n\t\t\t: \"\"\n\t\tplayedBlackNotes.forEach(renderInfo => {\n\t\t\tthis.drawNoteAfter(renderInfo)\n\t\t\tthis.ctx.fill()\n\t\t\tthis.strokeActiveAndOthers(renderInfo)\n\t\t})\n\n\t\tthis.ctx.restore()\n\t}\n\n\tstrokeActiveAndOthers(renderInfo) {\n\t\tif (renderInfo.isOn) {\n\t\t\tthis.ctx.strokeStyle = getSetting(\"strokeActiveNotesColor\")\n\t\t\tthis.ctx.lineWidth = getSetting(\"strokeActiveNotesWidth\")\n\t\t\tthis.ctx.stroke()\n\t\t} else if (getSetting(\"strokeNotes\")) {\n\t\t\tthis.ctx.strokeStyle = getSetting(\"strokeNotesColor\")\n\t\t\tthis.ctx.lineWidth = getSetting(\"strokeNotesWidth\")\n\t\t\tthis.ctx.stroke()\n\t\t}\n\t}\n\n\tdrawIncomingNotes(incomingWhiteNotes, incomingBlackNotes) {\n\t\tthis.ctx.save()\n\t\tthis.ctx.beginPath()\n\t\tgetSetting(\"reverseNoteDirection\")\n\t\t\t? this.rectBelowPiano()\n\t\t\t: this.rectAbovePiano()\n\t\tthis.ctx.clip()\n\t\tthis.ctx.closePath()\n\t\tthis.ctx.fillStyle = incomingWhiteNotes.length\n\t\t\t? incomingWhiteNotes[0].fillStyle\n\t\t\t: \"\"\n\t\tincomingWhiteNotes.forEach(renderInfo => {\n\t\t\tthis.drawNoteBefore(renderInfo)\n\t\t\tthis.ctx.fill()\n\t\t\tthis.strokeActiveAndOthers(renderInfo)\n\t\t})\n\n\t\tthis.ctx.fillStyle = incomingBlackNotes.length\n\t\t\t? incomingBlackNotes[0].fillStyle\n\t\t\t: \"\"\n\t\tincomingBlackNotes.forEach(renderInfo => {\n\t\t\tthis.drawNoteBefore(renderInfo)\n\t\t\tthis.ctx.fill()\n\t\t\tthis.strokeActiveAndOthers(renderInfo)\n\t\t})\n\t\tthis.ctx.restore()\n\t}\n\n\tgetIncomingAndPlayedNotes(notesRenderInfoWhite, notesRenderInfoBlack) {\n\t\tlet incomingWhiteNotes = []\n\t\tlet playedWhiteNotes = []\n\t\tnotesRenderInfoWhite\n\t\t\t.filter(renderInfo => renderInfo.w > 0 && renderInfo.h > 0)\n\t\t\t.forEach(renderInfo => {\n\t\t\t\tif (renderInfo.noteDoneRatio < 1) {\n\t\t\t\t\tincomingWhiteNotes.push(renderInfo)\n\t\t\t\t}\n\t\t\t\tif (getSetting(\"pianoPosition\") != 0 && renderInfo.noteDoneRatio > 0) {\n\t\t\t\t\tplayedWhiteNotes.push(renderInfo)\n\t\t\t\t}\n\t\t\t})\n\t\tlet incomingBlackNotes = []\n\t\tlet playedBlackNotes = []\n\t\tnotesRenderInfoBlack\n\t\t\t.filter(renderInfo => renderInfo.w > 0 && renderInfo.h > 0)\n\t\t\t.forEach(renderInfo => {\n\t\t\t\tif (renderInfo.noteDoneRatio < 1) {\n\t\t\t\t\tincomingBlackNotes.push(renderInfo)\n\t\t\t\t}\n\t\t\t\tif (getSetting(\"pianoPosition\") != 0 && renderInfo.noteDoneRatio > 0) {\n\t\t\t\t\tplayedBlackNotes.push(renderInfo)\n\t\t\t\t}\n\t\t\t})\n\t\treturn {\n\t\t\tincomingWhiteNotes,\n\t\t\tincomingBlackNotes,\n\t\t\tplayedWhiteNotes,\n\t\t\tplayedBlackNotes\n\t\t}\n\t}\n\n\tdrawInputNotes(inputActiveNotes, inputPlayedNotes) {\n\t\tthis.ctx.globalAlpha = 1\n\t\tthis.ctx.strokeStyle = getSetting(\"strokeNotesColor\")\n\t\tthis.ctx.lineWidth = getSetting(\"strokeNotesWidth\")\n\t\tthis.ctx.fillStyle = getSetting(\"inputNoteColor\")\n\t\tlet whiteActive = inputActiveNotes.filter(noteInfo => !noteInfo.isBlack)\n\t\tinputActiveNotes.forEach(noteInfo => {\n\t\t\tthis.createNoteParticle(noteInfo)\n\t\t\tthis.pianoRender.drawActiveInputKey(\n\t\t\t\tparseInt(noteInfo.noteNumber),\n\t\t\t\tthis.ctx.fillStyle\n\t\t\t)\n\t\t\tthis.drawNoteAfter(noteInfo)\n\t\t\tthis.ctx.fill()\n\t\t})\n\t\tinputPlayedNotes.forEach(noteInfo => {\n\t\t\t// noteInfo.y += this.renderDimensions.whiteKeyHeight\n\t\t\tthis.drawNoteAfter(noteInfo)\n\t\t\tthis.ctx.fill()\n\t\t})\n\t}\n\tdrawNote(renderInfos) {\n\t\tlet ctx = this.ctx\n\n\t\tif (renderInfos.w <= 0 || renderInfos.h <= 0) {\n\t\t\treturn\n\t\t}\n\n\t\tlet fadeInAlpha = 1\n\t\tif (getSetting(\"fadeInNotes\")) {\n\t\t\tfadeInAlpha = this.getAlphaFromY(renderInfos.y + renderInfos.h)\n\t\t}\n\n\t\tctx.globalAlpha = fadeInAlpha\n\n\t\tif (renderInfos.noteDoneRatio < 1) {\n\t\t\tthis.drawNoteBefore(renderInfos)\n\t\t\tctx.fill()\n\t\t\tif (!renderInfos.isOn && getSetting(\"strokeNotes\")) {\n\t\t\t\tctx.stroke()\n\t\t\t}\n\t\t}\n\n\t\tif (getSetting(\"pianoPosition\") != 0 && renderInfos.noteDoneRatio > 0) {\n\t\t\tthis.drawNoteAfter(renderInfos)\n\t\t\tctx.fill()\n\t\t\tif (!renderInfos.isOn && getSetting(\"strokeNotes\")) {\n\t\t\t\tctx.stroke()\n\t\t\t}\n\t\t}\n\n\t\tctx.globalAlpha = 1\n\t}\n\tdrawNoteAfter(renderInfos) {\n\t\tlet y =\n\t\t\trenderInfos.y +\n\t\t\t(getSetting(\"reverseNoteDirection\") ? -1 : 1) *\n\t\t\t\tthis.renderDimensions.whiteKeyHeight\n\n\t\tthis.doNotePath(renderInfos, {\n\t\t\ty\n\t\t})\n\t}\n\n\tdrawNoteBefore(renderInfos) {\n\t\t//Done by .clip() now. Keep in case clipping isn't performant\n\t\t// let h = Math.min(\n\t\t// \trenderInfos.h,\n\t\t// \tthis.renderDimensions.getAbsolutePianoPosition() - renderInfos.y\n\t\t// )\n\t\tthis.doNotePath(renderInfos /*, { h }*/)\n\t}\n\n\trenderActivePianoKeys(activeNotes, currentActiveNotes) {\n\t\tif (getSetting(\"highlightActivePianoKeys\")) {\n\t\t\tactiveNotes.white.forEach(noteRenderInfo => {\n\t\t\t\tthis.pianoRender.drawActiveKey(noteRenderInfo, noteRenderInfo.fillStyle)\n\t\t\t})\n\t\t\tactiveNotes.black.forEach(noteRenderInfo => {\n\t\t\t\tthis.pianoRender.drawActiveKey(noteRenderInfo, noteRenderInfo.fillStyle)\n\t\t\t})\n\n\t\t\t//stroke newly hit ones\n\t\t\t//TODO: Doesn't look very nice.\n\t\t\tif (getSetting(\"drawPianoKeyHitEffect\")) {\n\t\t\t\tactiveNotes.white.forEach(noteRenderInfo => {\n\t\t\t\t\tcurrentActiveNotes[noteRenderInfo.noteId] = true\n\t\t\t\t\tif (!this.lastActiveNotes.hasOwnProperty(noteRenderInfo.noteId)) {\n\t\t\t\t\t\tthis.pianoParticleRender.add(noteRenderInfo)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tactiveNotes.black.forEach(noteRenderInfo => {\n\t\t\t\t\tcurrentActiveNotes[noteRenderInfo.noteId] = true\n\t\t\t\t\tif (!this.lastActiveNotes.hasOwnProperty(noteRenderInfo.noteId)) {\n\t\t\t\t\t\tthis.pianoParticleRender.add(noteRenderInfo)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tstrokeNote(renderInfo) {\n\t\tthis.drawNoteBefore(renderInfo)\n\t\tthis.ctx.stroke()\n\n\t\tif (renderInfo.isOn) {\n\t\t\tthis.drawNoteAfter(renderInfo)\n\t\t\tthis.ctx.stroke()\n\t\t}\n\t}\n\n\tdoNotePath(renderInfo, overWriteParams) {\n\t\tif (!overWriteParams) {\n\t\t\toverWriteParams = {}\n\t\t}\n\t\tfor (let key in renderInfo) {\n\t\t\tif (!overWriteParams.hasOwnProperty(key)) {\n\t\t\t\toverWriteParams[key] = renderInfo[key]\n\t\t\t}\n\t\t}\n\t\tif (getSetting(\"roundedNotes\") || getSetting(\"noteBorderRadius\") > 0) {\n\t\t\tdrawRoundRect(\n\t\t\t\tthis.ctx,\n\t\t\t\toverWriteParams.x,\n\t\t\t\toverWriteParams.y,\n\t\t\t\toverWriteParams.w,\n\t\t\t\toverWriteParams.h,\n\t\t\t\toverWriteParams.rad,\n\t\t\t\tgetSetting(\"roundedNotes\")\n\t\t\t)\n\t\t} else {\n\t\t\tthis.ctx.beginPath()\n\t\t\tthis.ctx.rect(\n\t\t\t\toverWriteParams.x,\n\t\t\t\toverWriteParams.y,\n\t\t\t\toverWriteParams.w,\n\t\t\t\toverWriteParams.h\n\t\t\t)\n\t\t\tthis.ctx.closePath()\n\t\t}\n\t}\n\n\tcreateNoteParticles(activeNotes, colWhite, colBlack) {\n\t\tif (getSetting(\"showParticlesTop\") || getSetting(\"showParticlesBottom\")) {\n\t\t\tactiveNotes.white.forEach(noteRenderInfo =>\n\t\t\t\tthis.createNoteParticle(noteRenderInfo)\n\t\t\t)\n\t\t\tactiveNotes.black.forEach(noteRenderInfo =>\n\t\t\t\tthis.createNoteParticle(noteRenderInfo)\n\t\t\t)\n\t\t}\n\t}\n\tcreateNoteParticle(noteRenderInfo) {\n\t\tthis.noteParticleRender.createParticles(\n\t\t\tnoteRenderInfo.x,\n\t\t\tthis.renderDimensions.getAbsolutePianoPosition(),\n\t\t\tnoteRenderInfo.w,\n\t\t\tthis.renderDimensions.whiteKeyHeight,\n\t\t\tnoteRenderInfo.fillStyle,\n\t\t\tnoteRenderInfo.velocity\n\t\t)\n\t}\n\n\tgetAlphaFromY(y) {\n\t\t//TODO broken.\n\t\treturn Math.min(\n\t\t\t1,\n\t\t\tMath.max(\n\t\t\t\t0,\n\t\t\t\t(y - this.menuHeight - 5) /\n\t\t\t\t\t((this.renderDimensions.windowHeight - this.menuHeight) * 0.5)\n\t\t\t)\n\t\t)\n\t}\n\t/**\n\t * Sets Menu (Navbar) Height.  Required to calculate fadeIn alpha value\n\t *\n\t * @param {Number} menuHeight\n\t */\n\tsetMenuHeight(menuHeight) {\n\t\tthis.menuHeight = menuHeight\n\t}\n}\n","/**\n * Class to display message-overlays on screen\n */\nexport class OverlayRender {\n\tconstructor(ctx, renderDimensions) {\n\t\tthis.ctx = ctx\n\t\tthis.renderDimensions = renderDimensions\n\t\tthis.overlays = []\n\t}\n\t/**\n\t * add a overlay-message to the screen\n\t *\n\t * @param {String} message\n\t * @param {Number} duration\n\t */\n\taddOverlay(message, duration) {\n\t\tlet totalDuration = duration\n\t\tthis.overlays.push({ message, totalDuration, duration })\n\t}\n\t/**\n\t * Render / Update the overlays.\n\t */\n\trender() {\n\t\tfor (let i = this.overlays.length - 1; i >= 0; i--) {\n\t\t\tlet overlay = this.overlays[i]\n\t\t\toverlay.duration--\n\t\t\tif (overlay.duration < 0) {\n\t\t\t\tthis.overlays.splice(i, 1)\n\t\t\t}\n\t\t}\n\n\t\tif (this.overlays.length) {\n\t\t\tthis.globalAlpha = this.setAlphaForOverlay(\n\t\t\t\tthis.overlays[this.overlays.length - 1]\n\t\t\t)\n\t\t\tthis.ctx.fillStyle = \"rgba(0,0,0,0.9)\"\n\t\t\tthis.ctx.fillRect(\n\t\t\t\t0,\n\t\t\t\t0,\n\t\t\t\tthis.renderDimensions.windowWidth,\n\t\t\t\tthis.renderDimensions.windowHeight\n\t\t\t)\n\t\t}\n\t\tfor (let i = 0; i < this.overlays.length; i++) {\n\t\t\tlet overlay = this.overlays[i]\n\n\t\t\tthis.setAlphaForOverlay(overlay)\n\n\t\t\tthis.ctx.font = \"32px 'Source Sans Pro', sans-serif\"\n\t\t\tthis.ctx.fillStyle = \"white\"\n\n\t\t\tlet wd = this.ctx.measureText(overlay.message).width\n\t\t\tthis.ctx.fillText(\n\t\t\t\toverlay.message,\n\t\t\t\tthis.renderDimensions.windowWidth / 2 - wd / 2,\n\t\t\t\tthis.renderDimensions.windowHeight / 4 + i * 40\n\t\t\t)\n\t\t}\n\t\tthis.ctx.globalAlpha = 1\n\t}\n\n\tsetAlphaForOverlay(overlay) {\n\t\tlet ratio = 1 - overlay.duration / overlay.totalDuration\n\t\tif (ratio < 0.1) {\n\t\t\tthis.ctx.globalAlpha = ratio / 0.1\n\t\t} else {\n\t\t\tthis.ctx.globalAlpha = (0.9 - (ratio - 0.1)) / 0.9\n\t\t}\n\t\treturn ratio\n\t}\n}\n","import { getSetting } from \"../settings/Settings.js\"\n\nconst PARTICLE_LIFE_TIME = 22\n\nexport class PianoParticleRender {\n\tconstructor(ctxWhite, ctxBlack, renderDimensions) {\n\t\tthis.ctxWhite = ctxWhite\n\t\tthis.ctxBlack = ctxBlack\n\t\tthis.renderDimensions = renderDimensions\n\t\tthis.particles = {\n\t\t\twhite: new Map(),\n\t\t\tblack: new Map()\n\t\t}\n\t}\n\tadd(noteRenderinfo, isWhite) {\n\t\tlet keyDims = this.renderDimensions.getKeyDimensions(\n\t\t\tnoteRenderinfo.noteNumber\n\t\t)\n\n\t\tlet color = noteRenderinfo.fillStyle\n\n\t\tlet keyColor = noteRenderinfo.isBlack ? \"black\" : \"white\"\n\n\t\tif (!this.particles[keyColor].has(color)) {\n\t\t\tthis.particles[keyColor].set(color, [])\n\t\t}\n\t\tthis.particles[keyColor]\n\t\t\t.get(color)\n\t\t\t.push([\n\t\t\t\tkeyDims.x,\n\t\t\t\t0,\n\t\t\t\tkeyDims.w,\n\t\t\t\tkeyDims.h,\n\t\t\t\t(PARTICLE_LIFE_TIME * noteRenderinfo.velocity) / 127\n\t\t\t])\n\t\treturn\n\t}\n\n\tupdateParticles() {\n\t\tthis.particles.white.forEach(particleArray =>\n\t\t\tparticleArray.forEach(particle => this.updateParticle(particle))\n\t\t)\n\t\tthis.particles.black.forEach(particleArray =>\n\t\t\tparticleArray.forEach(particle => this.updateParticle(particle))\n\t\t)\n\t\tthis.clearDeadParticles()\n\t}\n\tclearDeadParticles() {\n\t\tthis.particles.white.forEach((particleArray, color) => {\n\t\t\tfor (let i = particleArray.length - 1; i >= 0; i--) {\n\t\t\t\tif (particleArray[i][4] < 0) {\n\t\t\t\t\tparticleArray.splice(i, 1)\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (particleArray.length == 0) {\n\t\t\t\tthis.particles.white.delete(color)\n\t\t\t}\n\t\t})\n\t\tthis.particles.black.forEach((particleArray, color) => {\n\t\t\tfor (let i = particleArray.length - 1; i >= 0; i--) {\n\t\t\t\tif (particleArray[i][4] < 0) {\n\t\t\t\t\tparticleArray.splice(i, 1)\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (particleArray.length == 0) {\n\t\t\t\tthis.particles.black.delete(color)\n\t\t\t}\n\t\t})\n\t}\n\n\tupdateParticle(particle) {\n\t\tparticle[4]--\n\t}\n\trender() {\n\t\tthis.particles.white.forEach((particleArray, color) => {\n\t\t\tlet c = this.ctxWhite\n\t\t\tc.strokeStyle = \"rgba(255,255,255,0.4)\"\n\t\t\tc.lineWidth = 2\n\t\t\tc.beginPath()\n\t\t\tparticleArray.forEach(particle => this.renderParticle(particle, c))\n\t\t\tc.stroke()\n\t\t\tc.closePath()\n\t\t})\n\t\tthis.particles.black.forEach((particleArray, color) => {\n\t\t\tlet c = this.ctxBlack\n\t\t\tc.strokeStyle = \"rgba(255,255,255,0.4)\"\n\t\t\tc.lineWidth = 2\n\t\t\tc.beginPath()\n\t\t\tparticleArray.forEach(particle => this.renderParticle(particle, c))\n\t\t\tc.stroke()\n\t\t\tc.closePath()\n\t\t})\n\t\tthis.updateParticles()\n\t}\n\trenderParticle(particle, ctx) {\n\t\tlet doneRat = 1 - particle[4] / PARTICLE_LIFE_TIME\n\t\tlet wdRatio = (doneRat - 0.1) * particle[2] * 0.3\n\t\tctx.moveTo(particle[0] - wdRatio / 2, 5)\n\t\tctx.lineTo(particle[0] - wdRatio / 2, particle[3])\n\n\t\tctx.moveTo(particle[0] - wdRatio / 2 + particle[2] + wdRatio, 5)\n\t\tctx.lineTo(particle[0] - wdRatio / 2 + particle[2] + wdRatio, particle[3])\n\n\t\t// ctx.rect(\n\t\t// \tparticle[0] + doneRat / 2,\n\t\t// \tparticle[1],\n\t\t// \tparticle[2] - doneRat,\n\t\t// \tparticle[3]\n\t\t// )\n\t}\n}\n","import { CONST } from \"../data/CONST.js\"\nimport { DomHelper } from \"../ui/DomHelper.js\"\nimport { getSetting } from \"../settings/Settings.js\"\nimport { isBlack, replaceAllString } from \"../Util.js\"\n/**\n * Class to render the piano (and the colored keys played on the piano)\n */\nexport class PianoRender {\n\tconstructor(renderDimensions) {\n\t\tthis.renderDimensions = renderDimensions\n\t\tthis.renderDimensions.registerResizeCallback(this.resize.bind(this))\n\t\tthis.clickCallback = null\n\t\tthis.blackKeyImg = new Image()\n\t\tthis.blackKeyImg.src = \"../../blackKey.svg\"\n\t\tthis.blackKeyImg.onload\n\t\tthis.positionY = 50 //from bottom\n\n\t\tthis.resize()\n\t}\n\t/**\n\t * Resize canvases and redraw piano.\n\t */\n\tresize() {\n\t\tthis.resizeCanvases()\n\t\tthis.drawPiano(this.ctxWhite, this.ctxBlack)\n\t}\n\t/**\n\t * pass listeners that are called with the note number as argument when piano canvas is clicked.\n\t * @param {Function} onNoteOn\n\t * @param {Function} onNoteOff\n\t */\n\tsetPianoInputListeners(onNoteOn, onNoteOff) {\n\t\tthis.onNoteOn = onNoteOn\n\t\tthis.onNoteOff = onNoteOff\n\t}\n\t/**\n\t * Register a callback to trigger when user clicks the piano Canvas. Callback is called with\n\t */\n\tsetClickCallback(callback) {\n\t\tthis.clickCallback = callback\n\t}\n\tgetAllCanvases() {\n\t\treturn [\n\t\t\tthis.getPianoCanvasWhite(),\n\t\t\tthis.getPlayedKeysWhite(),\n\t\t\tthis.getPianoCanvasBlack(),\n\t\t\tthis.getPlayedKeysBlack()\n\t\t]\n\t}\n\n\t/**\n\t * Resizes all piano canvases.\n\t */\n\tresizeCanvases() {\n\t\tthis.getAllCanvases().forEach(canvas => {\n\t\t\tDomHelper.setCanvasSize(\n\t\t\t\tcanvas,\n\t\t\t\tthis.renderDimensions.windowWidth,\n\t\t\t\tMath.max(\n\t\t\t\t\tthis.renderDimensions.whiteKeyHeight,\n\t\t\t\t\tthis.renderDimensions.blackKeyHeight\n\t\t\t\t)\n\t\t\t)\n\t\t})\n\t\tthis.repositionCanvases()\n\t}\n\n\trepositionCanvases() {\n\t\tthis.getAllCanvases().forEach(canvas => {\n\t\t\tcanvas.style.top = this.renderDimensions.getAbsolutePianoPosition() + \"px\"\n\t\t})\n\t}\n\t/**\n\t *\n\t * @param {Integer} noteNumber\n\t */\n\tdrawActiveInputKey(noteNumber, color) {\n\t\tlet dim = this.renderDimensions.getKeyDimensions(noteNumber)\n\t\tlet isKeyBlack = isBlack(noteNumber)\n\t\tlet ctx = isKeyBlack ? this.playedKeysCtxBlack : this.playedKeysCtxWhite\n\n\t\tif (isKeyBlack) {\n\t\t\tthis.drawBlackKey(ctx, dim, color, true)\n\t\t} else {\n\t\t\tthis.drawWhiteKey(ctx, dim, color, true)\n\t\t}\n\t}\n\n\tdrawActiveKey(renderInfo, color) {\n\t\tlet dim = this.renderDimensions.getKeyDimensions(renderInfo.noteNumber)\n\t\tlet isKeyBlack = renderInfo.isBlack\n\t\tlet ctx = isKeyBlack ? this.playedKeysCtxBlack : this.playedKeysCtxWhite\n\n\t\tctx.fillStyle = color\n\t\tif (isKeyBlack) {\n\t\t\tthis.drawBlackKey(ctx, dim, color)\n\t\t} else {\n\t\t\tthis.drawWhiteKey(ctx, dim, color)\n\t\t}\n\t}\n\n\tclearPlayedKeysCanvases() {\n\t\tthis.playedKeysCtxWhite.clearRect(\n\t\t\t0,\n\t\t\t0,\n\t\t\tthis.renderDimensions.windowWidth,\n\t\t\tMath.max(\n\t\t\t\tthis.renderDimensions.whiteKeyHeight,\n\t\t\t\tthis.renderDimensions.blackKeyHeight\n\t\t\t)\n\t\t)\n\t\tthis.playedKeysCtxBlack.clearRect(\n\t\t\t0,\n\t\t\t0,\n\t\t\tthis.renderDimensions.windowWidth,\n\t\t\tMath.max(\n\t\t\t\tthis.renderDimensions.whiteKeyHeight,\n\t\t\t\tthis.renderDimensions.blackKeyHeight\n\t\t\t)\n\t\t)\n\t}\n\n\tdrawPiano(ctxWhite, ctxBlack) {\n\t\tctxWhite.clearRect(\n\t\t\t0,\n\t\t\t0,\n\t\t\tthis.renderDimensions.windowWidth,\n\t\t\tMath.max(\n\t\t\t\tthis.renderDimensions.whiteKeyHeight,\n\t\t\t\tthis.renderDimensions.blackKeyHeight\n\t\t\t)\n\t\t)\n\t\tctxBlack.clearRect(\n\t\t\t0,\n\t\t\t0,\n\t\t\tthis.renderDimensions.windowWidth,\n\t\t\tMath.max(\n\t\t\t\tthis.renderDimensions.whiteKeyHeight,\n\t\t\t\tthis.renderDimensions.blackKeyHeight\n\t\t\t)\n\t\t)\n\t\t//Background\n\t\tctxWhite.fillStyle = \"rgba(0,0,0,1)\"\n\t\tctxWhite.fillRect(\n\t\t\t0,\n\t\t\t5,\n\t\t\tthis.renderDimensions.windowWidth,\n\t\t\tthis.renderDimensions.whiteKeyHeight\n\t\t)\n\n\t\tthis.drawWhiteKeys(ctxWhite)\n\t\tif (getSetting(\"showKeyNamesOnPianoWhite\")) {\n\t\t\tthis.drawWhiteKeyNames(ctxWhite)\n\t\t}\n\t\t// var img = new Image()\n\t\t// img.src = \"../../blackKey.svg\"\n\t\t// img.onload = function () {\n\t\tthis.drawBlackKeys(ctxBlack)\n\t\tif (getSetting(\"showKeyNamesOnPianoBlack\")) {\n\t\t\tthis.drawBlackKeyNames(ctxBlack)\n\t\t}\n\t\t// }.bind(this)\n\n\t\t//velvet\n\t\tctxWhite.strokeStyle = \"rgba(155,50,50,1)\"\n\t\tctxWhite.shadowColor = \"rgba(155,50,50,1)\"\n\t\tctxWhite.shadowOffsetY = 2\n\t\tctxWhite.shadowBlur = 2\n\t\tctxWhite.lineWidth = 4\n\t\tctxWhite.beginPath()\n\t\tctxWhite.moveTo(this.renderDimensions.windowWidth, 2)\n\t\tctxWhite.lineTo(0, 2)\n\t\tctxWhite.closePath()\n\t\tctxWhite.stroke()\n\t\tctxWhite.shadowColor = \"rgba(0,0,0,0)\"\n\t\tctxWhite.shadowBlur = 0\n\t}\n\n\tdrawWhiteKeys(ctxWhite) {\n\t\tfor (\n\t\t\tlet i = Math.max(0, this.renderDimensions.minNoteNumber);\n\t\t\ti <= this.renderDimensions.maxNoteNumber;\n\t\t\ti++\n\t\t) {\n\t\t\tlet dims = this.renderDimensions.getKeyDimensions(i)\n\t\t\tif (!isBlack(i)) {\n\t\t\t\tthis.drawWhiteKey(ctxWhite, dims, \"rgba(255,255,255,1)\")\n\t\t\t}\n\t\t}\n\t}\n\n\tdrawBlackKeys(ctxBlack) {\n\t\tfor (\n\t\t\tlet i = Math.max(0, this.renderDimensions.minNoteNumber);\n\t\t\ti <= this.renderDimensions.maxNoteNumber;\n\t\t\ti++\n\t\t) {\n\t\t\tlet dims = this.renderDimensions.getKeyDimensions(i)\n\t\t\tif (isBlack(i)) {\n\t\t\t\tthis.drawBlackKey(ctxBlack, dims, \"black\", true)\n\t\t\t}\n\t\t}\n\t}\n\tdrawWhiteKeyNames(ctx) {\n\t\tctx.fillStyle = \"black\"\n\t\tconst fontSize = this.renderDimensions.whiteKeyWidth / 2.2\n\t\tctx.font = fontSize + \"px Arial black\"\n\t\tfor (\n\t\t\tlet i = Math.max(0, this.renderDimensions.minNoteNumber);\n\t\t\ti <= this.renderDimensions.maxNoteNumber;\n\t\t\ti++\n\t\t) {\n\t\t\tlet dims = this.renderDimensions.getKeyDimensions(i)\n\t\t\tif (!isBlack(i)) {\n\t\t\t\tlet txt = this.getDisplayKey(CONST.MIDI_NOTE_TO_KEY[i + 21] || \"\")\n\t\t\t\tlet txtWd = ctx.measureText(txt).width\n\t\t\t\tctx.fillText(\n\t\t\t\t\ttxt,\n\t\t\t\t\tdims.x + dims.w / 2 - txtWd / 2,\n\t\t\t\t\tthis.renderDimensions.whiteKeyHeight - fontSize / 3\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t}\n\tdrawBlackKeyNames(ctx) {\n\t\tctx.fillStyle = \"white\"\n\t\tconst fontSize = this.renderDimensions.blackKeyWidth / 2.1\n\t\tctx.font = Math.ceil(fontSize) + \"px Arial black\"\n\t\tfor (\n\t\t\tlet i = Math.max(0, this.renderDimensions.minNoteNumber);\n\t\t\ti <= this.renderDimensions.maxNoteNumber;\n\t\t\ti++\n\t\t) {\n\t\t\tlet dims = this.renderDimensions.getKeyDimensions(i)\n\t\t\tif (isBlack(i)) {\n\t\t\t\tlet txt = this.getDisplayKey(CONST.MIDI_NOTE_TO_KEY[i + 21] || \"\")\n\t\t\t\tlet txtWd = ctx.measureText(txt).width\n\t\t\t\tctx.fillText(\n\t\t\t\t\ttxt,\n\t\t\t\t\tdims.x + dims.w / 2 - txtWd / 2,\n\t\t\t\t\tthis.renderDimensions.blackKeyHeight - 2\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t}\n\tgetDisplayKey(key) {\n\t\tlet blackToHash = replaceAllString(key, \"b\", \"#\")\n\t\treturn blackToHash.replace(/[0-9]/g, \"\")\n\t}\n\t/**\n\t *\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {Dimensions} dims\n\t */\n\tdrawWhiteKey(ctx, dims, color) {\n\t\tlet radius = Math.ceil(this.renderDimensions.whiteKeyWidth / 20)\n\t\tlet x = dims.x\n\t\tlet y = Math.floor(dims.y) + 6\n\t\tlet height = Math.floor(dims.h) - 8\n\t\tlet width = dims.w\n\n\t\tthis.getWhiteKeyPath(ctx, x, y, width, height, radius)\n\n\t\tctx.fillStyle = color\n\t\tctx.fill()\n\n\t\tctx.fillStyle = this.getKeyGradient(ctx)\n\t\tctx.fill()\n\n\t\tctx.closePath()\n\t}\n\tgetKeyGradient(ctx) {\n\t\tif (this.keyGradient == null) {\n\t\t\tthis.keyGradient = ctx.createLinearGradient(\n\t\t\t\tthis.renderDimensions.windowWidth / 2,\n\t\t\t\t0,\n\t\t\t\tthis.renderDimensions.windowWidth / 2,\n\t\t\t\tthis.renderDimensions.whiteKeyHeight\n\t\t\t)\n\t\t\tthis.keyGradient.addColorStop(0, \"rgba(0,0,0,1)\")\n\t\t\tthis.keyGradient.addColorStop(1, \"rgba(255,255,255,0.5)\")\n\t\t}\n\t\treturn this.keyGradient\n\t}\n\tgetWhiteKeyPath(ctx, x, y, width, height, radius) {\n\t\tctx.beginPath()\n\t\tctx.moveTo(x + 1, y)\n\t\tctx.lineTo(x - 1 + width, y)\n\t\tctx.lineTo(x - 1 + width, y + height - radius)\n\t\tctx.lineTo(x - 1 + width - radius, y + height)\n\t\tctx.lineTo(x + 1 + radius, y + height)\n\t\tctx.lineTo(x + 1, y + height - radius)\n\t\tctx.lineTo(x + 1, y)\n\t}\n\n\tstrokeWhiteKey(dims, color) {\n\t\tlet radius = Math.ceil(this.renderDimensions.whiteKeyWidth / 20)\n\t\tlet x = dims.x\n\t\tlet y = Math.floor(dims.y) + 6\n\t\tlet height = Math.floor(dims.h) - 8\n\t\tlet width = dims.w\n\t\tlet ctx = this.playedKeysCtxWhite\n\n\t\tthis.getWhiteKeyPath(ctx, x, y, width, height, radius)\n\t\tctx.strokeStyle = \"black\"\n\t\tctx.lineWidth = 50\n\t\tctx.fill()\n\t\tctx.closePath()\n\t}\n\tdrawBlackKeySvg(ctx, dims, color) {\n\t\tlet radiusTop = this.renderDimensions.blackKeyWidth / 15\n\t\tlet radiusBottom = this.renderDimensions.blackKeyWidth / 8\n\t\tlet x = dims.x\n\t\tlet y = dims.y + 5\n\t\tlet height = dims.h\n\t\tlet width = dims.w\n\n\t\tctx.drawImage(this.blackKeyImg, x, y, width, height)\n\t}\n\t/**\n\t *\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {Dimensions} dims\n\t */\n\tdrawBlackKey(ctx, dims, color, noShadow) {\n\t\tlet radiusTop = 0 //this.renderDimensions.blackKeyWidth / 15\n\t\tlet radiusBottom = this.renderDimensions.blackKeyWidth / 8\n\t\tlet x = dims.x\n\t\tlet y = dims.y + 6\n\t\tlet height = dims.h\n\t\tlet width = dims.w\n\t\tcolor = color || \"black\"\n\n\t\tthis.getBlackKeyPath(ctx, x, y, radiusTop, width, height, radiusBottom)\n\n\t\tctx.fillStyle = color\n\t\tctx.fill()\n\t\tif (!noShadow) {\n\t\t\tctx.fillStyle = this.getKeyGradient()\n\t\t\tctx.fill()\n\t\t}\n\t\tctx.closePath()\n\t}\n\tstrokeBlackKey(dims, color) {\n\t\tlet radiusTop = 0 //this.renderDimensions.blackKeyWidth / 15\n\t\tlet radiusBottom = this.renderDimensions.blackKeyWidth / 8\n\t\tlet x = dims.x\n\t\tlet y = dims.y + 6\n\t\tlet height = dims.h\n\t\tlet width = dims.w\n\t\tlet ctx = this.playedKeysCtxBlack\n\t\tcolor = color || \"white\"\n\n\t\tthis.getBlackKeyPath(ctx, x, y, radiusTop, width, height, radiusBottom)\n\n\t\tctx.strokeStyle = color\n\t\tctx.stroke()\n\t\tctx.closePath()\n\t}\n\n\tgetBlackKeyPath(ctx, x, y, radiusTop, width, height, radiusBottom) {\n\t\tctx.beginPath()\n\t\tctx.moveTo(x + 1, y + radiusTop)\n\t\tctx.lineTo(x + 1 + radiusTop, y)\n\t\tctx.lineTo(x - 1 - radiusTop + width, y)\n\t\tctx.lineTo(x - 1 + width, y + radiusTop)\n\t\tctx.lineTo(x - 1 + width, y + height - radiusBottom)\n\t\tctx.lineTo(x - 1 + width - radiusBottom, y + height)\n\t\tctx.lineTo(x + 1 + radiusBottom, y + height)\n\t\tctx.lineTo(x + 1, y + height - radiusBottom)\n\t\tctx.lineTo(x + 1, y)\n\t}\n\n\tgetPianoCanvasWhite() {\n\t\tif (!this.pianoCanvasWhite) {\n\t\t\tthis.pianoCanvasWhite = DomHelper.createCanvas(\n\t\t\t\tthis.renderDimensions.windowWidth,\n\t\t\t\tMath.max(\n\t\t\t\t\tthis.renderDimensions.whiteKeyHeight,\n\t\t\t\t\tthis.renderDimensions.blackKeyHeight\n\t\t\t\t),\n\t\t\t\t{\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\tleft: \"0px\",\n\t\t\t\t\tzIndex: 99\n\t\t\t\t}\n\t\t\t)\n\t\t\tthis.pianoCanvasWhite.className = \"pianoCanvas\"\n\t\t\tdocument.body.appendChild(this.pianoCanvasWhite)\n\t\t\tthis.ctxWhite = this.pianoCanvasWhite.getContext(\"2d\")\n\t\t}\n\t\treturn this.pianoCanvasWhite\n\t}\n\tgetPlayedKeysWhite() {\n\t\tif (!this.playedKeysCanvasWhite) {\n\t\t\tthis.playedKeysCanvasWhite = DomHelper.createCanvas(\n\t\t\t\tthis.renderDimensions.windowWidth,\n\t\t\t\tMath.max(\n\t\t\t\t\tthis.renderDimensions.whiteKeyHeight,\n\t\t\t\t\tthis.renderDimensions.blackKeyHeight\n\t\t\t\t),\n\t\t\t\t{\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\tleft: \"0px\",\n\t\t\t\t\tzIndex: 99\n\t\t\t\t}\n\t\t\t)\n\t\t\tthis.playedKeysCanvasWhite.className = \"pianoCanvas\"\n\t\t\tdocument.body.appendChild(this.playedKeysCanvasWhite)\n\t\t\tthis.playedKeysCtxWhite = this.playedKeysCanvasWhite.getContext(\"2d\")\n\t\t}\n\t\treturn this.playedKeysCanvasWhite\n\t}\n\tgetPianoCanvasBlack() {\n\t\tif (!this.pianoCanvasBlack) {\n\t\t\tthis.pianoCanvasBlack = DomHelper.createCanvas(\n\t\t\t\tthis.renderDimensions.windowWidth,\n\t\t\t\tMath.max(\n\t\t\t\t\tthis.renderDimensions.whiteKeyHeight,\n\t\t\t\t\tthis.renderDimensions.blackKeyHeight\n\t\t\t\t),\n\t\t\t\t{\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\tleft: \"0px\",\n\t\t\t\t\tzIndex: 99,\n\t\t\t\t\tboxShadow: \"0px 0px 15px 15px rgba(0,0,0,0.4)\"\n\t\t\t\t}\n\t\t\t)\n\t\t\tthis.pianoCanvasBlack.className = \"pianoCanvas\"\n\t\t\tdocument.body.appendChild(this.pianoCanvasBlack)\n\t\t\tthis.ctxBlack = this.pianoCanvasBlack.getContext(\"2d\")\n\t\t}\n\t\treturn this.pianoCanvasBlack\n\t}\n\tgetPlayedKeysBlack() {\n\t\tif (!this.playedKeysCanvasBlack) {\n\t\t\tthis.playedKeysCanvasBlack = DomHelper.createCanvas(\n\t\t\t\tthis.renderDimensions.windowWidth,\n\t\t\t\tMath.max(\n\t\t\t\t\tthis.renderDimensions.whiteKeyHeight,\n\t\t\t\t\tthis.renderDimensions.blackKeyHeight\n\t\t\t\t),\n\t\t\t\t{\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\tleft: \"0px\",\n\t\t\t\t\tzIndex: 99\n\t\t\t\t}\n\t\t\t)\n\t\t\tthis.playedKeysCanvasBlack.className = \"pianoCanvas\"\n\t\t\tdocument.body.appendChild(this.playedKeysCanvasBlack)\n\t\t\tthis.playedKeysCtxBlack = this.playedKeysCanvasBlack.getContext(\"2d\")\n\n\t\t\tthis.playedKeysCanvasBlack.addEventListener(\n\t\t\t\t\"mousedown\",\n\t\t\t\tthis.onPianoMousedown.bind(this)\n\t\t\t)\n\t\t\tthis.playedKeysCanvasBlack.addEventListener(\n\t\t\t\t\"mouseup\",\n\t\t\t\tthis.onPianoMouseup.bind(this)\n\t\t\t)\n\t\t\tthis.playedKeysCanvasBlack.addEventListener(\n\t\t\t\t\"mousemove\",\n\t\t\t\tthis.onPianoMousemove.bind(this)\n\t\t\t)\n\t\t\tthis.playedKeysCanvasBlack.addEventListener(\n\t\t\t\t\"mouseleave\",\n\t\t\t\tthis.onPianoMouseleave.bind(this)\n\t\t\t)\n\t\t}\n\t\treturn this.playedKeysCanvasBlack\n\t}\n\tonPianoMousedown(ev) {\n\t\tif (getSetting(\"clickablePiano\")) {\n\t\t\tlet { x, y } = this.getCanvasPosFromMouseEvent(ev)\n\t\t\tlet keyUnderMouse = this.getKeyAtPos(x, y)\n\t\t\tif (keyUnderMouse >= 0) {\n\t\t\t\tthis.currentKeyUnderMouse = keyUnderMouse\n\t\t\t\tthis.isMouseDown = true\n\t\t\t\tthis.onNoteOn(keyUnderMouse)\n\t\t\t} else {\n\t\t\t\tthis.clearCurrentKeyUnderMouse()\n\t\t\t}\n\t\t}\n\t}\n\n\tonPianoMouseup(ev) {\n\t\tthis.isMouseDown = false\n\t\tthis.clearCurrentKeyUnderMouse()\n\t}\n\tonPianoMouseleave(ev) {\n\t\tthis.isMouseDown = false\n\t\tthis.clearCurrentKeyUnderMouse()\n\t}\n\n\tonPianoMousemove(ev) {\n\t\tif (getSetting(\"clickablePiano\")) {\n\t\t\tlet { x, y } = this.getCanvasPosFromMouseEvent(ev)\n\t\t\tlet keyUnderMouse = this.getKeyAtPos(x, y)\n\t\t\tif (this.isMouseDown && keyUnderMouse >= 0) {\n\t\t\t\tif (this.currentKeyUnderMouse != keyUnderMouse) {\n\t\t\t\t\tthis.onNoteOff(this.currentKeyUnderMouse)\n\t\t\t\t\tthis.onNoteOn(keyUnderMouse)\n\t\t\t\t\tthis.currentKeyUnderMouse = keyUnderMouse\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.clearCurrentKeyUnderMouse()\n\t\t\t}\n\t\t}\n\t}\n\tclearCurrentKeyUnderMouse() {\n\t\tif (this.currentKeyUnderMouse >= 0) {\n\t\t\tthis.onNoteOff(this.currentKeyUnderMouse)\n\t\t}\n\t\tthis.currentKeyUnderMouse = -1\n\t}\n\tgetKeyAtPos(x, y) {\n\t\tlet clickedKey = -1\n\t\tfor (let i = 0; i <= 87; i++) {\n\t\t\tlet dims = this.renderDimensions.getKeyDimensions(i)\n\t\t\tif (x > dims.x && x < dims.x + dims.w) {\n\t\t\t\tif (y > dims.y && y < dims.y + dims.h) {\n\t\t\t\t\tif (clickedKey == -1) {\n\t\t\t\t\t\tclickedKey = i\n\t\t\t\t\t} else if (isBlack(i) && !isBlack(clickedKey)) {\n\t\t\t\t\t\tclickedKey = i\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn clickedKey\n\t}\n\tgetCanvasPosFromMouseEvent(ev) {\n\t\tlet canvHt = Math.max(\n\t\t\tthis.renderDimensions.whiteKeyHeight,\n\t\t\tthis.renderDimensions.blackKeyHeight\n\t\t)\n\t\tlet x = ev.clientX\n\t\tlet y =\n\t\t\tev.clientY -\n\t\t\t(this.renderDimensions.windowHeight -\n\t\t\t\tcanvHt -\n\t\t\t\t(this.renderDimensions.windowHeight -\n\t\t\t\t\tcanvHt -\n\t\t\t\t\tthis.renderDimensions.getAbsolutePianoPosition()))\n\t\treturn { x, y }\n\t}\n}\n","import { getSetting } from \"../settings/Settings.js\"\nimport { formatTime } from \"../Util.js\"\n/**\n * Renders the progress bar of the song\n */\nexport class ProgressBarRender {\n\tconstructor(ctx, renderDimensions) {\n\t\tthis.ctx = ctx\n\t\tthis.ctx.canvas.addEventListener(\n\t\t\t\"mousemove\",\n\t\t\tfunction (ev) {\n\t\t\t\tthis.mouseX = ev.clientX\n\t\t\t}.bind(this)\n\t\t)\n\t\tthis.ctx.canvas.addEventListener(\n\t\t\t\"mouseleave\",\n\t\t\tfunction (ev) {\n\t\t\t\tthis.mouseX = -1000\n\t\t\t}.bind(this)\n\t\t)\n\t\tthis.renderDimensions = renderDimensions\n\t}\n\trender(time, end, markers) {\n\t\tthis.ctx.clearRect(\n\t\t\t0,\n\t\t\t0,\n\t\t\tthis.renderDimensions.windowWidth,\n\t\t\tthis.renderDimensions.windowHeight\n\t\t)\n\t\tlet ctx = this.ctx\n\t\tlet progressPercent = time / (end / 1000)\n\t\tctx.fillStyle = \"rgba(80,80,80,0.8)\"\n\t\tctx.fillRect(this.renderDimensions.windowWidth * progressPercent, 0, 2, 20)\n\t\tctx.fillStyle = \"rgba(50,150,50,0.8)\"\n\t\tctx.fillRect(0, 0, this.renderDimensions.windowWidth * progressPercent, 20)\n\n\t\tlet isShowingAMarker = false\n\n\t\tif (getSetting(\"showMarkersTimeline\")) {\n\t\t\tmarkers.forEach(marker => {\n\t\t\t\tlet xPos = (marker.timestamp / end) * this.renderDimensions.windowWidth\n\t\t\t\tif (Math.abs(xPos - this.mouseX) < 10) {\n\t\t\t\t\tisShowingAMarker = true\n\t\t\t\t\tlet txtWd = ctx.measureText(marker.text).width\n\t\t\t\t\tctx.fillStyle = \"black\"\n\t\t\t\t\tctx.fillText(\n\t\t\t\t\t\tmarker.text,\n\t\t\t\t\t\tMath.max(\n\t\t\t\t\t\t\t5,\n\t\t\t\t\t\t\tMath.min(\n\t\t\t\t\t\t\t\tthis.renderDimensions.windowWidth - txtWd - 5,\n\t\t\t\t\t\t\t\txPos - txtWd / 2\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t),\n\t\t\t\t\t\t15\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\tctx.strokeStyle = \"black\"\n\t\t\t\t\tctx.lineWidth = 2\n\t\t\t\t\tctx.beginPath()\n\t\t\t\t\tctx.moveTo(xPos, 0)\n\t\t\t\t\tctx.lineTo(xPos, 25)\n\n\t\t\t\t\tctx.closePath()\n\t\t\t\t\tctx.stroke()\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif (!isShowingAMarker) {\n\t\t\tctx.fillStyle = \"rgba(0,0,0,1)\"\n\t\t\tlet showMilis = getSetting(\"showMiliseconds\")\n\t\t\tlet text =\n\t\t\t\tformatTime(Math.min(time, end), showMilis) +\n\t\t\t\t\" / \" +\n\t\t\t\tformatTime(end / 1000, showMilis)\n\t\t\tlet wd = ctx.measureText(text).width\n\t\t\tctx.font = \"14px Arial black\"\n\t\t\tctx.fillText(text, this.renderDimensions.windowWidth / 2 - wd / 2, 15)\n\t\t}\n\t}\n}\n","import { DomHelper } from \"../ui/DomHelper.js\"\nimport { PianoRender } from \"./PianoRender.js\"\nimport { DebugRender } from \"./DebugRender.js\"\nimport { OverlayRender } from \"./OverlayRender.js\"\nimport { NoteRender } from \"./NoteRender.js\"\nimport { SustainRender } from \"./SustainRenderer.js\"\nimport { MarkerRenderer } from \"./MarkerRenderer.js\"\nimport { RenderDimensions } from \"./RenderDimensions.js\"\nimport { BackgroundRender } from \"./BackgroundRender.js\"\nimport { MeasureLinesRender } from \"./MeasureLinesRender.js\"\nimport { ProgressBarRender } from \"./ProgressBarRender.js\"\nimport { getSetting, setSettingCallback } from \"../settings/Settings.js\"\nimport { isBlack } from \"../Util.js\"\nimport { getTrackColor, isTrackDrawn } from \"../player/Tracks.js\"\nimport { getPlayerState } from \"../player/Player.js\"\nimport { InSongTextRenderer } from \"./InSongTextRenderer.js\"\n\nconst DEBUG = true\n\nconst DEFAULT_LOOK_BACK_TIME = 4\nconst LOOK_AHEAD_TIME = 10\n\nconst PROGRESS_BAR_CANVAS_HEIGHT = 20\n\n/**\n * Class that handles all rendering\n */\nexport class Render {\n\tconstructor() {\n\t\tthis.renderDimensions = new RenderDimensions()\n\t\tthis.renderDimensions.registerResizeCallback(this.setupCanvases.bind(this))\n\n\t\tsetSettingCallback(\"particleBlur\", this.setCtxBlur.bind(this))\n\n\t\tthis.setupCanvases()\n\n\t\tthis.pianoRender = new PianoRender(this.renderDimensions)\n\n\t\tthis.overlayRender = new OverlayRender(this.ctx, this.renderDimensions)\n\t\t// this.addStartingOverlayMessage()\n\n\t\tthis.debugRender = new DebugRender(DEBUG, this.ctx, this.renderDimensions)\n\t\tthis.noteRender = new NoteRender(\n\t\t\tthis.ctx,\n\t\t\tthis.ctxForeground,\n\t\t\tthis.renderDimensions,\n\t\t\tthis.pianoRender\n\t\t)\n\t\tthis.sustainRender = new SustainRender(this.ctx, this.renderDimensions)\n\t\tthis.markerRender = new MarkerRenderer(this.ctx, this.renderDimensions)\n\t\tthis.inSongTextRender = new InSongTextRenderer(\n\t\t\tthis.ctx,\n\t\t\tthis.renderDimensions\n\t\t)\n\n\t\tthis.measureLinesRender = new MeasureLinesRender(\n\t\t\tthis.ctx,\n\t\t\tthis.renderDimensions\n\t\t)\n\n\t\tthis.progressBarRender = new ProgressBarRender(\n\t\t\tthis.progressBarCtx,\n\t\t\tthis.renderDimensions\n\t\t)\n\n\t\tthis.backgroundRender = new BackgroundRender(\n\t\t\tthis.ctxBG,\n\t\t\tthis.renderDimensions\n\t\t)\n\n\t\tthis.mouseX = 0\n\t\tthis.mouseY = 0\n\n\t\tthis.playerState = getPlayerState()\n\n\t\tthis.showKeyNamesOnPianoWhite = getSetting(\"showKeyNamesOnPianoWhite\")\n\t\tthis.showKeyNamesOnPianoBlack = getSetting(\"showKeyNamesOnPianoBlack\")\n\t}\n\n\tsetCtxBlur() {\n\t\tlet blurPx = parseInt(getSetting(\"particleBlur\"))\n\t\tif (blurPx == 0) {\n\t\t\tthis.ctxForeground.filter = \"none\"\n\t\t} else {\n\t\t\tthis.ctxForeground.filter = \"blur(\" + blurPx + \"px)\"\n\t\t}\n\t}\n\tsetPianoInputListeners(onNoteOn, onNoteOff) {\n\t\tthis.pianoRender.setPianoInputListeners(onNoteOn, onNoteOff)\n\t}\n\n\t/**\n\t * Main rendering function\n\t */\n\trender(playerState) {\n\t\tthis.playerState = playerState\n\t\tthis.ctx.clearRect(\n\t\t\t0,\n\t\t\t0,\n\t\t\tthis.renderDimensions.windowWidth,\n\t\t\tthis.renderDimensions.windowHeight\n\t\t)\n\t\tthis.ctxForeground.clearRect(\n\t\t\t0,\n\t\t\t0,\n\t\t\tthis.renderDimensions.windowWidth,\n\t\t\tthis.renderDimensions.windowHeight\n\t\t)\n\n\t\tthis.pianoRender.clearPlayedKeysCanvases()\n\t\tif (\n\t\t\tthis.showKeyNamesOnPianoWhite != getSetting(\"showKeyNamesOnPianoWhite\") ||\n\t\t\tthis.showKeyNamesOnPianoBlack != getSetting(\"showKeyNamesOnPianoBlack\")\n\t\t) {\n\t\t\tthis.showKeyNamesOnPianoWhite = getSetting(\"showKeyNamesOnPianoWhite\")\n\t\t\tthis.showKeyNamesOnPianoBlack = getSetting(\"showKeyNamesOnPianoBlack\")\n\t\t\tthis.pianoRender.resize()\n\t\t}\n\n\t\tif (\n\t\t\tthis.renderDimensions.pianoPositionY !=\n\t\t\tparseInt(getSetting(\"pianoPosition\"))\n\t\t) {\n\t\t\tthis.renderDimensions.pianoPositionY = parseInt(\n\t\t\t\tgetSetting(\"pianoPosition\")\n\t\t\t)\n\t\t\tthis.pianoRender.repositionCanvases()\n\t\t}\n\t\tthis.backgroundRender.renderIfColorsChanged()\n\n\t\tlet renderInfosByTrackMap = this.getRenderInfoByTrackMap(playerState)\n\t\tlet inputActiveRenderInfos = this.getInputActiveRenderInfos(playerState)\n\t\tlet inputPlayedRenderInfos = this.getInputPlayedRenderInfos(playerState)\n\t\tconst time = this.getRenderTime(playerState)\n\t\tconst end = playerState.end\n\t\tif (!playerState.loading && playerState.song) {\n\t\t\tconst measureLines = playerState.song\n\t\t\t\t? playerState.song.getMeasureLines()\n\t\t\t\t: []\n\n\t\t\tthis.progressBarRender.render(time, end, playerState.song.markers)\n\t\t\tthis.measureLinesRender.render(time, measureLines)\n\t\t\tthis.sustainRender.render(\n\t\t\t\ttime,\n\t\t\t\tplayerState.song.sustainsBySecond,\n\t\t\t\tplayerState.song.sustainPeriods\n\t\t\t)\n\n\t\t\tthis.noteRender.render(\n\t\t\t\ttime,\n\t\t\t\trenderInfosByTrackMap,\n\t\t\t\tinputActiveRenderInfos,\n\t\t\t\tinputPlayedRenderInfos\n\t\t\t)\n\t\t\tthis.markerRender.render(time, playerState.song.markers)\n\t\t\tthis.inSongTextRender.render(time, playerState.song.markers)\n\t\t}\n\n\t\tthis.overlayRender.render()\n\n\t\tthis.debugRender.render(\n\t\t\trenderInfosByTrackMap,\n\t\t\tthis.mouseX,\n\t\t\tthis.mouseY,\n\t\t\tthis.renderDimensions.menuHeight\n\t\t)\n\n\t\tif (getSetting(\"showBPM\")) {\n\t\t\tthis.drawBPM(playerState)\n\t\t}\n\t}\n\t/**\n\t * Returns current time adjusted for the render-offset from the settings\n\t * @param {Object} playerState\n\t */\n\tgetRenderTime(playerState) {\n\t\treturn playerState.time + getSetting(\"renderOffset\") / 1000\n\t}\n\tgetRenderInfoByTrackMap(playerState) {\n\t\tlet renderInfoByTrackMap = {}\n\t\tif (playerState)\n\t\t\tif (playerState.song) {\n\t\t\t\tplayerState.song.activeTracks.forEach((track, trackIndex) => {\n\t\t\t\t\tif (isTrackDrawn(trackIndex)) {\n\t\t\t\t\t\trenderInfoByTrackMap[trackIndex] = { black: [], white: [] }\n\n\t\t\t\t\t\tlet time = this.getRenderTime(playerState)\n\t\t\t\t\t\tlet firstSecondShown = Math.floor(\n\t\t\t\t\t\t\ttime - this.renderDimensions.getSecondsDisplayedAfter() - 4\n\t\t\t\t\t\t)\n\t\t\t\t\t\tlet lastSecondShown = Math.ceil(\n\t\t\t\t\t\t\ttime + this.renderDimensions.getSecondsDisplayedBefore()\n\t\t\t\t\t\t)\n\n\t\t\t\t\t\tfor (let i = firstSecondShown; i < lastSecondShown; i++) {\n\t\t\t\t\t\t\tif (track.notesBySeconds[i]) {\n\t\t\t\t\t\t\t\ttrack.notesBySeconds[i]\n\t\t\t\t\t\t\t\t\t// .filter(note => note.instrument != \"percussion\")\n\t\t\t\t\t\t\t\t\t.map(note => this.getNoteRenderInfo(note, time))\n\t\t\t\t\t\t\t\t\t.forEach(renderInfo =>\n\t\t\t\t\t\t\t\t\t\trenderInfo.isBlack\n\t\t\t\t\t\t\t\t\t\t\t? renderInfoByTrackMap[trackIndex].black.push(renderInfo)\n\t\t\t\t\t\t\t\t\t\t\t: renderInfoByTrackMap[trackIndex].white.push(renderInfo)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\treturn renderInfoByTrackMap\n\t}\n\tgetInputActiveRenderInfos(playerState) {\n\t\tlet inputRenderInfos = []\n\t\tfor (let key in playerState.inputActiveNotes) {\n\t\t\tlet activeInputNote = playerState.inputActiveNotes[key]\n\t\t\tinputRenderInfos.push(\n\t\t\t\tthis.getNoteRenderInfo(\n\t\t\t\t\t{\n\t\t\t\t\t\ttimestamp: activeInputNote.timestamp,\n\t\t\t\t\t\tnoteNumber: activeInputNote.noteNumber,\n\t\t\t\t\t\toffTime: playerState.ctxTime * 1000 + 0,\n\t\t\t\t\t\tduration: playerState.ctxTime * 1000 - activeInputNote.timestamp,\n\t\t\t\t\t\tvelocity: 127,\n\t\t\t\t\t\tfillStyle: getSetting(\"inputNoteColor\")\n\t\t\t\t\t},\n\t\t\t\t\tplayerState.ctxTime\n\t\t\t\t)\n\t\t\t)\n\t\t}\n\t\treturn inputRenderInfos\n\t}\n\tgetInputPlayedRenderInfos(playerState) {\n\t\tlet inputRenderInfos = []\n\t\tfor (let key in playerState.inputPlayedNotes) {\n\t\t\tlet playedInputNote = playerState.inputPlayedNotes[key]\n\t\t\tinputRenderInfos.push(\n\t\t\t\tthis.getNoteRenderInfo(\n\t\t\t\t\t{\n\t\t\t\t\t\ttimestamp: playedInputNote.timestamp,\n\t\t\t\t\t\tnoteNumber: playedInputNote.noteNumber,\n\t\t\t\t\t\toffTime: playedInputNote.offTime,\n\t\t\t\t\t\tduration: playerState.ctxTime * 1000 - playedInputNote.timestamp,\n\t\t\t\t\t\tvelocity: 127,\n\t\t\t\t\t\tfillStyle: getSetting(\"inputNoteColor\")\n\t\t\t\t\t},\n\t\t\t\t\tplayerState.ctxTime\n\t\t\t\t)\n\t\t\t)\n\t\t}\n\t\treturn inputRenderInfos\n\t}\n\tgetNoteRenderInfo(note, time) {\n\t\ttime *= 1000\n\t\tlet noteDims = this.renderDimensions.getNoteDimensions(\n\t\t\tnote.noteNumber,\n\t\t\ttime,\n\t\t\tnote.timestamp,\n\t\t\tnote.offTime,\n\t\t\tnote.sustainOffTime\n\t\t)\n\t\tlet isOn = note.timestamp < time && note.offTime > time ? 1 : 0\n\t\tlet elapsedTime = Math.max(0, time - note.timestamp)\n\t\tlet noteDoneRatio = elapsedTime / note.duration\n\n\t\tlet isKeyBlack = isBlack(note.noteNumber)\n\t\t//TODO Clean up. Right now it returns more info than necessary to use in DebugRender..\n\t\treturn {\n\t\t\tnoteNumber: note.noteNumber,\n\t\t\ttimestamp: note.timestamp,\n\t\t\toffTime: note.offTime,\n\t\t\tduration: note.duration,\n\t\t\tinstrument: note.instrument,\n\t\t\ttrack: note.track,\n\t\t\tchannel: note.channel,\n\t\t\tfillStyle: note.fillStyle\n\t\t\t\t? note.fillStyle\n\t\t\t\t: isKeyBlack\n\t\t\t\t? getTrackColor(note.track).black\n\t\t\t\t: getTrackColor(note.track).white,\n\t\t\tcurrentTime: time,\n\t\t\tisBlack: isKeyBlack,\n\t\t\tnoteDims: noteDims,\n\t\t\tisOn: isOn,\n\t\t\tnoteDoneRatio: noteDoneRatio,\n\t\t\trad: noteDims.rad,\n\t\t\tx: noteDims.x + 1,\n\t\t\ty: noteDims.y,\n\t\t\tw: noteDims.w - 2,\n\t\t\th: noteDims.h,\n\t\t\tsustainH: noteDims.sustainH,\n\t\t\tsustainY: noteDims.sustainY,\n\t\t\tvelocity: note.velocity,\n\t\t\tnoteId: note.id\n\t\t}\n\t}\n\n\tdrawBPM(playerState) {\n\t\tthis.ctx.font = \"20px Arial black\"\n\t\tthis.ctx.fillStyle = \"rgba(255,255,255,0.8)\"\n\t\tthis.ctx.textBaseline = \"top\"\n\t\tthis.ctx.fillText(\n\t\t\tMath.round(playerState.bpm) + \" BPM\",\n\t\t\t20,\n\t\t\tthis.renderDimensions.menuHeight + PROGRESS_BAR_CANVAS_HEIGHT + 12\n\t\t)\n\t}\n\n\taddStartingOverlayMessage() {\n\t\tthis.overlayRender.addOverlay(\"MIDiano\", 150)\n\t\tthis.overlayRender.addOverlay(\"A Javascript MIDI-Player\", 150)\n\t\tthis.overlayRender.addOverlay(\n\t\t\t\"Example song by Bernd Krueger from piano-midi.de\",\n\t\t\t150\n\t\t)\n\t}\n\n\t/**\n\t *\n\t */\n\tsetupCanvases() {\n\t\tDomHelper.setCanvasSize(\n\t\t\tthis.getBgCanvas(),\n\t\t\tthis.renderDimensions.windowWidth,\n\t\t\tthis.renderDimensions.windowHeight\n\t\t)\n\n\t\tDomHelper.setCanvasSize(\n\t\t\tthis.getMainCanvas(),\n\t\t\tthis.renderDimensions.windowWidth,\n\t\t\tthis.renderDimensions.windowHeight\n\t\t)\n\n\t\tDomHelper.setCanvasSize(\n\t\t\tthis.getProgressBarCanvas(),\n\t\t\tthis.renderDimensions.windowWidth,\n\t\t\t20\n\t\t)\n\n\t\tDomHelper.setCanvasSize(\n\t\t\tthis.getForegroundCanvas(),\n\t\t\tthis.renderDimensions.windowWidth,\n\t\t\tthis.renderDimensions.windowHeight\n\t\t)\n\t\tthis.setCtxBlur()\n\t}\n\tgetBgCanvas() {\n\t\tif (!this.cnvBG) {\n\t\t\tthis.cnvBG = DomHelper.createCanvas(\n\t\t\t\tthis.renderDimensions.windowWidth,\n\t\t\t\tthis.renderDimensions.windowHeight,\n\t\t\t\t{\n\t\t\t\t\tbackgroundColor: \"black\",\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\ttop: \"0px\",\n\t\t\t\t\tleft: \"0px\"\n\t\t\t\t}\n\t\t\t)\n\t\t\tdocument.body.appendChild(this.cnvBG)\n\t\t\tthis.ctxBG = this.cnvBG.getContext(\"2d\")\n\t\t}\n\t\treturn this.cnvBG\n\t}\n\tgetMainCanvas() {\n\t\tif (!this.cnv) {\n\t\t\tthis.cnv = DomHelper.createCanvas(\n\t\t\t\tthis.renderDimensions.windowWidth,\n\t\t\t\tthis.renderDimensions.windowHeight,\n\t\t\t\t{\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\ttop: \"0px\",\n\t\t\t\t\tleft: \"0px\"\n\t\t\t\t}\n\t\t\t)\n\t\t\tdocument.body.appendChild(this.cnv)\n\t\t\tthis.ctx = this.cnv.getContext(\"2d\")\n\t\t}\n\t\treturn this.cnv\n\t}\n\tgetForegroundCanvas() {\n\t\tif (!this.cnvForeground) {\n\t\t\tthis.cnvForeground = DomHelper.createCanvas(\n\t\t\t\tthis.renderDimensions.windowWidth,\n\t\t\t\tthis.renderDimensions.windowHeight,\n\t\t\t\t{\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\ttop: \"0px\",\n\t\t\t\t\tleft: \"0px\"\n\t\t\t\t}\n\t\t\t)\n\t\t\tthis.cnvForeground.style.pointerEvents = \"none\"\n\t\t\tthis.cnvForeground.style.zIndex = \"101\"\n\t\t\tdocument.body.appendChild(this.cnvForeground)\n\t\t\tthis.ctxForeground = this.cnvForeground.getContext(\"2d\")\n\t\t}\n\t\treturn this.cnvForeground\n\t}\n\n\tgetProgressBarCanvas() {\n\t\tif (!this.progressBarCanvas) {\n\t\t\tthis.progressBarCanvas = DomHelper.createCanvas(\n\t\t\t\tthis.renderDimensions.windowWidth,\n\t\t\t\tPROGRESS_BAR_CANVAS_HEIGHT,\n\t\t\t\t{}\n\t\t\t)\n\t\t\tthis.progressBarCanvas.id = \"progressBarCanvas\"\n\t\t\tdocument.body.appendChild(this.progressBarCanvas)\n\t\t\tthis.progressBarCtx = this.progressBarCanvas.getContext(\"2d\")\n\t\t}\n\t\treturn this.progressBarCanvas\n\t}\n\n\tisNoteDrawn(note, tracks) {\n\t\treturn !tracks[note.track] || !tracks[note.track].draw\n\t}\n\n\tisOnMainCanvas(position) {\n\t\treturn (\n\t\t\t(position.x > this.renderDimensions.menuHeight &&\n\t\t\t\tposition.y < this.renderDimensions.getAbsolutePianoPosition()) ||\n\t\t\tposition.y >\n\t\t\t\tthis.renderDimensions.getAbsolutePianoPosition() +\n\t\t\t\t\tthis.renderDimensions.whiteKeyHeight\n\t\t)\n\t}\n\tsetMouseCoords(x, y) {\n\t\tthis.mouseX = x\n\t\tthis.mouseY = y\n\t}\n\tgetTimeFromHeight(height) {\n\t\treturn (\n\t\t\t(height * this.renderDimensions.getNoteToHeightConst()) /\n\t\t\t(this.renderDimensions.windowHeight -\n\t\t\t\tthis.renderDimensions.whiteKeyHeight) /\n\t\t\t1000\n\t\t)\n\t}\n\tonMenuHeightChanged(menuHeight) {\n\t\tthis.renderDimensions.menuHeight = menuHeight\n\t\tthis.pianoRender.repositionCanvases()\n\t\tthis.getProgressBarCanvas().style.top = menuHeight + \"px\"\n\t\tthis.noteRender.setMenuHeight(menuHeight)\n\t}\n}\n","import { isBlack } from \"../Util.js\"\nimport { getSetting, setSettingCallback } from \"../settings/Settings.js\"\n\nconst MAX_NOTE_NUMBER = 87\nconst MIN_NOTE_NUMBER = 0\n\nconst MIN_WIDTH = 1040\nconst MIN_HEIGHT = 560\n\n/**\n * Class to handle all the calculation of dimensions of the Notes & Keys on Screen-\n */\nexport class RenderDimensions {\n\tconstructor() {\n\t\twindow.addEventListener(\"resize\", this.resize.bind(this))\n\t\tthis.resizeCallbacks = []\n\t\tthis.numberOfWhiteKeysShown = 52\n\t\tthis.minNoteNumber = MIN_NOTE_NUMBER\n\t\tthis.maxNoteNumber = MAX_NOTE_NUMBER\n\t\tthis.menuHeight = 200\n\t\tsetSettingCallback(\"blackKeyHeight\", this.resize.bind(this))\n\t\tsetSettingCallback(\"whiteKeyHeight\", this.resize.bind(this))\n\t\tthis.resize()\n\t}\n\t/**\n\t * Recompute all dimensions dependent on Screen Size\n\t */\n\tresize() {\n\t\tthis.windowWidth = Math.max(MIN_WIDTH, Math.floor(window.innerWidth))\n\t\tthis.windowHeight = Math.floor(window.innerHeight)\n\n\t\tthis.keyDimensions = {}\n\t\tthis.computeKeyDimensions()\n\t\tthis.resizeCallbacks.forEach(func => func())\n\t}\n\tregisterResizeCallback(callback) {\n\t\tthis.resizeCallbacks.push(callback)\n\t}\n\n\t/**\n\t * Computes the key dimensions. Should be called on resize.\n\t */\n\tcomputeKeyDimensions() {\n\t\tthis.pianoPositionY = getSetting(\"pianoPosition\")\n\t\tthis.whiteKeyWidth =\n\t\t\t// Math.max(\n\t\t\t// \t20,\n\t\t\tthis.windowWidth / this.numberOfWhiteKeysShown\n\t\t// )\n\n\t\tthis.whiteKeyHeight = Math.min(\n\t\t\tMath.floor(this.windowHeight * 0.2),\n\t\t\tthis.whiteKeyWidth * 4.5\n\t\t)\n\t\tthis.blackKeyWidth = Math.floor(this.whiteKeyWidth * 0.5829787234)\n\t\tthis.blackKeyHeight =\n\t\t\tMath.floor((this.whiteKeyHeight * 2) / 3) *\n\t\t\t(getSetting(\"blackKeyHeight\") / 100)\n\n\t\t//Do this after computing blackKey, as its dependent on the white key size ( without adjusting for the setting )\n\t\tthis.whiteKeyHeight *= getSetting(\"whiteKeyHeight\") / 100\n\t}\n\n\t/**\n\t * Returns the dimensions for the piano-key of the given note\n\t *\n\t * @param {Number} noteNumber\n\t */\n\tgetKeyDimensions(noteNumber) {\n\t\tif (!this.keyDimensions.hasOwnProperty(noteNumber)) {\n\t\t\tlet isNoteBlack = isBlack(noteNumber)\n\t\t\tlet x = this.getKeyX(noteNumber)\n\n\t\t\tthis.keyDimensions[noteNumber] = {\n\t\t\t\tx: x,\n\t\t\t\ty: 0,\n\t\t\t\tw: isNoteBlack ? this.blackKeyWidth : this.whiteKeyWidth,\n\t\t\t\th: isNoteBlack ? this.blackKeyHeight : this.whiteKeyHeight,\n\t\t\t\tblack: isNoteBlack\n\t\t\t}\n\t\t}\n\t\treturn this.keyDimensions[noteNumber]\n\t}\n\tgetAbsolutePianoPosition() {\n\t\tlet pianoSettingsRatio = getSetting(\"reverseNoteDirection\")\n\t\t\t? 1 - parseInt(this.pianoPositionY) / 100\n\t\t\t: parseInt(this.pianoPositionY) / 100\n\t\tlet y =\n\t\t\tthis.windowHeight -\n\t\t\tthis.whiteKeyHeight -\n\t\t\tMath.ceil(\n\t\t\t\tpianoSettingsRatio *\n\t\t\t\t\t(this.windowHeight - this.whiteKeyHeight - this.menuHeight - 24)\n\t\t\t)\n\n\t\treturn y\n\t}\n\n\t/**\n\t * Returns x-value  of the given Notenumber\n\t *\n\t * @param {Integer} noteNumber\n\t */\n\tgetKeyX(noteNumber) {\n\t\treturn (\n\t\t\t(this.getWhiteKeyNumber(noteNumber) -\n\t\t\t\tthis.getWhiteKeyNumber(this.minNoteNumber)) *\n\t\t\t\tthis.whiteKeyWidth +\n\t\t\t(this.whiteKeyWidth - this.blackKeyWidth / 2) * isBlack(noteNumber)\n\t\t)\n\t}\n\n\t/**\n\t * Returns the \"white key index\" of the note number. Ignores if the key itself is black\n\t * @param {Number} noteNumber\n\t */\n\tgetWhiteKeyNumber(noteNumber) {\n\t\treturn (\n\t\t\tnoteNumber -\n\t\t\tMath.floor(Math.max(0, noteNumber + 11) / 12) -\n\t\t\tMath.floor(Math.max(0, noteNumber + 8) / 12) -\n\t\t\tMath.floor(Math.max(0, noteNumber + 6) / 12) -\n\t\t\tMath.floor(Math.max(0, noteNumber + 3) / 12) -\n\t\t\tMath.floor(Math.max(0, noteNumber + 1) / 12)\n\t\t)\n\t}\n\n\t/**\n\t * Returns y value corresponding to the given time\n\t *\n\t * @param {Number} time\n\t */\n\tgetYForTime(time) {\n\t\tconst height = this.windowHeight - this.whiteKeyHeight\n\t\tlet noteToHeightConst = this.getNoteToHeightConst()\n\t\tif (time < 0) {\n\t\t\tnoteToHeightConst /= getSetting(\"playedNoteFalloffSpeed\")\n\t\t}\n\n\t\tif (getSetting(\"reverseNoteDirection\")) {\n\t\t\treturn (\n\t\t\t\t(time / noteToHeightConst) * height +\n\t\t\t\tthis.getAbsolutePianoPosition() +\n\t\t\t\tthis.whiteKeyHeight\n\t\t\t)\n\t\t} else {\n\t\t\treturn (\n\t\t\t\theight -\n\t\t\t\t(time / noteToHeightConst) * height -\n\t\t\t\t(height - this.getAbsolutePianoPosition())\n\t\t\t)\n\t\t}\n\t}\n\n\t/**\n     *Returns rendering x/y-location & size for the given note & time-info\n     \n\t * @param {Integer} noteNumber \n\t * @param {Number} currentTime\n\t * @param {Number} noteStartTime\n\t * @param {Number} noteEndTime\n\t * @param {Number} sustainOffTime\n\t */\n\tgetNoteDimensions(\n\t\tnoteNumber,\n\t\tcurrentTime,\n\t\tnoteStartTime,\n\t\tnoteEndTime,\n\t\tsustainOffTime\n\t) {\n\t\tconst dur = noteEndTime - noteStartTime\n\t\tconst isKeyBlack = isBlack(noteNumber)\n\t\tlet x = this.getKeyX(noteNumber)\n\t\tlet w = isKeyBlack ? this.blackKeyWidth : this.whiteKeyWidth\n\t\tlet h =\n\t\t\t(dur / this.getNoteToHeightConst()) *\n\t\t\t(this.windowHeight - this.whiteKeyHeight)\n\n\t\tlet hCorrection = 0\n\t\tlet minNoteHeight = parseFloat(getSetting(\"minNoteHeight\"))\n\t\tif (h < minNoteHeight + 2) {\n\t\t\thCorrection = minNoteHeight + 2 - h\n\t\t\th = minNoteHeight + 2\n\t\t}\n\n\t\tlet rad = (getSetting(\"noteBorderRadius\") / 100) * w\n\t\tif (h < rad * 2) {\n\t\t\trad = h / 2\n\t\t}\n\t\tlet y = this.getYForTime(noteEndTime - currentTime)\n\t\tlet reversed = getSetting(\"reverseNoteDirection\")\n\t\tif (reversed) {\n\t\t\ty -= h\n\t\t}\n\n\t\tlet sustainY = 0\n\t\tlet sustainH = 0\n\t\tif (sustainOffTime > noteEndTime) {\n\t\t\tsustainH =\n\t\t\t\t((sustainOffTime - noteEndTime) / this.getNoteToHeightConst()) *\n\t\t\t\t(this.windowHeight - this.whiteKeyHeight)\n\t\t\tsustainY = this.getYForTime(sustainOffTime - currentTime)\n\t\t\tif (reversed) {\n\t\t\t\tsustainY -= sustainH\n\t\t\t}\n\t\t}\n\n\t\t//adjust height/y for notes that have passed the piano / have been played\n\t\tlet showSustainedNotes = getSetting(\"showSustainedNotes\")\n\t\tlet endTime = showSustainedNotes\n\t\t\t? Math.max(isNaN(sustainOffTime) ? 0 : sustainOffTime, noteEndTime)\n\t\t\t: noteEndTime\n\n\t\tif (showSustainedNotes) {\n\t\t\tif (!isNaN(sustainOffTime) && sustainOffTime < currentTime) {\n\t\t\t\tsustainY += (reversed ? -1 : 1) * this.whiteKeyHeight\n\t\t\t}\n\t\t\tif (\n\t\t\t\t!isNaN(sustainOffTime) &&\n\t\t\t\tsustainOffTime > currentTime &&\n\t\t\t\tnoteEndTime < currentTime\n\t\t\t) {\n\t\t\t\tsustainH += this.whiteKeyHeight\n\t\t\t\tif (reversed) {\n\t\t\t\t\tsustainY -= this.whiteKeyHeight\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (endTime < currentTime) {\n\t\t\tlet endRatio =\n\t\t\t\t(currentTime - endTime) / this.getMilisecondsDisplayedAfter()\n\n\t\t\tendRatio = Math.max(0, 1 - getSetting(\"noteEndedShrink\") * endRatio)\n\n\t\t\tx = x + (w - w * endRatio) / 2\n\t\t\tw *= endRatio\n\n\t\t\tlet tmpH = h\n\t\t\th *= endRatio\n\t\t\ty += (reversed ? -1 : 1) * (tmpH - h)\n\n\t\t\tlet tmpSustainH = sustainH\n\t\t\tsustainH *= endRatio\n\t\t\tsustainY +=\n\t\t\t\t(reversed ? -1 : 1) * (tmpSustainH - sustainH) +\n\t\t\t\t(reversed ? -1 : 1) * (tmpH - h)\n\t\t}\n\t\treturn {\n\t\t\tx: x + 1,\n\t\t\ty: y + 1 - hCorrection,\n\t\t\tw: w - 2,\n\t\t\th: h - 2,\n\t\t\trad: rad,\n\t\t\tsustainH: sustainH,\n\t\t\tsustainY: sustainY,\n\t\t\tisBlack: isKeyBlack\n\t\t}\n\t}\n\n\tgetNoteToHeightConst() {\n\t\treturn getSetting(\"noteToHeightConst\") * this.windowHeight\n\t}\n\n\tgetSecondsDisplayedBefore() {\n\t\tlet pianoPos = getSetting(\"pianoPosition\") / 100\n\t\treturn Math.ceil(((1 - pianoPos) * this.getNoteToHeightConst()) / 1000)\n\t}\n\tgetSecondsDisplayedAfter() {\n\t\treturn Math.ceil(this.getMilisecondsDisplayedAfter() / 1000)\n\t}\n\tgetMilisecondsDisplayedAfter() {\n\t\tlet pianoPos = getSetting(\"pianoPosition\") / 100\n\t\treturn (\n\t\t\tpianoPos *\n\t\t\t(this.getNoteToHeightConst() / getSetting(\"playedNoteFalloffSpeed\"))\n\t\t)\n\t}\n\n\t//ZOOM\n\tshowAll() {\n\t\tthis.setZoom(MIN_NOTE_NUMBER, MAX_NOTE_NUMBER)\n\t}\n\tfitSong(range) {\n\t\trange.min = Math.max(range.min, MIN_NOTE_NUMBER)\n\t\trange.max = Math.min(range.max, MAX_NOTE_NUMBER)\n\t\twhile (\n\t\t\tisBlack(range.min - MIN_NOTE_NUMBER) &&\n\t\t\trange.min > MIN_NOTE_NUMBER\n\t\t) {\n\t\t\trange.min--\n\t\t}\n\t\twhile (\n\t\t\tisBlack(range.max - MIN_NOTE_NUMBER) &&\n\t\t\trange.max < MAX_NOTE_NUMBER\n\t\t) {\n\t\t\trange.max++\n\t\t}\n\t\tthis.setZoom(range.min, range.max)\n\t}\n\tzoomIn() {\n\t\tthis.minNoteNumber++\n\t\tthis.maxNoteNumber--\n\t\twhile (\n\t\t\tisBlack(this.minNoteNumber - MIN_NOTE_NUMBER) &&\n\t\t\tthis.minNoteNumber < this.maxNoteNumber\n\t\t) {\n\t\t\tthis.minNoteNumber++\n\t\t}\n\t\twhile (\n\t\t\tisBlack(this.maxNoteNumber - MIN_NOTE_NUMBER) &&\n\t\t\tthis.maxNoteNumber > this.minNoteNumber\n\t\t) {\n\t\t\tthis.maxNoteNumber--\n\t\t}\n\t\tthis.setZoom(this.minNoteNumber, this.maxNoteNumber)\n\t}\n\tzoomOut() {\n\t\tthis.minNoteNumber--\n\t\tthis.maxNoteNumber++\n\t\twhile (\n\t\t\tisBlack(this.minNoteNumber - MIN_NOTE_NUMBER) &&\n\t\t\tthis.minNoteNumber > MIN_NOTE_NUMBER\n\t\t) {\n\t\t\tthis.minNoteNumber--\n\t\t}\n\t\twhile (\n\t\t\tisBlack(this.maxNoteNumber - MIN_NOTE_NUMBER) &&\n\t\t\tthis.maxNoteNumber < MAX_NOTE_NUMBER\n\t\t) {\n\t\t\tthis.maxNoteNumber++\n\t\t}\n\t\tthis.setZoom(\n\t\t\tMath.max(MIN_NOTE_NUMBER, this.minNoteNumber),\n\t\t\tMath.min(MAX_NOTE_NUMBER, this.maxNoteNumber)\n\t\t)\n\t}\n\tmoveViewLeft() {\n\t\tif (this.minNoteNumber == MIN_NOTE_NUMBER) return\n\t\tthis.minNoteNumber--\n\t\tthis.maxNoteNumber--\n\t\twhile (\n\t\t\tisBlack(this.minNoteNumber - MIN_NOTE_NUMBER) &&\n\t\t\tthis.minNoteNumber > MIN_NOTE_NUMBER\n\t\t) {\n\t\t\tthis.minNoteNumber--\n\t\t}\n\t\twhile (isBlack(this.maxNoteNumber - MIN_NOTE_NUMBER)) {\n\t\t\tthis.maxNoteNumber--\n\t\t}\n\t\tthis.setZoom(\n\t\t\tMath.max(MIN_NOTE_NUMBER, this.minNoteNumber),\n\t\t\tthis.maxNoteNumber\n\t\t)\n\t}\n\tmoveViewRight() {\n\t\tif (this.maxNoteNumber == MAX_NOTE_NUMBER) return\n\t\tthis.minNoteNumber++\n\t\tthis.maxNoteNumber++\n\t\twhile (isBlack(this.minNoteNumber - MIN_NOTE_NUMBER)) {\n\t\t\tthis.minNoteNumber++\n\t\t}\n\t\twhile (\n\t\t\tisBlack(this.maxNoteNumber - MIN_NOTE_NUMBER) &&\n\t\t\tthis.maxNoteNumber < MAX_NOTE_NUMBER\n\t\t) {\n\t\t\tthis.maxNoteNumber++\n\t\t}\n\n\t\tthis.setZoom(\n\t\t\tthis.minNoteNumber,\n\t\t\tMath.min(MAX_NOTE_NUMBER, this.maxNoteNumber)\n\t\t)\n\t}\n\n\t/**\n\t *\n\t * @param {Number} minNoteNumber\n\t * @param {Number} maxNoteNumber\n\t */\n\tsetZoom(minNoteNumber, maxNoteNumber) {\n\t\tlet numOfWhiteKeysInRange = 0\n\t\tfor (let i = minNoteNumber; i <= maxNoteNumber; i++) {\n\t\t\tnumOfWhiteKeysInRange += isBlack(i - MIN_NOTE_NUMBER) ? 0 : 1\n\t\t}\n\t\tthis.minNoteNumber = minNoteNumber\n\t\tthis.maxNoteNumber = maxNoteNumber\n\t\tthis.numberOfWhiteKeysShown = numOfWhiteKeysInRange\n\n\t\tthis.resize()\n\t}\n}\n","import { getSetting } from \"../settings/Settings.js\"\n\n/**\n * Class to render the sustain events in the midi-song. Can fill the sustain periods or draw lines for the individual control-events.\n */\nexport class SustainRender {\n\tconstructor(ctx, renderDimensions, lookBackTime, lookAheadTime) {\n\t\tthis.ctx = ctx\n\t\tthis.renderDimensions = renderDimensions\n\n\t\tthis.sustainPeriodFillStyle = \"rgba(0,0,0,0.4)\"\n\t\tthis.sustainOnStrokeStyle = \"rgba(55,155,55,0.6)\"\n\t\tthis.sustainOffStrokeStyle = \"rgba(155,55,55,0.6)\"\n\t\tthis.sustainOnOffFont = \"12px Arial black\"\n\t}\n\trender(time, sustainsBySecond, sustainPeriods) {\n\t\tif (getSetting(\"showSustainOnOffs\")) {\n\t\t\tthis.renderSustainOnOffs(time, sustainsBySecond)\n\t\t}\n\t\tif (getSetting(\"showSustainPeriods\")) {\n\t\t\tthis.renderSustainPeriods(time, sustainPeriods)\n\t\t}\n\t}\n\t/**\n\t * Renders On/Off Sustain Control-Events as lines on screen.\n\t *\n\t * @param {Number} time\n\t * @param {Object} sustainsBySecond\n\t */\n\trenderSustainOnOffs(time, sustainsBySecond) {\n\t\tlet lookBackTime = Math.floor(\n\t\t\ttime - this.renderDimensions.getSecondsDisplayedAfter() - 4\n\t\t)\n\t\tlet lookAheadTime = Math.ceil(\n\t\t\ttime + this.renderDimensions.getSecondsDisplayedBefore() + 1\n\t\t)\n\n\t\tfor (\n\t\t\tlet lookUpTime = lookBackTime;\n\t\t\tlookUpTime < lookAheadTime;\n\t\t\tlookUpTime++\n\t\t) {\n\t\t\tif (sustainsBySecond.hasOwnProperty(lookUpTime)) {\n\t\t\t\tsustainsBySecond[lookUpTime].forEach(sustain => {\n\t\t\t\t\tthis.ctx.lineWidth = \"1\"\n\t\t\t\t\tlet text = \"\"\n\t\t\t\t\tthis.ctx.fillStyle = \"rgba(0,0,0,0.8)\"\n\t\t\t\t\tif (sustain.isOn) {\n\t\t\t\t\t\tthis.ctx.strokeStyle = this.sustainOnStrokeStyle\n\t\t\t\t\t\ttext = \"Sustain On\"\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.ctx.strokeStyle = this.sustainOffStrokeStyle\n\t\t\t\t\t\ttext = \"Sustain Off\"\n\t\t\t\t\t}\n\t\t\t\t\tlet y = this.renderDimensions.getYForTime(\n\t\t\t\t\t\tsustain.timestamp - time * 1000\n\t\t\t\t\t)\n\t\t\t\t\tthis.ctx.beginPath()\n\t\t\t\t\tthis.ctx.moveTo(0, y)\n\t\t\t\t\tthis.ctx.lineTo(this.renderDimensions.windowWidth, y)\n\t\t\t\t\tthis.ctx.closePath()\n\t\t\t\t\tthis.ctx.stroke()\n\n\t\t\t\t\tthis.ctx.fillStyle = \"rgba(200,200,200,0.9)\"\n\t\t\t\t\tthis.ctx.font = this.sustainOnOffFont\n\t\t\t\t\tthis.ctx.fillText(text, 10, y - 12)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\t/**\n\t * Renders Sustain Periods as rectangles on screen.\n\t * @param {Number} time\n\t * @param {Array} sustainPeriods\n\t */\n\trenderSustainPeriods(time, sustainPeriods) {\n\t\tlet firstSecondShown = Math.floor(\n\t\t\ttime - this.renderDimensions.getSecondsDisplayedAfter() - 4\n\t\t)\n\t\tlet lastSecondShown = Math.ceil(\n\t\t\ttime + this.renderDimensions.getSecondsDisplayedBefore() + 1\n\t\t)\n\t\tthis.ctx.fillStyle = this.sustainPeriodFillStyle\n\n\t\tsustainPeriods\n\t\t\t.filter(\n\t\t\t\tperiod =>\n\t\t\t\t\t(period.start < lastSecondShown * 1000 &&\n\t\t\t\t\t\tperiod.start > firstSecondShown * 1000) ||\n\t\t\t\t\t(period.start < firstSecondShown * 1000 &&\n\t\t\t\t\t\tperiod.end > firstSecondShown * 1000)\n\t\t\t)\n\t\t\t.forEach(period => {\n\t\t\t\tlet yStart = this.renderDimensions.getYForTime(\n\t\t\t\t\tperiod.start - time * 1000\n\t\t\t\t)\n\t\t\t\tlet yEnd = this.renderDimensions.getYForTime(period.end - time * 1000)\n\n\t\t\t\tthis.ctx.fillRect(\n\t\t\t\t\t0,\n\t\t\t\t\tyEnd,\n\t\t\t\t\tthis.renderDimensions.windowWidth,\n\t\t\t\t\tyStart - yEnd\n\t\t\t\t)\n\t\t\t})\n\t}\n}\n","import { CONST } from \"./data/CONST.js\"\nexport class Song {\n\tconstructor(midiData, fileName, name) {\n\t\tthis.fileName = fileName\n\t\tthis.name = name || fileName\n\t\tthis.text = []\n\t\tthis.timeSignature\n\t\tthis.keySignarture\n\t\tthis.duration = 0\n\t\tthis.speed = 1\n\t\tthis.notesBySeconds = {}\n\t\tthis.controlEvents = []\n\t\tthis.temporalData = midiData.temporalData\n\t\tthis.sustainsBySecond = midiData.temporalData.sustainsBySecond\n\n\t\tthis.header = midiData.header\n\t\tthis.tracks = midiData.tracks\n\t\tthis.markers = []\n\t\tthis.otherTracks = []\n\t\tthis.activeTracks = []\n\t\tthis.microSecondsPerBeat = 10\n\t\tthis.channels = this.getDefaultChannels()\n\t\tthis.idCounter = 0\n\n\t\tthis.processEvents(midiData)\n\t\tconsole.log(this)\n\t}\n\tgetStart() {\n\t\treturn this.getNoteSequence()[0].timestamp\n\t}\n\tgetEnd() {\n\t\tif (!this.end) {\n\t\t\tlet noteSequence = this.getNoteSequence().sort(\n\t\t\t\t(a, b) => a.offTime - b.offTime\n\t\t\t)\n\t\t\tlet lastNote = noteSequence[noteSequence.length - 1]\n\t\t\tthis.end = lastNote.offTime\n\t\t}\n\t\treturn this.end\n\t}\n\tgetOffset() {\n\t\tif (!this.smpteOffset) {\n\t\t\treturn 0 //\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t((this.smpteOffset.hour * 60 + this.smpteOffset.min) * 60 +\n\t\t\t\t\tthis.smpteOffset.sec) *\n\t\t\t\t1000\n\t\t\t)\n\t\t}\n\t}\n\tgetMeasureLines() {\n\t\tif (!this.measureLines) {\n\t\t\tthis.setMeasureLines()\n\t\t}\n\t\treturn this.measureLines\n\t}\n\tsetMeasureLines() {\n\t\tlet timeSignature = this.timeSignature || {\n\t\t\tnumerator: 4,\n\t\t\tdenominator: 4,\n\t\t\tthirtySeconds: 8\n\t\t}\n\t\tlet numerator = timeSignature.numerator || 4\n\t\tlet denominator = timeSignature.denominator || 4\n\t\tlet thirtySeconds = timeSignature.thirtyseconds || 8\n\n\t\tlet beatsPerMeasure = numerator / (denominator * (thirtySeconds / 32))\n\t\tlet skippedBeats = beatsPerMeasure - 1\n\t\tthis.measureLines = {}\n\t\tObject.keys(this.temporalData.beatsBySecond).forEach(second => {\n\t\t\tthis.temporalData.beatsBySecond[second].forEach(beat => {\n\t\t\t\tif (skippedBeats < beatsPerMeasure - 1) {\n\t\t\t\t\tskippedBeats++\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tskippedBeats = 0\n\t\t\t\tif (!this.measureLines.hasOwnProperty(second)) {\n\t\t\t\t\tthis.measureLines[second] = []\n\t\t\t\t}\n\t\t\t\tthis.measureLines[second].push(beat)\n\t\t\t})\n\t\t})\n\t}\n\tsetSustainPeriods() {\n\t\tthis.sustainPeriods = []\n\t\tlet isOn = false\n\t\tfor (let second in this.sustainsBySecond) {\n\t\t\tthis.sustainsBySecond[second].forEach(sustain => {\n\t\t\t\tif (isOn) {\n\t\t\t\t\tif (!sustain.isOn) {\n\t\t\t\t\t\tisOn = false\n\t\t\t\t\t\tthis.sustainPeriods[this.sustainPeriods.length - 1].end =\n\t\t\t\t\t\t\tsustain.timestamp\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (sustain.isOn) {\n\t\t\t\t\t\tisOn = true\n\t\t\t\t\t\tthis.sustainPeriods.push({\n\t\t\t\t\t\t\tstart: sustain.timestamp,\n\t\t\t\t\t\t\tvalue: sustain.value\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\tgetMicrosecondsPerBeat() {\n\t\treturn this.microSecondsPerBeat\n\t}\n\tgetBPM(time) {\n\t\tfor (let i = this.temporalData.bpms.length - 1; i >= 0; i--) {\n\t\t\tif (this.temporalData.bpms[i].timestamp < time) {\n\t\t\t\treturn this.temporalData.bpms[i].bpm\n\t\t\t}\n\t\t}\n\t}\n\n\tgetNotes(from, to) {\n\t\tlet secondStart = Math.floor(from)\n\t\tlet secondEnd = Math.floor(to)\n\t\tlet notes = []\n\t\tfor (let i = secondStart; i < secondEnd; i++) {\n\t\t\tfor (let track in this.activeTracks) {\n\t\t\t\tif (this.activeTracks[track].notesBySeconds.hasOwnProperty(i)) {\n\t\t\t\t\tfor (let n in this.activeTracks[track].notesBySeconds[i]) {\n\t\t\t\t\t\tlet note = this.activeTracks[track].notesBySeconds[i][n]\n\t\t\t\t\t\tif (note.timestamp > from) {\n\t\t\t\t\t\t\tnotes.push(note)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn notes\n\t}\n\tgetAllInstruments() {\n\t\tlet instruments = {}\n\t\tlet programs = {}\n\t\tthis.controlEvents = {}\n\t\tthis.tracks.forEach(track => {\n\t\t\ttrack.forEach(event => {\n\t\t\t\tlet channel = event.channel\n\n\t\t\t\tif (event.type == \"programChange\") {\n\t\t\t\t\tprograms[channel] = event.programNumber\n\t\t\t\t}\n\n\t\t\t\tif (event.type == \"controller\" && event.controllerType == 7) {\n\t\t\t\t\tif (\n\t\t\t\t\t\t!this.controlEvents.hasOwnProperty(\n\t\t\t\t\t\t\tMath.floor(event.timestamp / 1000)\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.controlEvents[Math.floor(event.timestamp / 1000)] = []\n\t\t\t\t\t}\n\t\t\t\t\tthis.controlEvents[Math.floor(event.timestamp / 1000)].push(event)\n\t\t\t\t}\n\n\t\t\t\tif (event.type == \"noteOn\") {\n\t\t\t\t\tif (channel != 9) {\n\t\t\t\t\t\tlet program = programs[channel]\n\t\t\t\t\t\tlet instrument =\n\t\t\t\t\t\t\tCONST.INSTRUMENTS.BY_ID[isFinite(program) ? program : channel]\n\t\t\t\t\t\tinstruments[instrument.id] = true\n\t\t\t\t\t\tevent.instrument = instrument.id\n\t\t\t\t\t} else {\n\t\t\t\t\t\tinstruments[\"percussion\"] = true\n\t\t\t\t\t\tevent.instrument = \"percussion\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t})\n\t\treturn Object.keys(instruments)\n\t}\n\tprocessEvents(midiData) {\n\t\tthis.setSustainPeriods()\n\t\tmidiData.tracks.forEach(midiTrack => {\n\t\t\tlet newTrack = {\n\t\t\t\tnotes: [],\n\t\t\t\tmeta: [],\n\t\t\t\ttempoChanges: []\n\t\t\t}\n\n\t\t\tthis.distributeEvents(midiTrack, newTrack)\n\n\t\t\tif (newTrack.notes.length) {\n\t\t\t\tthis.activeTracks.push(newTrack)\n\t\t\t} else {\n\t\t\t\tthis.otherTracks.push(newTrack)\n\t\t\t}\n\t\t})\n\n\t\tthis.activeTracks.forEach((track, trackIndex) => {\n\t\t\ttrack.notesBySeconds = {}\n\t\t\tthis.setNoteOffTimestamps(track.notes)\n\t\t\tthis.setNoteSustainTimestamps(track.notes)\n\t\t\ttrack.notes = track.notes.slice(0).filter(note => note.type == \"noteOn\")\n\t\t\ttrack.notes.forEach(note => (note.track = trackIndex))\n\t\t\tthis.setNotesBySecond(track)\n\t\t})\n\t}\n\tdistributeEvents(track, newTrack) {\n\t\ttrack.forEach(event => {\n\t\t\tevent.id = this.idCounter++\n\t\t\tif (event.type == \"noteOn\" || event.type == \"noteOff\") {\n\t\t\t\tnewTrack.notes.push(event)\n\t\t\t} else if (event.type == \"setTempo\") {\n\t\t\t\tnewTrack.tempoChanges.push(event)\n\t\t\t} else if (event.type == \"trackName\") {\n\t\t\t\tnewTrack.name = event.text\n\t\t\t} else if (event.type == \"text\") {\n\t\t\t\tthis.text.push(event.text)\n\t\t\t} else if (event.type == \"timeSignature\") {\n\t\t\t\tthis.timeSignature = event\n\t\t\t} else if (event.type == \"keySignature\") {\n\t\t\t\tnewTrack.keySignature = event\n\t\t\t} else if (event.type == \"smpteOffset\") {\n\t\t\t\tthis.smpteOffset = event\n\t\t\t} else if (event.type == \"marker\") {\n\t\t\t\tthis.markers.push(event)\n\t\t\t} else {\n\t\t\t\tnewTrack.meta.push(event)\n\t\t\t}\n\t\t})\n\t}\n\n\tsetNotesBySecond(track) {\n\t\ttrack.notes.forEach(note => {\n\t\t\tlet second = Math.floor(note.timestamp / 1000)\n\t\t\tif (track.notesBySeconds.hasOwnProperty(second)) {\n\t\t\t\ttrack.notesBySeconds[second].push(note)\n\t\t\t} else {\n\t\t\t\ttrack.notesBySeconds[second] = [note]\n\t\t\t}\n\t\t})\n\t}\n\tgetNoteSequence() {\n\t\tif (!this.notesSequence) {\n\t\t\tlet tracks = []\n\t\t\tfor (let t in this.activeTracks) [tracks.push(this.activeTracks[t].notes)]\n\n\t\t\tthis.noteSequence = [].concat\n\t\t\t\t.apply([], tracks)\n\t\t\t\t.sort((a, b) => a.timestamp - b.timestamp)\n\t\t}\n\t\treturn this.noteSequence.slice(0)\n\t}\n\tgetNoteRange() {\n\t\tlet seq = this.getNoteSequence()\n\t\tlet min = 87\n\t\tlet max = 0\n\t\tseq.forEach(note => {\n\t\t\tif (note.noteNumber > max) {\n\t\t\t\tmax = note.noteNumber\n\t\t\t}\n\t\t\tif (note.noteNumber < min) {\n\t\t\t\tmin = note.noteNumber\n\t\t\t}\n\t\t})\n\t\treturn { min, max }\n\t}\n\tsetNoteSustainTimestamps(notes) {\n\t\tfor (let i = 0; i < notes.length; i++) {\n\t\t\tlet note = notes[i]\n\t\t\tlet currentSustains = this.sustainPeriods.filter(\n\t\t\t\tperiod =>\n\t\t\t\t\t(period.start < note.timestamp && period.end > note.timestamp) ||\n\t\t\t\t\t(period.start < note.offTime && period.end > note.offTime)\n\t\t\t)\n\t\t\tif (currentSustains.length) {\n\t\t\t\tnote.sustainOnTime = currentSustains[0].start\n\t\t\t\tlet end = Math.max.apply(\n\t\t\t\t\tnull,\n\t\t\t\t\tcurrentSustains.map(sustain => sustain.end)\n\t\t\t\t)\n\t\t\t\tnote.sustainOffTime = end\n\t\t\t\tnote.sustainDuration = note.sustainOffTime - note.timestamp\n\t\t\t}\n\t\t}\n\t}\n\n\tsetNoteOffTimestamps(notes) {\n\t\tfor (let i = 0; i < notes.length; i++) {\n\t\t\tlet note = notes[i]\n\t\t\tif (note.type == \"noteOn\") {\n\t\t\t\tSong.findOffNote(i, notes.slice(0))\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic findOffNote(index, notes) {\n\t\tlet onNote = notes[index]\n\t\tfor (let i = index + 1; i < notes.length; i++) {\n\t\t\tif (\n\t\t\t\tnotes[i].type == \"noteOff\" &&\n\t\t\t\tonNote.noteNumber == notes[i].noteNumber\n\t\t\t) {\n\t\t\t\tonNote.offTime = notes[i].timestamp\n\t\t\t\tonNote.offVelocity = notes[i].velocity\n\t\t\t\tonNote.duration = onNote.offTime - onNote.timestamp\n\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n\n\tgetDefaultChannels() {\n\t\tlet channels = {}\n\t\tfor (var i = 0; i <= 15; i++) {\n\t\t\tchannels[i] = {\n\t\t\t\tinstrument: i,\n\t\t\t\tpitchBend: 0,\n\t\t\t\tvolume: 127,\n\t\t\t\tvolumeControl: 50,\n\t\t\t\tmute: false,\n\t\t\t\tmono: false,\n\t\t\t\tomni: false,\n\t\t\t\tsolo: false\n\t\t\t}\n\t\t}\n\t\tchannels[9].instrument = -1\n\t\treturn channels\n\t}\n}\n","import { hasBuffer, setBuffer } from \"./audio/Buffers.js\"\nimport { getLoader } from \"./ui/Loader.js\"\nimport { replaceAllString, iOS } from \"./Util.js\"\nexport class SoundfontLoader {\n\t/**\n\t *\n\t * @param {String} instrument\n\t */\n\tstatic async loadInstrument(instrument, soundfontName) {\n\t\tlet baseUrl = \"https://gleitz.github.io/midi-js-soundfonts/\"\n\t\tif (instrument == \"percussion\") {\n\t\t\tsoundfontName = \"FluidR3_GM\"\n\t\t\tbaseUrl = \"\"\n\t\t}\n\t\tlet fileType = iOS ? \"mp3\" : \"ogg\"\n\t\treturn fetch(\n\t\t\tbaseUrl + soundfontName + \"/\" + instrument + \"-\" + fileType + \".js\"\n\t\t)\n\t\t\t.then(response => {\n\t\t\t\tif (response.ok) {\n\t\t\t\t\tgetLoader().setLoadMessage(\n\t\t\t\t\t\t\"Loaded \" + instrument + \" from \" + soundfontName + \" soundfont.\"\n\t\t\t\t\t)\n\t\t\t\t\treturn response.text()\n\t\t\t\t}\n\t\t\t\tthrow Error(response.statusText)\n\t\t\t})\n\t\t\t.then(data => {\n\t\t\t\tlet scr = document.createElement(\"script\")\n\t\t\t\tscr.language = \"javascript\"\n\t\t\t\tscr.type = \"text/javascript\"\n\t\t\t\tlet newData = replaceAllString(data, \"Soundfont\", soundfontName)\n\t\t\t\tscr.text = newData\n\t\t\t\tdocument.body.appendChild(scr)\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.error(\"Error fetching soundfont: \\n\", error)\n\t\t\t})\n\t}\n\tstatic async loadInstruments(instruments) {\n\t\treturn await Promise.all(\n\t\t\tinstruments\n\t\t\t\t.slice(0)\n\t\t\t\t.map(instrument => SoundfontLoader.loadInstrument(instrument))\n\t\t)\n\t}\n\tstatic async getBuffers(ctx) {\n\t\tlet sortedBuffers = null\n\t\tawait SoundfontLoader.createBuffers(ctx).then(\n\t\t\tunsortedBuffers => {\n\t\t\t\tunsortedBuffers.forEach(noteBuffer => {\n\t\t\t\t\tsetBuffer(\n\t\t\t\t\t\tnoteBuffer.soundfontName,\n\t\t\t\t\t\tnoteBuffer.instrument,\n\t\t\t\t\t\tnoteBuffer.noteKey,\n\t\t\t\t\t\tnoteBuffer.buffer\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t},\n\t\t\terror => console.error(error)\n\t\t)\n\t\treturn sortedBuffers\n\t}\n\tstatic async createBuffers(ctx) {\n\t\tlet promises = []\n\t\tfor (let soundfontName in MIDI) {\n\t\t\tfor (let instrument in MIDI[soundfontName]) {\n\t\t\t\tif (!hasBuffer(soundfontName, instrument)) {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\"Loaded '\" + soundfontName + \"' instrument : \" + instrument\n\t\t\t\t\t)\n\t\t\t\t\tfor (let noteKey in MIDI[soundfontName][instrument]) {\n\t\t\t\t\t\tlet base64Buffer = SoundfontLoader.getBase64Buffer(\n\t\t\t\t\t\t\tMIDI[soundfontName][instrument][noteKey]\n\t\t\t\t\t\t)\n\t\t\t\t\t\tpromises.push(\n\t\t\t\t\t\t\tSoundfontLoader.getNoteBuffer(\n\t\t\t\t\t\t\t\tctx,\n\t\t\t\t\t\t\t\tbase64Buffer,\n\t\t\t\t\t\t\t\tsoundfontName,\n\t\t\t\t\t\t\t\tnoteKey,\n\t\t\t\t\t\t\t\tinstrument\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn await Promise.all(promises)\n\t}\n\tstatic async getNoteBuffer(\n\t\tctx,\n\t\tbase64Buffer,\n\t\tsoundfontName,\n\t\tnoteKey,\n\t\tinstrument\n\t) {\n\t\tlet promise = new Promise((resolve, reject) => {\n\t\t\tctx.decodeAudioData(\n\t\t\t\tbase64Buffer,\n\t\t\t\tdecodedBuffer => {\n\t\t\t\t\tresolve({\n\t\t\t\t\t\tbuffer: decodedBuffer,\n\t\t\t\t\t\tnoteKey: noteKey,\n\t\t\t\t\t\tinstrument: instrument,\n\t\t\t\t\t\tsoundfontName: soundfontName\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\terror => reject(error)\n\t\t\t)\n\t\t})\n\t\treturn await promise\n\n\t\t//ios can't handle the promise based decodeAudioData\n\t\t// return await ctx\n\t\t// \t.decodeAudioData(base64Buffer, function (decodedBuffer) {\n\t\t// \t\taudioBuffer = decodedBuffer\n\t\t// \t})\n\t\t// \t.then(\n\t\t// \t\t() => {\n\t\t// \t\t\treturn {\n\t\t// \t\t\t\tbuffer: audioBuffer,\n\t\t// \t\t\t\tnoteKey: noteKey,\n\t\t// \t\t\t\tinstrument: instrument,\n\t\t// \t\t\t\tsoundfontName: soundfontName\n\t\t// \t\t\t}\n\t\t// \t\t},\n\t\t// \t\te => {\n\t\t// \t\t\tconsole.log(e)\n\t\t// \t\t}\n\t\t// \t)\n\t}\n\tstatic getBase64Buffer(str) {\n\t\tlet base64 = str.split(\",\")[1]\n\t\treturn Base64Binary.decodeArrayBuffer(base64)\n\t}\n}\n","function formatTime(seconds, showMilis) {\n\tseconds = Math.max(seconds, 0)\n\tlet date = new Date(seconds * 1000)\n\tlet timeStrLength = showMilis ? 11 : 8\n\ttry {\n\t\tlet timeStr = date.toISOString().substr(11, timeStrLength)\n\t\tif (timeStr.substr(0, 2) == \"00\") {\n\t\t\ttimeStr = timeStr.substr(3)\n\t\t}\n\t\treturn timeStr\n\t} catch (e) {\n\t\tconsole.error(e)\n\t\t//ignore this. only seems to happend when messing with breakpoints in devtools\n\t}\n}\n/**\n *  Checks whether a note Number corresponds to a black piano key\n * @param {Number} noteNumber\n */\nfunction isBlack(noteNumber) {\n\treturn (noteNumber + 11) % 12 == 0 ||\n\t\t(noteNumber + 8) % 12 == 0 ||\n\t\t(noteNumber + 6) % 12 == 0 ||\n\t\t(noteNumber + 3) % 12 == 0 ||\n\t\t(noteNumber + 1) % 12 == 0\n\t\t? 1\n\t\t: 0\n}\nfunction sum(arr) {\n\treturn arr.reduce((previousVal, currentVal) => previousVal + currentVal)\n}\n\n/**\n *\n * @param {CanvasRenderingContext2D} ctx\n * @param {Number} x\n * @param {Number} y\n * @param {Number} width\n * @param {Number} height\n * @param {Number} radius\n */\nfunction drawRoundRect(ctx, x, y, width, height, radius, isRounded) {\n\t// radius = radius * 2 < ( Math.min( height, width ) ) ? radius : ( Math.min( height, width ) ) / 2\n\tif (typeof radius === \"undefined\") {\n\t\tradius = 0\n\t}\n\tif (typeof radius === \"number\") {\n\t\tradius = Math.min(radius, Math.min(width / 2, height / 2))\n\t\tradius = {\n\t\t\ttl: radius,\n\t\t\ttr: radius,\n\t\t\tbr: radius,\n\t\t\tbl: radius\n\t\t}\n\t} else {\n\t\tvar defaultRadius = {\n\t\t\ttl: 0,\n\t\t\ttr: 0,\n\t\t\tbr: 0,\n\t\t\tbl: 0\n\t\t}\n\t\tfor (var side in defaultRadius) {\n\t\t\tradius[side] = radius[side] || defaultRadius[side]\n\t\t}\n\t}\n\n\tctx.beginPath()\n\tif (!isRounded) {\n\t\tctx.moveTo(x + radius.tl, y)\n\t\tctx.lineTo(x + width - radius.tr, y)\n\t\tctx.lineTo(x + width, y + radius.tr)\n\t\tctx.lineTo(x + width, y + height - radius.br)\n\t\tctx.lineTo(x + width - radius.br, y + height)\n\t\tctx.lineTo(x + radius.bl, y + height)\n\t\tctx.lineTo(x, y + height - radius.bl)\n\t\tctx.lineTo(x, y + radius.tl)\n\t\tctx.lineTo(x + radius.tl, y)\n\t} else {\n\t\tctx.moveTo(x + radius.tl, y)\n\t\tctx.lineTo(x + width - radius.tr, y)\n\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius.tr)\n\t\tctx.lineTo(x + width, y + height - radius.br)\n\t\tctx.quadraticCurveTo(\n\t\t\tx + width,\n\t\t\ty + height,\n\t\t\tx + width - radius.br,\n\t\t\ty + height\n\t\t)\n\t\tctx.lineTo(x + radius.bl, y + height)\n\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius.bl)\n\t\tctx.lineTo(x, y + radius.tl)\n\t\tctx.quadraticCurveTo(x, y, x + radius.tl, y)\n\t}\n\tctx.closePath()\n}\n\nfunction replaceAllString(text, replaceThis, withThat) {\n\treturn text.replace(new RegExp(replaceThis, \"g\"), withThat)\n}\n\nfunction groupArrayBy(arr, keyFunc) {\n\tlet keys = {}\n\tarr.forEach(el => (keys[keyFunc(el)] = []))\n\tObject.keys(keys).forEach(key => {\n\t\tarr.forEach(el => (keyFunc(el) == key ? keys[keyFunc(el)].push(el) : null))\n\t})\n\treturn keys\n}\nfunction loadJson(url, callback) {\n\tlet request = new XMLHttpRequest()\n\trequest.overrideMimeType(\"application/json\")\n\trequest.open(\"GET\", url, true)\n\trequest.onreadystatechange = function () {\n\t\tif (request.readyState == 4 && request.status == \"200\") {\n\t\t\tcallback(request.responseText)\n\t\t}\n\t}\n\trequest.send(null)\n}\n\nfunction iOS() {\n\treturn (\n\t\t[\n\t\t\t\"iPad Simulator\",\n\t\t\t\"iPhone Simulator\",\n\t\t\t\"iPod Simulator\",\n\t\t\t\"iPad\",\n\t\t\t\"iPhone\",\n\t\t\t\"iPod\"\n\t\t].includes(navigator.platform) ||\n\t\t// iPad on iOS 13 detection\n\t\t(navigator.userAgent.includes(\"Mac\") && \"ontouchend\" in document)\n\t)\n}\n\nexport {\n\tformatTime,\n\tisBlack,\n\tsum,\n\tdrawRoundRect,\n\treplaceAllString,\n\tgroupArrayBy,\n\tloadJson,\n\tiOS\n}\n","import { getSetting } from \"../settings/Settings.js\"\nimport {\n\tcreateCompleteGainNode,\n\tcreateContinuousGainNode\n} from \"./GainNodeController.js\"\n\nclass AudioNote {\n\tconstructor(context, buffer) {\n\t\tthis.source = context.createBufferSource()\n\t\tthis.source.buffer = buffer\n\t}\n\n\tconnectSource(context, gainNode) {\n\t\tthis.source.connect(gainNode)\n\t\tthis.getGainNode().connect(context.destination)\n\t}\n\tgetGainNode() {\n\t\treturn this.gainNodeController.gainNode\n\t}\n\tsuspend() {\n\t\tthis.source.stop(0)\n\t}\n\tplay(time) {\n\t\tthis.source.start(time)\n\t}\n\tendAt(time, isSustained) {\n\t\tlet endTime = this.gainNodeController.endAt(time, isSustained)\n\t\tthis.endSourceAt(endTime + 0.5)\n\t}\n\tendSourceAt(time) {\n\t\tthis.source.stop(time)\n\t}\n}\n\nexport const createContinuousAudioNote = (context, buffer, volume) => {\n\tlet audioNote = new AudioNote(context, buffer)\n\n\taudioNote.gainNodeController = createContinuousGainNode(\n\t\tcontext,\n\t\tcontext.currentTime,\n\t\tvolume\n\t)\n\n\taudioNote.connectSource(context, audioNote.gainNodeController.gainNode)\n\taudioNote.play(context.currentTime)\n\treturn audioNote\n}\n\nexport const createCompleteAudioNote = (\n\tnote,\n\tcurrentSongTime,\n\tplaybackSpeed,\n\tvolume,\n\tisPlayalong,\n\tcontext,\n\tbuffer\n) => {\n\tlet audioNote = new AudioNote(context, buffer)\n\tconst gainValue = getNoteGain(note, volume)\n\tif (gainValue == 0) {\n\t\treturn audioNote\n\t}\n\n\tlet contextTimes = getContextTimesForNote(\n\t\tcontext,\n\t\tnote,\n\t\tcurrentSongTime,\n\t\tplaybackSpeed,\n\t\tisPlayalong\n\t)\n\tconst isSustained = contextTimes.end < contextTimes.sustainOff\n\n\taudioNote.gainNodeController = createCompleteGainNode(\n\t\tcontext,\n\t\tgainValue,\n\t\tcontextTimes,\n\t\tisSustained\n\t)\n\n\taudioNote.connectSource(context, audioNote.getGainNode())\n\n\taudioNote.play(contextTimes.start)\n\taudioNote.endAt(\n\t\tisSustained ? contextTimes.sustainOff : contextTimes.end,\n\t\tisSustained\n\t)\n\n\treturn audioNote\n}\n\nfunction getContextTimesForNote(\n\tcontext,\n\tnote,\n\tcurrentSongTime,\n\tplaybackSpeed,\n\tisPlayAlong\n) {\n\tlet delayUntilNote = (note.timestamp / 1000 - currentSongTime) / playbackSpeed\n\tlet delayCorrection = 0\n\tif (isPlayAlong) {\n\t\tdelayCorrection = getPlayalongDelayCorrection(delayUntilNote)\n\t\tdelayUntilNote = Math.max(0, delayUntilNote)\n\t}\n\tlet start = context.currentTime + delayUntilNote\n\n\tlet end = start + note.duration / 1000 / playbackSpeed + delayCorrection\n\n\tlet sustainOff = start + note.sustainDuration / 1000 / playbackSpeed\n\treturn { start, end, sustainOff }\n}\n\nfunction getPlayalongDelayCorrection(delayUntilNote) {\n\tlet delayCorrection = 0\n\tif (delayUntilNote < 0) {\n\t\tconsole.log(\"negative delay\")\n\t\tdelayCorrection = -1 * (delayUntilNote - 0.1)\n\t\tdelayUntilNote = 0.1\n\t}\n\n\treturn delayCorrection\n}\n\nfunction getNoteGain(note, volume) {\n\tlet gain = 2 * (note.velocity / 127) * volume\n\n\tlet clampedGain = Math.min(10.0, Math.max(-1.0, gain))\n\treturn clampedGain\n}\n","import { getSetting } from \"../settings/Settings.js\"\nimport { SoundfontLoader } from \"../SoundfontLoader.js\"\nimport { getLoader } from \"../ui/Loader.js\"\nimport {\n\tcreateContinuousAudioNote,\n\tcreateCompleteAudioNote\n} from \"./AudioNote.js\"\nimport { getBufferForNote } from \"./Buffers.js\"\n\nexport class AudioPlayer {\n\tconstructor() {\n\t\twindow.AudioContext = window.AudioContext || window.webkitAudioContext\n\n\t\tthis.context = new AudioContext()\n\t\tthis.buffers = {}\n\t\tthis.audioNotes = []\n\t\tthis.soundfontName = \"MusyngKite\"\n\n\t\tthis.loadMetronomeSounds()\n\t}\n\n\tgetContextTime() {\n\t\treturn this.context.currentTime\n\t}\n\tgetContext() {\n\t\treturn this.context\n\t}\n\tisRunning() {\n\t\treturn this.context.state == \"running\"\n\t}\n\tresume() {\n\t\tthis.context.resume()\n\t}\n\tsuspend() {\n\t\tthis.context.suspend()\n\t}\n\tstopAllSources() {\n\t\tthis.audioNotes.forEach(audioNote => {\n\t\t\ttry {\n\t\t\t\taudioNote.source.stop(0)\n\t\t\t} catch (error) {\n\t\t\t\t//Lets ignore this. Happens when notes are created while jumping on timeline\n\t\t\t}\n\t\t})\n\t}\n\tcreateContinuousNote(noteNumber, volume, instrument) {\n\t\tif (this.context.state === \"suspended\") {\n\t\t\tthis.wasSuspended = true\n\t\t\tthis.context.resume()\n\t\t}\n\t\tlet audioNote = createContinuousAudioNote(\n\t\t\tthis.context,\n\t\t\tgetBufferForNote(this.soundfontName, instrument, noteNumber),\n\t\t\tvolume / 100\n\t\t)\n\n\t\treturn audioNote\n\t}\n\tnoteOffContinuous(audioNote) {\n\t\taudioNote.endAt(this.context.currentTime + 0.1, false)\n\t}\n\n\tplayCompleteNote(currentTime, note, playbackSpeed, volume, isPlayAlong) {\n\t\tconst buffer = getBufferForNote(\n\t\t\tthis.soundfontName,\n\t\t\tnote.instrument,\n\t\t\tnote.noteNumber\n\t\t)\n\n\t\tlet audioNote = createCompleteAudioNote(\n\t\t\tnote,\n\t\t\tcurrentTime,\n\t\t\tplaybackSpeed,\n\t\t\tvolume,\n\t\t\tisPlayAlong,\n\t\t\tthis.context,\n\t\t\tbuffer\n\t\t)\n\t\tthis.audioNotes.push(audioNote)\n\t}\n\n\tplayBeat(time, newMeasure) {\n\t\tif (time < 0) return\n\t\tthis.context.resume()\n\t\tlet ctxTime = this.context.currentTime\n\n\t\tconst source = this.context.createBufferSource()\n\t\tconst gainNode = this.context.createGain()\n\t\tgainNode.gain.value = getSetting(\"metronomeVolume\")\n\t\tsource.buffer = newMeasure ? this.metronomSound1 : this.metronomSound2\n\t\tsource.connect(gainNode)\n\t\tgainNode.connect(this.context.destination)\n\t\tsource.start(ctxTime + time)\n\t\tsource.stop(ctxTime + time + 0.2)\n\t}\n\n\tasync switchSoundfont(soundfontName, currentSong) {\n\t\tthis.soundfontName = soundfontName\n\t\tgetLoader().setLoadMessage(\"Loading Instruments\")\n\t\tawait this.loadInstrumentsForSong(currentSong)\n\t\tgetLoader().setLoadMessage(\"Loading Buffers\")\n\t\treturn await this.loadBuffers()\n\t}\n\tloadMetronomeSounds() {\n\t\tlet audioPl = this\n\n\t\tconst request = new XMLHttpRequest()\n\t\trequest.open(\"GET\", \"../../metronome/1.wav\")\n\t\trequest.responseType = \"arraybuffer\"\n\t\trequest.onload = function () {\n\t\t\tlet undecodedAudio = request.response\n\t\t\taudioPl.context.decodeAudioData(\n\t\t\t\tundecodedAudio,\n\t\t\t\tdata => (audioPl.metronomSound1 = data)\n\t\t\t)\n\t\t}\n\t\trequest.send()\n\n\t\tconst request2 = new XMLHttpRequest()\n\t\trequest2.open(\"GET\", \"../../metronome/2.wav\")\n\t\trequest2.responseType = \"arraybuffer\"\n\t\trequest2.onload = function () {\n\t\t\tlet undecodedAudio = request2.response\n\t\t\taudioPl.context.decodeAudioData(\n\t\t\t\tundecodedAudio,\n\t\t\t\tdata => (audioPl.metronomSound2 = data)\n\t\t\t)\n\t\t}\n\t\trequest2.send()\n\t}\n\tasync loadInstrumentsForSong(currentSong) {\n\t\tif (!this.buffers.hasOwnProperty(this.soundfontName)) {\n\t\t\tthis.buffers[this.soundfontName] = {}\n\t\t}\n\n\t\tlet instrumentsOfSong = currentSong.getAllInstruments()\n\n\t\t//filter instruments we've loaded already and directly map onto promise\n\t\tlet neededInstruments = instrumentsOfSong\n\t\t\t.filter(\n\t\t\t\tinstrument =>\n\t\t\t\t\t!this.buffers[this.soundfontName].hasOwnProperty(instrument)\n\t\t\t)\n\t\t\t.map(instrument =>\n\t\t\t\tSoundfontLoader.loadInstrument(instrument, this.soundfontName)\n\t\t\t)\n\t\tif (instrumentsOfSong.includes(\"percussion\")) {\n\t\t\tneededInstruments.push(\n\t\t\t\tSoundfontLoader.loadInstrument(\"percussion\", \"FluidR3_GM\")\n\t\t\t)\n\t\t}\n\t\tif (neededInstruments.length == 0) {\n\t\t\treturn Promise.resolve()\n\t\t}\n\t\tawait Promise.all(neededInstruments)\n\t}\n\n\tasync loadBuffers() {\n\t\treturn await SoundfontLoader.getBuffers(this.context).then(buffers => {\n\t\t\tconsole.log(\"Buffers loaded\")\n\t\t\tthis.loading = false\n\t\t})\n\t}\n}\n","import { CONST } from \"../data/CONST.js\"\n\nconst buffers = {}\nexport const getBuffers = () => {\n\treturn buffers\n}\nexport const getBufferForNote = (soundfontName, instrument, noteNumber) => {\n\tlet noteKey = CONST.MIDI_NOTE_TO_KEY[noteNumber + 21]\n\tlet buffer\n\tif (instrument == \"percussion\") {\n\t\tsoundfontName = \"FluidR3_GM\"\n\t}\n\ttry {\n\t\tbuffer = buffers[soundfontName][instrument][noteKey]\n\t} catch (e) {\n\t\tconsole.error(e)\n\t}\n\treturn buffer\n}\nexport const hasBuffer = (soundfontName, instrument) =>\n\tbuffers.hasOwnProperty(soundfontName) &&\n\tbuffers[soundfontName].hasOwnProperty(instrument)\n\nexport const setBuffer = (soundfontName, instrument, noteKey, buffer) => {\n\tif (!buffers.hasOwnProperty(soundfontName)) {\n\t\tbuffers[soundfontName] = {}\n\t}\n\tif (!buffers[soundfontName].hasOwnProperty(instrument)) {\n\t\tbuffers[soundfontName][instrument] = {}\n\t}\n\tbuffers[soundfontName][instrument][noteKey] = buffer\n}\n","import { getSetting } from \"../settings/Settings.js\"\n\nconst TIME_CONST = 0.05\nclass GainNodeController {\n\tconstructor(context) {\n\t\tthis.createGainNode(context)\n\t}\n\tcreateGainNode(context) {\n\t\tthis.gainNode = context.createGain()\n\t\tthis.gainNode.value = 0\n\t\tthis.gainNode.gain.setTargetAtTime(0, 0, TIME_CONST)\n\t}\n\n\tsetAttackAndDecay(start, gainValue, adsrValues) {\n\t\tlet endOfAttackTime = start + adsrValues.attack\n\n\t\tthis.sustainValue = gainValue * adsrValues.sustain\n\t\tthis.endOfDecayTime = endOfAttackTime + adsrValues.decay\n\n\t\t//Start at 0\n\t\tthis.gainNode.gain.linearRampToValueAtTime(0, start, TIME_CONST)\n\n\t\t//Attack\n\t\tthis.gainNode.gain.linearRampToValueAtTime(\n\t\t\tgainValue,\n\t\t\tendOfAttackTime,\n\t\t\tTIME_CONST\n\t\t)\n\t\t//Decay\n\t\tthis.gainNode.gain.linearRampToValueAtTime(\n\t\t\tthis.sustainValue,\n\t\t\tthis.endOfDecayTime,\n\t\t\tTIME_CONST\n\t\t)\n\t}\n\tsetReleaseGainNode(end, release) {\n\t\tthis.gainNode.gain.linearRampToValueAtTime(\n\t\t\tthis.sustainValue,\n\t\t\tend,\n\t\t\tTIME_CONST\n\t\t)\n\t\t//Release\n\t\tthis.gainNode.gain.linearRampToValueAtTime(0.001, end + release)\n\t\tthis.gainNode.gain.linearRampToValueAtTime(\n\t\t\t0,\n\t\t\tend + release + 0.001,\n\t\t\tTIME_CONST\n\t\t)\n\t\tthis.gainNode.gain.setTargetAtTime(0, end + release + 0.005, TIME_CONST)\n\t}\n\tendAt(endTime, isSustained) {\n\t\tconst release = isSustained\n\t\t\t? parseFloat(getSetting(\"adsrReleasePedal\"))\n\t\t\t: parseFloat(getSetting(\"adsrReleaseKey\"))\n\t\tendTime = Math.max(endTime, this.endOfDecayTime)\n\t\tthis.setReleaseGainNode(endTime, release)\n\t\treturn endTime\n\t}\n}\n\nfunction getAdsrValues() {\n\tlet attack = parseFloat(getSetting(\"adsrAttack\"))\n\tlet decay = parseFloat(getSetting(\"adsrDecay\"))\n\tlet sustain = parseFloat(getSetting(\"adsrSustain\")) / 100\n\tlet releasePedal = parseFloat(getSetting(\"adsrReleasePedal\"))\n\tlet releaseKey = parseFloat(getSetting(\"adsrReleaseKey\"))\n\treturn { attack, decay, sustain, releasePedal, releaseKey }\n}\nfunction getAdsrAdjustedForDuration(duration) {\n\tlet maxGainLevel = 1\n\tlet adsrValues = getAdsrValues()\n\t//If duration is smaller than decay and attack, shorten decay / set it to 0\n\tif (duration < adsrValues.attack + adsrValues.decay) {\n\t\tadsrValues.decay = Math.max(duration - adsrValues.attack, 0)\n\t}\n\t//if attack alone is longer than duration, linearly lower the maximum gain value that will be reached before\n\t//the sound starts to release.\n\tif (duration < adsrValues.attack) {\n\t\tlet ratio = duration / adsrValues.attack\n\t\tmaxGainLevel *= ratio\n\t\tadsrValues.attack *= ratio\n\t\tadsrValues.decay = 0\n\t\tadsrValues.sustain = 1\n\t}\n\tadsrValues.maxGainLevel = maxGainLevel\n\treturn adsrValues\n}\n\nexport const createContinuousGainNode = (context, start, gainValue) => {\n\tconst gainNodeGen = new GainNodeController(context)\n\n\tgainNodeGen.setAttackAndDecay(start, gainValue, getAdsrValues())\n\treturn gainNodeGen\n}\n\nexport const createCompleteGainNode = (\n\tcontext,\n\tgainValue,\n\tctxTimes,\n\tisSustained\n) => {\n\tconst gainNodeGen = new GainNodeController(context)\n\n\tconst adsrValues = getAdsrAdjustedForDuration(\n\t\t(isSustained ? ctxTimes.sustainOff : ctxTimes.end) - ctxTimes.start\n\t)\n\n\t//Adjust gain value if attack period is longer than duration of entire note.\n\tgainValue *= adsrValues.maxGainLevel\n\n\tgainNodeGen.setAttackAndDecay(ctxTimes.start, gainValue, adsrValues)\n\n\tlet end = ctxTimes.end\n\tlet release = parseFloat(getSetting(\"adsrReleaseKey\"))\n\tif (isSustained && getSetting(\"sustainEnabled\")) {\n\t\tend = ctxTimes.sustainOff\n\t\trelease = parseFloat(getSetting(\"adsrReleasePedal\"))\n\t}\n\n\treturn gainNodeGen\n}\n","export var CONST = {\n\tTRACK_COLORS: [\n\t\t{ white: \"#ffa000\", black: \"#ff8f00\" }, //orange\n\t\t{ white: \"#1e88e5\", black: \"#1976d2\" }, //blue\n\t\t{ white: \"#43a047\", black: \"#388e3c\" }, //green\n\t\t{ white: \"#ffeb3b\", black: \"#fdd835\" }, //yellow\n\t\t{ white: \"#9c27b0\", black: \"#8e24aa\" }, //pink\n\t\t{ white: \"#f44336\", black: \"#e53935\" }, //red\n\t\t{ white: \"#673ab7\", black: \"#5e35b1\" } //purple\n\n\t\t// { white: \"rgb(40,50,90)\", black: \"Blue\" },\n\t\t// { white: \"rgb(50,90,60)\", black: \"rgb(20,85,40)\" },\n\t\t// { white: \"rgb(40,50,90)\", black: \"Blue\" },\n\t\t// { white: \"rgb(50,90,60)\", black: \"rgb(20,85,40)\" }\n\t],\n\tINSTRUMENTS: {\n\t\tBY_ID: {\n\t\t\t0: {\n\t\t\t\tid: \"acoustic_grand_piano\",\n\t\t\t\tinstrument: \"Acoustic Grand Piano\",\n\t\t\t\tnumber: 0,\n\t\t\t\tcategory: \"Piano\"\n\t\t\t},\n\t\t\t1: {\n\t\t\t\tid: \"bright_acoustic_piano\",\n\t\t\t\tinstrument: \"Bright Acoustic Piano\",\n\t\t\t\tnumber: 1,\n\t\t\t\tcategory: \"Piano\"\n\t\t\t},\n\t\t\t2: {\n\t\t\t\tid: \"electric_grand_piano\",\n\t\t\t\tinstrument: \"Electric Grand Piano\",\n\t\t\t\tnumber: 2,\n\t\t\t\tcategory: \"Piano\"\n\t\t\t},\n\t\t\t3: {\n\t\t\t\tid: \"honkytonk_piano\",\n\t\t\t\tinstrument: \"Honky-tonk Piano\",\n\t\t\t\tnumber: 3,\n\t\t\t\tcategory: \"Piano\"\n\t\t\t},\n\t\t\t4: {\n\t\t\t\tid: \"electric_piano_1\",\n\t\t\t\tinstrument: \"Electric Piano 1\",\n\t\t\t\tnumber: 4,\n\t\t\t\tcategory: \"Piano\"\n\t\t\t},\n\t\t\t5: {\n\t\t\t\tid: \"electric_piano_2\",\n\t\t\t\tinstrument: \"Electric Piano 2\",\n\t\t\t\tnumber: 5,\n\t\t\t\tcategory: \"Piano\"\n\t\t\t},\n\t\t\t6: {\n\t\t\t\tid: \"harpsichord\",\n\t\t\t\tinstrument: \"Harpsichord\",\n\t\t\t\tnumber: 6,\n\t\t\t\tcategory: \"Piano\"\n\t\t\t},\n\t\t\t7: {\n\t\t\t\tid: \"clavinet\",\n\t\t\t\tinstrument: \"Clavinet\",\n\t\t\t\tnumber: 7,\n\t\t\t\tcategory: \"Piano\"\n\t\t\t},\n\t\t\t8: {\n\t\t\t\tid: \"celesta\",\n\t\t\t\tinstrument: \"Celesta\",\n\t\t\t\tnumber: 8,\n\t\t\t\tcategory: \"Chromatic Percussion\"\n\t\t\t},\n\t\t\t9: {\n\t\t\t\tid: \"glockenspiel\",\n\t\t\t\tinstrument: \"Glockenspiel\",\n\t\t\t\tnumber: 9,\n\t\t\t\tcategory: \"Chromatic Percussion\"\n\t\t\t},\n\t\t\t10: {\n\t\t\t\tid: \"music_box\",\n\t\t\t\tinstrument: \"Music Box\",\n\t\t\t\tnumber: 10,\n\t\t\t\tcategory: \"Chromatic Percussion\"\n\t\t\t},\n\t\t\t11: {\n\t\t\t\tid: \"vibraphone\",\n\t\t\t\tinstrument: \"Vibraphone\",\n\t\t\t\tnumber: 11,\n\t\t\t\tcategory: \"Chromatic Percussion\"\n\t\t\t},\n\t\t\t12: {\n\t\t\t\tid: \"marimba\",\n\t\t\t\tinstrument: \"Marimba\",\n\t\t\t\tnumber: 12,\n\t\t\t\tcategory: \"Chromatic Percussion\"\n\t\t\t},\n\t\t\t13: {\n\t\t\t\tid: \"xylophone\",\n\t\t\t\tinstrument: \"Xylophone\",\n\t\t\t\tnumber: 13,\n\t\t\t\tcategory: \"Chromatic Percussion\"\n\t\t\t},\n\t\t\t14: {\n\t\t\t\tid: \"tubular_bells\",\n\t\t\t\tinstrument: \"Tubular Bells\",\n\t\t\t\tnumber: 14,\n\t\t\t\tcategory: \"Chromatic Percussion\"\n\t\t\t},\n\t\t\t15: {\n\t\t\t\tid: \"dulcimer\",\n\t\t\t\tinstrument: \"Dulcimer\",\n\t\t\t\tnumber: 15,\n\t\t\t\tcategory: \"Chromatic Percussion\"\n\t\t\t},\n\t\t\t16: {\n\t\t\t\tid: \"drawbar_organ\",\n\t\t\t\tinstrument: \"Drawbar Organ\",\n\t\t\t\tnumber: 16,\n\t\t\t\tcategory: \"Organ\"\n\t\t\t},\n\t\t\t17: {\n\t\t\t\tid: \"percussive_organ\",\n\t\t\t\tinstrument: \"Percussive Organ\",\n\t\t\t\tnumber: 17,\n\t\t\t\tcategory: \"Organ\"\n\t\t\t},\n\t\t\t18: {\n\t\t\t\tid: \"rock_organ\",\n\t\t\t\tinstrument: \"Rock Organ\",\n\t\t\t\tnumber: 18,\n\t\t\t\tcategory: \"Organ\"\n\t\t\t},\n\t\t\t19: {\n\t\t\t\tid: \"church_organ\",\n\t\t\t\tinstrument: \"Church Organ\",\n\t\t\t\tnumber: 19,\n\t\t\t\tcategory: \"Organ\"\n\t\t\t},\n\t\t\t20: {\n\t\t\t\tid: \"reed_organ\",\n\t\t\t\tinstrument: \"Reed Organ\",\n\t\t\t\tnumber: 20,\n\t\t\t\tcategory: \"Organ\"\n\t\t\t},\n\t\t\t21: {\n\t\t\t\tid: \"accordion\",\n\t\t\t\tinstrument: \"Accordion\",\n\t\t\t\tnumber: 21,\n\t\t\t\tcategory: \"Organ\"\n\t\t\t},\n\t\t\t22: {\n\t\t\t\tid: \"harmonica\",\n\t\t\t\tinstrument: \"Harmonica\",\n\t\t\t\tnumber: 22,\n\t\t\t\tcategory: \"Organ\"\n\t\t\t},\n\t\t\t23: {\n\t\t\t\tid: \"tango_accordion\",\n\t\t\t\tinstrument: \"Tango Accordion\",\n\t\t\t\tnumber: 23,\n\t\t\t\tcategory: \"Organ\"\n\t\t\t},\n\t\t\t24: {\n\t\t\t\tid: \"acoustic_guitar_nylon\",\n\t\t\t\tinstrument: \"Acoustic Guitar (nylon)\",\n\t\t\t\tnumber: 24,\n\t\t\t\tcategory: \"Guitar\"\n\t\t\t},\n\t\t\t25: {\n\t\t\t\tid: \"acoustic_guitar_steel\",\n\t\t\t\tinstrument: \"Acoustic Guitar (steel)\",\n\t\t\t\tnumber: 25,\n\t\t\t\tcategory: \"Guitar\"\n\t\t\t},\n\t\t\t26: {\n\t\t\t\tid: \"electric_guitar_jazz\",\n\t\t\t\tinstrument: \"Electric Guitar (jazz)\",\n\t\t\t\tnumber: 26,\n\t\t\t\tcategory: \"Guitar\"\n\t\t\t},\n\t\t\t27: {\n\t\t\t\tid: \"electric_guitar_clean\",\n\t\t\t\tinstrument: \"Electric Guitar (clean)\",\n\t\t\t\tnumber: 27,\n\t\t\t\tcategory: \"Guitar\"\n\t\t\t},\n\t\t\t28: {\n\t\t\t\tid: \"electric_guitar_muted\",\n\t\t\t\tinstrument: \"Electric Guitar (muted)\",\n\t\t\t\tnumber: 28,\n\t\t\t\tcategory: \"Guitar\"\n\t\t\t},\n\t\t\t29: {\n\t\t\t\tid: \"overdriven_guitar\",\n\t\t\t\tinstrument: \"Overdriven Guitar\",\n\t\t\t\tnumber: 29,\n\t\t\t\tcategory: \"Guitar\"\n\t\t\t},\n\t\t\t30: {\n\t\t\t\tid: \"distortion_guitar\",\n\t\t\t\tinstrument: \"Distortion Guitar\",\n\t\t\t\tnumber: 30,\n\t\t\t\tcategory: \"Guitar\"\n\t\t\t},\n\t\t\t31: {\n\t\t\t\tid: \"guitar_harmonics\",\n\t\t\t\tinstrument: \"Guitar Harmonics\",\n\t\t\t\tnumber: 31,\n\t\t\t\tcategory: \"Guitar\"\n\t\t\t},\n\t\t\t32: {\n\t\t\t\tid: \"acoustic_bass\",\n\t\t\t\tinstrument: \"Acoustic Bass\",\n\t\t\t\tnumber: 32,\n\t\t\t\tcategory: \"Bass\"\n\t\t\t},\n\t\t\t33: {\n\t\t\t\tid: \"electric_bass_finger\",\n\t\t\t\tinstrument: \"Electric Bass (finger)\",\n\t\t\t\tnumber: 33,\n\t\t\t\tcategory: \"Bass\"\n\t\t\t},\n\t\t\t34: {\n\t\t\t\tid: \"electric_bass_pick\",\n\t\t\t\tinstrument: \"Electric Bass (pick)\",\n\t\t\t\tnumber: 34,\n\t\t\t\tcategory: \"Bass\"\n\t\t\t},\n\t\t\t35: {\n\t\t\t\tid: \"fretless_bass\",\n\t\t\t\tinstrument: \"Fretless Bass\",\n\t\t\t\tnumber: 35,\n\t\t\t\tcategory: \"Bass\"\n\t\t\t},\n\t\t\t36: {\n\t\t\t\tid: \"slap_bass_1\",\n\t\t\t\tinstrument: \"Slap Bass 1\",\n\t\t\t\tnumber: 36,\n\t\t\t\tcategory: \"Bass\"\n\t\t\t},\n\t\t\t37: {\n\t\t\t\tid: \"slap_bass_2\",\n\t\t\t\tinstrument: \"Slap Bass 2\",\n\t\t\t\tnumber: 37,\n\t\t\t\tcategory: \"Bass\"\n\t\t\t},\n\t\t\t38: {\n\t\t\t\tid: \"synth_bass_1\",\n\t\t\t\tinstrument: \"Synth Bass 1\",\n\t\t\t\tnumber: 38,\n\t\t\t\tcategory: \"Bass\"\n\t\t\t},\n\t\t\t39: {\n\t\t\t\tid: \"synth_bass_2\",\n\t\t\t\tinstrument: \"Synth Bass 2\",\n\t\t\t\tnumber: 39,\n\t\t\t\tcategory: \"Bass\"\n\t\t\t},\n\t\t\t40: {\n\t\t\t\tid: \"violin\",\n\t\t\t\tinstrument: \"Violin\",\n\t\t\t\tnumber: 40,\n\t\t\t\tcategory: \"Strings\"\n\t\t\t},\n\t\t\t41: {\n\t\t\t\tid: \"viola\",\n\t\t\t\tinstrument: \"Viola\",\n\t\t\t\tnumber: 41,\n\t\t\t\tcategory: \"Strings\"\n\t\t\t},\n\t\t\t42: {\n\t\t\t\tid: \"cello\",\n\t\t\t\tinstrument: \"Cello\",\n\t\t\t\tnumber: 42,\n\t\t\t\tcategory: \"Strings\"\n\t\t\t},\n\t\t\t43: {\n\t\t\t\tid: \"contrabass\",\n\t\t\t\tinstrument: \"Contrabass\",\n\t\t\t\tnumber: 43,\n\t\t\t\tcategory: \"Strings\"\n\t\t\t},\n\t\t\t44: {\n\t\t\t\tid: \"tremolo_strings\",\n\t\t\t\tinstrument: \"Tremolo Strings\",\n\t\t\t\tnumber: 44,\n\t\t\t\tcategory: \"Strings\"\n\t\t\t},\n\t\t\t45: {\n\t\t\t\tid: \"pizzicato_strings\",\n\t\t\t\tinstrument: \"Pizzicato Strings\",\n\t\t\t\tnumber: 45,\n\t\t\t\tcategory: \"Strings\"\n\t\t\t},\n\t\t\t46: {\n\t\t\t\tid: \"orchestral_harp\",\n\t\t\t\tinstrument: \"Orchestral Harp\",\n\t\t\t\tnumber: 46,\n\t\t\t\tcategory: \"Strings\"\n\t\t\t},\n\t\t\t47: {\n\t\t\t\tid: \"timpani\",\n\t\t\t\tinstrument: \"Timpani\",\n\t\t\t\tnumber: 47,\n\t\t\t\tcategory: \"Strings\"\n\t\t\t},\n\t\t\t48: {\n\t\t\t\tid: \"string_ensemble_1\",\n\t\t\t\tinstrument: \"String Ensemble 1\",\n\t\t\t\tnumber: 48,\n\t\t\t\tcategory: \"Ensemble\"\n\t\t\t},\n\t\t\t49: {\n\t\t\t\tid: \"string_ensemble_2\",\n\t\t\t\tinstrument: \"String Ensemble 2\",\n\t\t\t\tnumber: 49,\n\t\t\t\tcategory: \"Ensemble\"\n\t\t\t},\n\t\t\t50: {\n\t\t\t\tid: \"synth_strings_1\",\n\t\t\t\tinstrument: \"Synth Strings 1\",\n\t\t\t\tnumber: 50,\n\t\t\t\tcategory: \"Ensemble\"\n\t\t\t},\n\t\t\t51: {\n\t\t\t\tid: \"synth_strings_2\",\n\t\t\t\tinstrument: \"Synth Strings 2\",\n\t\t\t\tnumber: 51,\n\t\t\t\tcategory: \"Ensemble\"\n\t\t\t},\n\t\t\t52: {\n\t\t\t\tid: \"choir_aahs\",\n\t\t\t\tinstrument: \"Choir Aahs\",\n\t\t\t\tnumber: 52,\n\t\t\t\tcategory: \"Ensemble\"\n\t\t\t},\n\t\t\t53: {\n\t\t\t\tid: \"voice_oohs\",\n\t\t\t\tinstrument: \"Voice Oohs\",\n\t\t\t\tnumber: 53,\n\t\t\t\tcategory: \"Ensemble\"\n\t\t\t},\n\t\t\t54: {\n\t\t\t\tid: \"synth_choir\",\n\t\t\t\tinstrument: \"Synth Choir\",\n\t\t\t\tnumber: 54,\n\t\t\t\tcategory: \"Ensemble\"\n\t\t\t},\n\t\t\t55: {\n\t\t\t\tid: \"orchestra_hit\",\n\t\t\t\tinstrument: \"Orchestra Hit\",\n\t\t\t\tnumber: 55,\n\t\t\t\tcategory: \"Ensemble\"\n\t\t\t},\n\t\t\t56: {\n\t\t\t\tid: \"trumpet\",\n\t\t\t\tinstrument: \"Trumpet\",\n\t\t\t\tnumber: 56,\n\t\t\t\tcategory: \"Brass\"\n\t\t\t},\n\t\t\t57: {\n\t\t\t\tid: \"trombone\",\n\t\t\t\tinstrument: \"Trombone\",\n\t\t\t\tnumber: 57,\n\t\t\t\tcategory: \"Brass\"\n\t\t\t},\n\t\t\t58: {\n\t\t\t\tid: \"tuba\",\n\t\t\t\tinstrument: \"Tuba\",\n\t\t\t\tnumber: 58,\n\t\t\t\tcategory: \"Brass\"\n\t\t\t},\n\t\t\t59: {\n\t\t\t\tid: \"muted_trumpet\",\n\t\t\t\tinstrument: \"Muted Trumpet\",\n\t\t\t\tnumber: 59,\n\t\t\t\tcategory: \"Brass\"\n\t\t\t},\n\t\t\t60: {\n\t\t\t\tid: \"french_horn\",\n\t\t\t\tinstrument: \"French Horn\",\n\t\t\t\tnumber: 60,\n\t\t\t\tcategory: \"Brass\"\n\t\t\t},\n\t\t\t61: {\n\t\t\t\tid: \"brass_section\",\n\t\t\t\tinstrument: \"Brass Section\",\n\t\t\t\tnumber: 61,\n\t\t\t\tcategory: \"Brass\"\n\t\t\t},\n\t\t\t62: {\n\t\t\t\tid: \"synth_brass_1\",\n\t\t\t\tinstrument: \"Synth Brass 1\",\n\t\t\t\tnumber: 62,\n\t\t\t\tcategory: \"Brass\"\n\t\t\t},\n\t\t\t63: {\n\t\t\t\tid: \"synth_brass_2\",\n\t\t\t\tinstrument: \"Synth Brass 2\",\n\t\t\t\tnumber: 63,\n\t\t\t\tcategory: \"Brass\"\n\t\t\t},\n\t\t\t64: {\n\t\t\t\tid: \"soprano_sax\",\n\t\t\t\tinstrument: \"Soprano Sax\",\n\t\t\t\tnumber: 64,\n\t\t\t\tcategory: \"Reed\"\n\t\t\t},\n\t\t\t65: {\n\t\t\t\tid: \"alto_sax\",\n\t\t\t\tinstrument: \"Alto Sax\",\n\t\t\t\tnumber: 65,\n\t\t\t\tcategory: \"Reed\"\n\t\t\t},\n\t\t\t66: {\n\t\t\t\tid: \"tenor_sax\",\n\t\t\t\tinstrument: \"Tenor Sax\",\n\t\t\t\tnumber: 66,\n\t\t\t\tcategory: \"Reed\"\n\t\t\t},\n\t\t\t67: {\n\t\t\t\tid: \"baritone_sax\",\n\t\t\t\tinstrument: \"Baritone Sax\",\n\t\t\t\tnumber: 67,\n\t\t\t\tcategory: \"Reed\"\n\t\t\t},\n\t\t\t68: {\n\t\t\t\tid: \"oboe\",\n\t\t\t\tinstrument: \"Oboe\",\n\t\t\t\tnumber: 68,\n\t\t\t\tcategory: \"Reed\"\n\t\t\t},\n\t\t\t69: {\n\t\t\t\tid: \"english_horn\",\n\t\t\t\tinstrument: \"English Horn\",\n\t\t\t\tnumber: 69,\n\t\t\t\tcategory: \"Reed\"\n\t\t\t},\n\t\t\t70: {\n\t\t\t\tid: \"bassoon\",\n\t\t\t\tinstrument: \"Bassoon\",\n\t\t\t\tnumber: 70,\n\t\t\t\tcategory: \"Reed\"\n\t\t\t},\n\t\t\t71: {\n\t\t\t\tid: \"clarinet\",\n\t\t\t\tinstrument: \"Clarinet\",\n\t\t\t\tnumber: 71,\n\t\t\t\tcategory: \"Reed\"\n\t\t\t},\n\t\t\t72: {\n\t\t\t\tid: \"piccolo\",\n\t\t\t\tinstrument: \"Piccolo\",\n\t\t\t\tnumber: 72,\n\t\t\t\tcategory: \"Pipe\"\n\t\t\t},\n\t\t\t73: {\n\t\t\t\tid: \"flute\",\n\t\t\t\tinstrument: \"Flute\",\n\t\t\t\tnumber: 73,\n\t\t\t\tcategory: \"Pipe\"\n\t\t\t},\n\t\t\t74: {\n\t\t\t\tid: \"recorder\",\n\t\t\t\tinstrument: \"Recorder\",\n\t\t\t\tnumber: 74,\n\t\t\t\tcategory: \"Pipe\"\n\t\t\t},\n\t\t\t75: {\n\t\t\t\tid: \"pan_flute\",\n\t\t\t\tinstrument: \"Pan Flute\",\n\t\t\t\tnumber: 75,\n\t\t\t\tcategory: \"Pipe\"\n\t\t\t},\n\t\t\t76: {\n\t\t\t\tid: \"blown_bottle\",\n\t\t\t\tinstrument: \"Blown Bottle\",\n\t\t\t\tnumber: 76,\n\t\t\t\tcategory: \"Pipe\"\n\t\t\t},\n\t\t\t77: {\n\t\t\t\tid: \"shakuhachi\",\n\t\t\t\tinstrument: \"Shakuhachi\",\n\t\t\t\tnumber: 77,\n\t\t\t\tcategory: \"Pipe\"\n\t\t\t},\n\t\t\t78: {\n\t\t\t\tid: \"whistle\",\n\t\t\t\tinstrument: \"Whistle\",\n\t\t\t\tnumber: 78,\n\t\t\t\tcategory: \"Pipe\"\n\t\t\t},\n\t\t\t79: {\n\t\t\t\tid: \"ocarina\",\n\t\t\t\tinstrument: \"Ocarina\",\n\t\t\t\tnumber: 79,\n\t\t\t\tcategory: \"Pipe\"\n\t\t\t},\n\t\t\t80: {\n\t\t\t\tid: \"lead_1_square\",\n\t\t\t\tinstrument: \"Lead 1 (square)\",\n\t\t\t\tnumber: 80,\n\t\t\t\tcategory: \"Synth Lead\"\n\t\t\t},\n\t\t\t81: {\n\t\t\t\tid: \"lead_2_sawtooth\",\n\t\t\t\tinstrument: \"Lead 2 (sawtooth)\",\n\t\t\t\tnumber: 81,\n\t\t\t\tcategory: \"Synth Lead\"\n\t\t\t},\n\t\t\t82: {\n\t\t\t\tid: \"lead_3_calliope\",\n\t\t\t\tinstrument: \"Lead 3 (calliope)\",\n\t\t\t\tnumber: 82,\n\t\t\t\tcategory: \"Synth Lead\"\n\t\t\t},\n\t\t\t83: {\n\t\t\t\tid: \"lead_4_chiff\",\n\t\t\t\tinstrument: \"Lead 4 (chiff)\",\n\t\t\t\tnumber: 83,\n\t\t\t\tcategory: \"Synth Lead\"\n\t\t\t},\n\t\t\t84: {\n\t\t\t\tid: \"lead_5_charang\",\n\t\t\t\tinstrument: \"Lead 5 (charang)\",\n\t\t\t\tnumber: 84,\n\t\t\t\tcategory: \"Synth Lead\"\n\t\t\t},\n\t\t\t85: {\n\t\t\t\tid: \"lead_6_voice\",\n\t\t\t\tinstrument: \"Lead 6 (voice)\",\n\t\t\t\tnumber: 85,\n\t\t\t\tcategory: \"Synth Lead\"\n\t\t\t},\n\t\t\t86: {\n\t\t\t\tid: \"lead_7_fifths\",\n\t\t\t\tinstrument: \"Lead 7 (fifths)\",\n\t\t\t\tnumber: 86,\n\t\t\t\tcategory: \"Synth Lead\"\n\t\t\t},\n\t\t\t87: {\n\t\t\t\tid: \"lead_8_bass__lead\",\n\t\t\t\tinstrument: \"Lead 8 (bass + lead)\",\n\t\t\t\tnumber: 87,\n\t\t\t\tcategory: \"Synth Lead\"\n\t\t\t},\n\t\t\t88: {\n\t\t\t\tid: \"pad_1_new_age\",\n\t\t\t\tinstrument: \"Pad 1 (new age)\",\n\t\t\t\tnumber: 88,\n\t\t\t\tcategory: \"Synth Pad\"\n\t\t\t},\n\t\t\t89: {\n\t\t\t\tid: \"pad_2_warm\",\n\t\t\t\tinstrument: \"Pad 2 (warm)\",\n\t\t\t\tnumber: 89,\n\t\t\t\tcategory: \"Synth Pad\"\n\t\t\t},\n\t\t\t90: {\n\t\t\t\tid: \"pad_3_polysynth\",\n\t\t\t\tinstrument: \"Pad 3 (polysynth)\",\n\t\t\t\tnumber: 90,\n\t\t\t\tcategory: \"Synth Pad\"\n\t\t\t},\n\t\t\t91: {\n\t\t\t\tid: \"pad_4_choir\",\n\t\t\t\tinstrument: \"Pad 4 (choir)\",\n\t\t\t\tnumber: 91,\n\t\t\t\tcategory: \"Synth Pad\"\n\t\t\t},\n\t\t\t92: {\n\t\t\t\tid: \"pad_5_bowed\",\n\t\t\t\tinstrument: \"Pad 5 (bowed)\",\n\t\t\t\tnumber: 92,\n\t\t\t\tcategory: \"Synth Pad\"\n\t\t\t},\n\t\t\t93: {\n\t\t\t\tid: \"pad_6_metallic\",\n\t\t\t\tinstrument: \"Pad 6 (metallic)\",\n\t\t\t\tnumber: 93,\n\t\t\t\tcategory: \"Synth Pad\"\n\t\t\t},\n\t\t\t94: {\n\t\t\t\tid: \"pad_7_halo\",\n\t\t\t\tinstrument: \"Pad 7 (halo)\",\n\t\t\t\tnumber: 94,\n\t\t\t\tcategory: \"Synth Pad\"\n\t\t\t},\n\t\t\t95: {\n\t\t\t\tid: \"pad_8_sweep\",\n\t\t\t\tinstrument: \"Pad 8 (sweep)\",\n\t\t\t\tnumber: 95,\n\t\t\t\tcategory: \"Synth Pad\"\n\t\t\t},\n\t\t\t96: {\n\t\t\t\tid: \"fx_1_rain\",\n\t\t\t\tinstrument: \"FX 1 (rain)\",\n\t\t\t\tnumber: 96,\n\t\t\t\tcategory: \"Synth Effects\"\n\t\t\t},\n\t\t\t97: {\n\t\t\t\tid: \"fx_2_soundtrack\",\n\t\t\t\tinstrument: \"FX 2 (soundtrack)\",\n\t\t\t\tnumber: 97,\n\t\t\t\tcategory: \"Synth Effects\"\n\t\t\t},\n\t\t\t98: {\n\t\t\t\tid: \"fx_3_crystal\",\n\t\t\t\tinstrument: \"FX 3 (crystal)\",\n\t\t\t\tnumber: 98,\n\t\t\t\tcategory: \"Synth Effects\"\n\t\t\t},\n\t\t\t99: {\n\t\t\t\tid: \"fx_4_atmosphere\",\n\t\t\t\tinstrument: \"FX 4 (atmosphere)\",\n\t\t\t\tnumber: 99,\n\t\t\t\tcategory: \"Synth Effects\"\n\t\t\t},\n\t\t\t100: {\n\t\t\t\tid: \"fx_5_brightness\",\n\t\t\t\tinstrument: \"FX 5 (brightness)\",\n\t\t\t\tnumber: 100,\n\t\t\t\tcategory: \"Synth Effects\"\n\t\t\t},\n\t\t\t101: {\n\t\t\t\tid: \"fx_6_goblins\",\n\t\t\t\tinstrument: \"FX 6 (goblins)\",\n\t\t\t\tnumber: 101,\n\t\t\t\tcategory: \"Synth Effects\"\n\t\t\t},\n\t\t\t102: {\n\t\t\t\tid: \"fx_7_echoes\",\n\t\t\t\tinstrument: \"FX 7 (echoes)\",\n\t\t\t\tnumber: 102,\n\t\t\t\tcategory: \"Synth Effects\"\n\t\t\t},\n\t\t\t103: {\n\t\t\t\tid: \"fx_8_scifi\",\n\t\t\t\tinstrument: \"FX 8 (sci-fi)\",\n\t\t\t\tnumber: 103,\n\t\t\t\tcategory: \"Synth Effects\"\n\t\t\t},\n\t\t\t104: {\n\t\t\t\tid: \"sitar\",\n\t\t\t\tinstrument: \"Sitar\",\n\t\t\t\tnumber: 104,\n\t\t\t\tcategory: \"Ethnic\"\n\t\t\t},\n\t\t\t105: {\n\t\t\t\tid: \"banjo\",\n\t\t\t\tinstrument: \"Banjo\",\n\t\t\t\tnumber: 105,\n\t\t\t\tcategory: \"Ethnic\"\n\t\t\t},\n\t\t\t106: {\n\t\t\t\tid: \"shamisen\",\n\t\t\t\tinstrument: \"Shamisen\",\n\t\t\t\tnumber: 106,\n\t\t\t\tcategory: \"Ethnic\"\n\t\t\t},\n\t\t\t107: {\n\t\t\t\tid: \"koto\",\n\t\t\t\tinstrument: \"Koto\",\n\t\t\t\tnumber: 107,\n\t\t\t\tcategory: \"Ethnic\"\n\t\t\t},\n\t\t\t108: {\n\t\t\t\tid: \"kalimba\",\n\t\t\t\tinstrument: \"Kalimba\",\n\t\t\t\tnumber: 108,\n\t\t\t\tcategory: \"Ethnic\"\n\t\t\t},\n\t\t\t109: {\n\t\t\t\tid: \"bagpipe\",\n\t\t\t\tinstrument: \"Bagpipe\",\n\t\t\t\tnumber: 109,\n\t\t\t\tcategory: \"Ethnic\"\n\t\t\t},\n\t\t\t110: {\n\t\t\t\tid: \"fiddle\",\n\t\t\t\tinstrument: \"Fiddle\",\n\t\t\t\tnumber: 110,\n\t\t\t\tcategory: \"Ethnic\"\n\t\t\t},\n\t\t\t111: {\n\t\t\t\tid: \"shanai\",\n\t\t\t\tinstrument: \"Shanai\",\n\t\t\t\tnumber: 111,\n\t\t\t\tcategory: \"Ethnic\"\n\t\t\t},\n\t\t\t112: {\n\t\t\t\tid: \"tinkle_bell\",\n\t\t\t\tinstrument: \"Tinkle Bell\",\n\t\t\t\tnumber: 112,\n\t\t\t\tcategory: \"Percussive\"\n\t\t\t},\n\t\t\t113: {\n\t\t\t\tid: \"agogo\",\n\t\t\t\tinstrument: \"Agogo\",\n\t\t\t\tnumber: 113,\n\t\t\t\tcategory: \"Percussive\"\n\t\t\t},\n\t\t\t114: {\n\t\t\t\tid: \"steel_drums\",\n\t\t\t\tinstrument: \"Steel Drums\",\n\t\t\t\tnumber: 114,\n\t\t\t\tcategory: \"Percussive\"\n\t\t\t},\n\t\t\t115: {\n\t\t\t\tid: \"woodblock\",\n\t\t\t\tinstrument: \"Woodblock\",\n\t\t\t\tnumber: 115,\n\t\t\t\tcategory: \"Percussive\"\n\t\t\t},\n\t\t\t116: {\n\t\t\t\tid: \"taiko_drum\",\n\t\t\t\tinstrument: \"Taiko Drum\",\n\t\t\t\tnumber: 116,\n\t\t\t\tcategory: \"Percussive\"\n\t\t\t},\n\t\t\t117: {\n\t\t\t\tid: \"melodic_tom\",\n\t\t\t\tinstrument: \"Melodic Tom\",\n\t\t\t\tnumber: 117,\n\t\t\t\tcategory: \"Percussive\"\n\t\t\t},\n\t\t\t118: {\n\t\t\t\tid: \"synth_drum\",\n\t\t\t\tinstrument: \"Synth Drum\",\n\t\t\t\tnumber: 118,\n\t\t\t\tcategory: \"Percussive\"\n\t\t\t},\n\t\t\t119: {\n\t\t\t\tid: \"reverse_cymbal\",\n\t\t\t\tinstrument: \"Reverse Cymbal\",\n\t\t\t\tnumber: 119,\n\t\t\t\tcategory: \"Sound effects\"\n\t\t\t},\n\t\t\t120: {\n\t\t\t\tid: \"guitar_fret_noise\",\n\t\t\t\tinstrument: \"Guitar Fret Noise\",\n\t\t\t\tnumber: 120,\n\t\t\t\tcategory: \"Sound effects\"\n\t\t\t},\n\t\t\t121: {\n\t\t\t\tid: \"breath_noise\",\n\t\t\t\tinstrument: \"Breath Noise\",\n\t\t\t\tnumber: 121,\n\t\t\t\tcategory: \"Sound effects\"\n\t\t\t},\n\t\t\t122: {\n\t\t\t\tid: \"seashore\",\n\t\t\t\tinstrument: \"Seashore\",\n\t\t\t\tnumber: 122,\n\t\t\t\tcategory: \"Sound effects\"\n\t\t\t},\n\t\t\t123: {\n\t\t\t\tid: \"bird_tweet\",\n\t\t\t\tinstrument: \"Bird Tweet\",\n\t\t\t\tnumber: 123,\n\t\t\t\tcategory: \"Sound effects\"\n\t\t\t},\n\t\t\t124: {\n\t\t\t\tid: \"telephone_ring\",\n\t\t\t\tinstrument: \"Telephone Ring\",\n\t\t\t\tnumber: 124,\n\t\t\t\tcategory: \"Sound effects\"\n\t\t\t},\n\t\t\t125: {\n\t\t\t\tid: \"helicopter\",\n\t\t\t\tinstrument: \"Helicopter\",\n\t\t\t\tnumber: 125,\n\t\t\t\tcategory: \"Sound effects\"\n\t\t\t},\n\t\t\t126: {\n\t\t\t\tid: \"applause\",\n\t\t\t\tinstrument: \"Applause\",\n\t\t\t\tnumber: 126,\n\t\t\t\tcategory: \"Sound effects\"\n\t\t\t},\n\t\t\t127: {\n\t\t\t\tid: \"gunshot\",\n\t\t\t\tinstrument: \"Gunshot\",\n\t\t\t\tnumber: 127,\n\t\t\t\tcategory: \"Sound effects\"\n\t\t\t},\n\t\t\t\"-1\": {\n\t\t\t\tid: \"percussion\",\n\t\t\t\tinstrument: \"Percussion\",\n\t\t\t\tnumber: -1,\n\t\t\t\tcategory: \"Percussion\"\n\t\t\t}\n\t\t}\n\t},\n\tKEY_TO_NOTE: {\n\t\tA0: 21,\n\t\tBb0: 22,\n\t\tB0: 23,\n\t\tC1: 24,\n\t\tDb1: 25,\n\t\tD1: 26,\n\t\tEb1: 27,\n\t\tE1: 28,\n\t\tF1: 29,\n\t\tGb1: 30,\n\t\tG1: 31,\n\t\tAb1: 32,\n\t\tA1: 33,\n\t\tBb1: 34,\n\t\tB1: 35,\n\t\tC2: 36,\n\t\tDb2: 37,\n\t\tD2: 38,\n\t\tEb2: 39,\n\t\tE2: 40,\n\t\tF2: 41,\n\t\tGb2: 42,\n\t\tG2: 43,\n\t\tAb2: 44,\n\t\tA2: 45,\n\t\tBb2: 46,\n\t\tB2: 47,\n\t\tC3: 48,\n\t\tDb3: 49,\n\t\tD3: 50,\n\t\tEb3: 51,\n\t\tE3: 52,\n\t\tF3: 53,\n\t\tGb3: 54,\n\t\tG3: 55,\n\t\tAb3: 56,\n\t\tA3: 57,\n\t\tBb3: 58,\n\t\tB3: 59,\n\t\tC4: 60,\n\t\tDb4: 61,\n\t\tD4: 62,\n\t\tEb4: 63,\n\t\tE4: 64,\n\t\tF4: 65,\n\t\tGb4: 66,\n\t\tG4: 67,\n\t\tAb4: 68,\n\t\tA4: 69,\n\t\tBb4: 70,\n\t\tB4: 71,\n\t\tC5: 72,\n\t\tDb5: 73,\n\t\tD5: 74,\n\t\tEb5: 75,\n\t\tE5: 76,\n\t\tF5: 77,\n\t\tGb5: 78,\n\t\tG5: 79,\n\t\tAb5: 80,\n\t\tA5: 81,\n\t\tBb5: 82,\n\t\tB5: 83,\n\t\tC6: 84,\n\t\tDb6: 85,\n\t\tD6: 86,\n\t\tEb6: 87,\n\t\tE6: 88,\n\t\tF6: 89,\n\t\tGb6: 90,\n\t\tG6: 91,\n\t\tAb6: 92,\n\t\tA6: 93,\n\t\tBb6: 94,\n\t\tB6: 95,\n\t\tC7: 96,\n\t\tDb7: 97,\n\t\tD7: 98,\n\t\tEb7: 99,\n\t\tE7: 100,\n\t\tF7: 101,\n\t\tGb7: 102,\n\t\tG7: 103,\n\t\tAb7: 104,\n\t\tA7: 105,\n\t\tBb7: 106,\n\t\tB7: 107,\n\t\tC8: 108\n\t},\n\tMIDI_NOTE_TO_KEY: {\n\t\t21: \"A0\",\n\t\t22: \"Bb0\",\n\t\t23: \"B0\",\n\t\t24: \"C1\",\n\t\t25: \"Db1\",\n\t\t26: \"D1\",\n\t\t27: \"Eb1\",\n\t\t28: \"E1\",\n\t\t29: \"F1\",\n\t\t30: \"Gb1\",\n\t\t31: \"G1\",\n\t\t32: \"Ab1\",\n\t\t33: \"A1\",\n\t\t34: \"Bb1\",\n\t\t35: \"B1\",\n\t\t36: \"C2\",\n\t\t37: \"Db2\",\n\t\t38: \"D2\",\n\t\t39: \"Eb2\",\n\t\t40: \"E2\",\n\t\t41: \"F2\",\n\t\t42: \"Gb2\",\n\t\t43: \"G2\",\n\t\t44: \"Ab2\",\n\t\t45: \"A2\",\n\t\t46: \"Bb2\",\n\t\t47: \"B2\",\n\t\t48: \"C3\",\n\t\t49: \"Db3\",\n\t\t50: \"D3\",\n\t\t51: \"Eb3\",\n\t\t52: \"E3\",\n\t\t53: \"F3\",\n\t\t54: \"Gb3\",\n\t\t55: \"G3\",\n\t\t56: \"Ab3\",\n\t\t57: \"A3\",\n\t\t58: \"Bb3\",\n\t\t59: \"B3\",\n\t\t60: \"C4\",\n\t\t61: \"Db4\",\n\t\t62: \"D4\",\n\t\t63: \"Eb4\",\n\t\t64: \"E4\",\n\t\t65: \"F4\",\n\t\t66: \"Gb4\",\n\t\t67: \"G4\",\n\t\t68: \"Ab4\",\n\t\t69: \"A4\",\n\t\t70: \"Bb4\",\n\t\t71: \"B4\",\n\t\t72: \"C5\",\n\t\t73: \"Db5\",\n\t\t74: \"D5\",\n\t\t75: \"Eb5\",\n\t\t76: \"E5\",\n\t\t77: \"F5\",\n\t\t78: \"Gb5\",\n\t\t79: \"G5\",\n\t\t80: \"Ab5\",\n\t\t81: \"A5\",\n\t\t82: \"Bb5\",\n\t\t83: \"B5\",\n\t\t84: \"C6\",\n\t\t85: \"Db6\",\n\t\t86: \"D6\",\n\t\t87: \"Eb6\",\n\t\t88: \"E6\",\n\t\t89: \"F6\",\n\t\t90: \"Gb6\",\n\t\t91: \"G6\",\n\t\t92: \"Ab6\",\n\t\t93: \"A6\",\n\t\t94: \"Bb6\",\n\t\t95: \"B6\",\n\t\t96: \"C7\",\n\t\t97: \"Db7\",\n\t\t98: \"D7\",\n\t\t99: \"Eb7\",\n\t\t100: \"E7\",\n\t\t101: \"F7\",\n\t\t102: \"Gb7\",\n\t\t103: \"G7\",\n\t\t104: \"Ab7\",\n\t\t105: \"A7\",\n\t\t106: \"Bb7\",\n\t\t107: \"B7\",\n\t\t108: \"C8\"\n\t}\n}\n","import { getLoader } from \"../ui/Loader.js\"\n\nexport class FileLoader {\n\tstatic async loadSongFromURL(url, callback) {\n\t\tgetLoader().setLoadMessage(`Loading Song from ${url}`)\n\t\tconst response = fetch(url, {\n\t\t\tmethod: \"GET\"\n\t\t}).then(response => {\n\t\t\tconst filename = url\n\t\t\tresponse.blob().then(blob => {\n\t\t\t\tconst reader = new FileReader()\n\t\t\t\treader.onload = function (theFile) {\n\t\t\t\t\tcallback(reader.result, filename, () => {})\n\t\t\t\t}\n\t\t\t\treader.readAsDataURL(blob)\n\t\t\t})\n\t\t})\n\t}\n}\n","import { MidiLoader } from \"../MidiLoader.js\"\nimport { Song } from \"../Song.js\"\nimport { AudioPlayer } from \"../audio/AudioPlayer.js\"\nimport { getLoader } from \"../ui/Loader.js\"\nimport { getSetting } from \"../settings/Settings.js\"\nimport { getMidiHandler } from \"../MidiInputHandler.js\"\nimport { getCurrentMicNote } from \"../MicInputHandler.js\"\nimport {\n\tgetTrackVolume,\n\tisAnyTrackPlayalong,\n\tisTrackRequiredToPlay,\n\tsetupTracks\n} from \"./Tracks.js\"\nimport { Notification } from \"../ui/Notification.js\"\n\nconst LOOK_AHEAD_TIME = 0.2\nconst LOOK_AHEAD_TIME_WHEN_PLAYALONG = 0.02\n\nclass Player {\n\tconstructor() {\n\t\tthis.audioPlayer = new AudioPlayer()\n\n\t\tgetMidiHandler().setNoteOnCallback(this.addInputNoteOn.bind(this))\n\t\tgetMidiHandler().setNoteOffCallback(this.addInputNoteOff.bind(this))\n\n\t\tthis.startDelay = -2.5\n\t\tthis.lastTime = this.audioPlayer.getContextTime()\n\t\tthis.progress = 0\n\t\tthis.paused = true\n\t\tthis.playing = false\n\t\tthis.scrolling = 0\n\t\tthis.loadedSongs = new Set()\n\t\tthis.muted = false\n\t\tthis.volume = 100\n\t\tthis.mutedAtVolume = 100\n\t\tthis.soundfontName = getSetting(\"soundfontName\")\n\t\tthis.inputInstrument = \"acoustic_grand_piano\"\n\t\tthis.lastMicNote = -1\n\n\t\tthis.newSongCallbacks = []\n\t\tthis.inputActiveNotes = {}\n\t\tthis.inputPlayedNotes = []\n\n\t\tthis.playbackSpeed = 1\n\n\t\tconsole.log(\"Player created.\")\n\t\tthis.playTick()\n\t}\n\tgetState() {\n\t\tlet time = this.getTime()\n\t\treturn {\n\t\t\ttime: time,\n\t\t\tctxTime: this.audioPlayer.getContextTime(),\n\t\t\tend: this.song ? this.song.getEnd() : 0,\n\t\t\tloading: this.audioPlayer.loading,\n\t\t\tsong: this.song,\n\t\t\tinputActiveNotes: this.inputActiveNotes,\n\t\t\tinputPlayedNotes: this.inputPlayedNotes,\n\t\t\tbpm: this.getBPM(time)\n\t\t}\n\t}\n\taddNewSongCallback(callback) {\n\t\tthis.newSongCallbacks.push(callback)\n\t}\n\tswitchSoundfont(soundfontName) {\n\t\tthis.wasPaused = this.paused\n\t\tthis.pause()\n\t\tgetLoader().startLoad()\n\t\tlet nowTime = window.performance.now()\n\t\tthis.soundfontName = soundfontName\n\t\tthis.audioPlayer.switchSoundfont(soundfontName, this.song).then(resolve => {\n\t\t\twindow.setTimeout(() => {\n\t\t\t\tif (!this.wasPaused) {\n\t\t\t\t\tthis.resume()\n\t\t\t\t}\n\t\t\t\tgetLoader().stopLoad()\n\t\t\t}, Math.max(0, 500 - (window.performance.now() - nowTime)))\n\t\t})\n\t}\n\n\tgetTimeWithScrollOffset(scrollOffset) {\n\t\treturn this.progress + this.startDelay - scrollOffset\n\t}\n\tgetTime() {\n\t\treturn this.progress + this.startDelay - this.scrollOffset\n\t}\n\tgetTimeWithoutScrollOffset() {\n\t\treturn this.progress + this.startDelay\n\t}\n\tsetTime(seconds) {\n\t\tthis.audioPlayer.stopAllSources()\n\t\tthis.progress += seconds - this.getTime()\n\t\tthis.resetNoteSequence()\n\t}\n\tincreaseSpeed(val) {\n\t\tthis.playbackSpeed = Math.max(\n\t\t\t0,\n\t\t\tMath.round((this.playbackSpeed + val) * 100) / 100\n\t\t)\n\t}\n\tgetChannel(track) {\n\t\tif (this.song.activeTracks[track].notes.length) {\n\t\t\treturn this.channels[this.song.activeTracks[track].notes[0].channel]\n\t\t}\n\t}\n\tgetCurrentTrackInstrument(trackIndex) {\n\t\tlet i = 0\n\t\tlet noteSeq = this.song.getNoteSequence()\n\t\tlet nextNote = noteSeq[i]\n\t\twhile (nextNote.track != trackIndex && i < noteSeq.length - 1) {\n\t\t\ti++\n\t\t\tnextNote = noteSeq[i]\n\t\t}\n\t\tif (nextNote.track == trackIndex) {\n\t\t\treturn nextNote.instrument\n\t\t}\n\t}\n\n\tasync loadSong(theSong, fileName, name) {\n\t\tthis.audioPlayer.stopAllSources()\n\t\tgetLoader().startLoad()\n\t\tgetLoader().setLoadMessage(\"Loading \" + fileName + \".\")\n\t\tif (this.audioPlayer.isRunning()) {\n\t\t\tthis.audioPlayer.suspend()\n\t\t}\n\n\t\tthis.loading = true\n\n\t\tgetLoader().setLoadMessage(\"Parsing Midi File.\")\n\t\ttry {\n\t\t\tlet midiFile = await MidiLoader.loadFile(theSong)\n\t\t\tthis.setSong(new Song(midiFile, fileName, name))\n\t\t\tgetLoader().setLoadMessage(\"Loading Instruments\")\n\n\t\t\tawait this.audioPlayer.loadInstrumentsForSong(this.song)\n\n\t\t\tgetLoader().setLoadMessage(\"Creating Buffers\")\n\t\t\treturn this.audioPlayer.loadBuffers().then(v => getLoader().stopLoad())\n\t\t} catch (error) {\n\t\t\tconsole.log(error)\n\t\t\tNotification.create(\"Couldn't read Midi-File - \" + error, 2000)\n\t\t\tgetLoader().stopLoad()\n\t\t}\n\t}\n\n\tsetSong(song) {\n\t\tthis.pause()\n\t\tthis.playing = false\n\t\tthis.paused = true\n\t\tthis.wasPaused = true\n\t\tthis.progress = 0\n\t\tthis.scrollOffset = 0\n\t\tthis.song = song\n\t\tif (this.loadedSongs.has(song)) {\n\t\t\tthis.loadedSongs.add(song)\n\t\t}\n\t\tsetupTracks(song.activeTracks)\n\t\tthis.newSongCallbacks.forEach(callback => callback())\n\t}\n\tstartPlay() {\n\t\tconsole.log(\"Starting Song\")\n\t\tthis.wasPaused = false\n\n\t\tthis.resetNoteSequence()\n\t\tthis.lastTime = this.audioPlayer.getContextTime()\n\t\tthis.resume()\n\t}\n\thandleScroll(stacksize) {\n\t\tif (this.scrolling != 0) {\n\t\t\tif (!this.song) {\n\t\t\t\tthis.scrolling = 0\n\t\t\t\treturn\n\t\t\t}\n\t\t\tthis.lastTime = this.audioPlayer.getContextTime()\n\t\t\tlet newScrollOffset = this.scrollOffset + 0.01 * this.scrolling\n\t\t\t//get hypothetical time with new scrollOffset.\n\t\t\tlet oldTime = this.getTimeWithScrollOffset(this.scrollOffset)\n\t\t\tlet newTime = this.getTimeWithScrollOffset(newScrollOffset)\n\n\t\t\t//limit scroll past end\n\t\t\tif (this.song && newTime > 1 + this.song.getEnd() / 1000) {\n\t\t\t\tthis.scrolling = 0\n\t\t\t\tnewScrollOffset =\n\t\t\t\t\tthis.getTimeWithoutScrollOffset() - (1 + this.song.getEnd() / 1000)\n\t\t\t\tthis.scrollOffset + (1 + this.song.getEnd() / 1000 - this.getTime()) ||\n\t\t\t\t\tthis.scrollOffset\n\t\t\t}\n\n\t\t\t//limit scroll past beginning\n\t\t\tif (newTime < oldTime && newTime < this.startDelay) {\n\t\t\t\tthis.scrolling = 0\n\t\t\t\tnewScrollOffset = this.getTimeWithoutScrollOffset() - this.startDelay\n\t\t\t}\n\n\t\t\tthis.scrollOffset = newScrollOffset\n\n\t\t\t//dampen scroll amount somehow...\n\t\t\tthis.scrolling =\n\t\t\t\t(Math.abs(this.scrolling) -\n\t\t\t\t\tMath.max(\n\t\t\t\t\t\tMath.abs(this.scrolling * 0.003),\n\t\t\t\t\t\tthis.playbackSpeed * 0.001\n\t\t\t\t\t)) *\n\t\t\t\t(Math.abs(this.scrolling) / this.scrolling) || 0\n\n\t\t\t//set to zero if only minimal scrollingspeed left\n\t\t\tif (Math.abs(this.scrolling) <= this.playbackSpeed * 0.005) {\n\t\t\t\tthis.scrolling = 0\n\t\t\t\tthis.resetNoteSequence()\n\t\t\t}\n\t\t\t//limit recursion\n\t\t\tif (!stacksize) stacksize = 0\n\t\t\tif (stacksize > 50) {\n\t\t\t\twindow.setTimeout(() => {\n\t\t\t\t\tthis.handleScroll()\n\t\t\t\t}, 25)\n\t\t\t\treturn\n\t\t\t}\n\t\t\tthis.handleScroll(++stacksize)\n\t\t\treturn\n\t\t}\n\t}\n\tgetBPM(time) {\n\t\tlet val = 0\n\t\tif (this.song) {\n\t\t\tfor (let i = this.song.temporalData.bpms.length - 1; i >= 0; i--) {\n\t\t\t\tif (time * 1000 > this.song.temporalData.bpms[i].timestamp) {\n\t\t\t\t\tval = this.song.temporalData.bpms[i].bpm\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn val\n\t}\n\tplayTick() {\n\t\tlet currentContextTime = this.audioPlayer.getContextTime()\n\n\t\tlet delta = (currentContextTime - this.lastTime) * this.playbackSpeed\n\n\t\t//Setting doesnt exist yet. Pitch detection is too bad for a whole piano.\n\t\tthis.addMicInputNotes()\n\n\t\tthis.clearOldPlayedInputNotes()\n\n\t\t//cap max updaterate.\n\t\tif (delta < 0.0069) {\n\t\t\tthis.requestNextTick()\n\t\t\treturn\n\t\t}\n\n\t\tlet oldProgress = this.progress\n\t\tthis.lastTime = currentContextTime\n\t\tif (!this.paused && this.scrolling == 0) {\n\t\t\tthis.progress += Math.min(0.1, delta)\n\t\t} else {\n\t\t\tthis.requestNextTick()\n\t\t\treturn\n\t\t}\n\n\t\tlet soundfontName = getSetting(\"soundfontName\")\n\t\tif (soundfontName != this.soundfontName) {\n\t\t\tthis.switchSoundfont(soundfontName)\n\t\t\tthis.requestNextTick()\n\t\t\treturn\n\t\t}\n\n\t\tlet currentTime = this.getTime()\n\n\t\tif (this.isSongEnded(currentTime - 5)) {\n\t\t\tthis.pause()\n\t\t\tthis.requestNextTick()\n\t\t\treturn\n\t\t}\n\t\tif (getSetting(\"enableMetronome\")) {\n\t\t\tthis.playMetronomeBeats(currentTime)\n\t\t}\n\t\twhile (this.isNextNoteReached(currentTime)) {\n\t\t\tlet toRemove = 0\n\t\t\tforLoop: for (let i = 0; i < this.noteSequence.length; i++) {\n\t\t\t\tif (currentTime > 0.05 + this.noteSequence[i].timestamp / 1000) {\n\t\t\t\t\ttoRemove++\n\t\t\t\t} else {\n\t\t\t\t\tbreak forLoop\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (toRemove > 0) {\n\t\t\t\tthis.noteSequence.splice(0, toRemove)\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tthis.noteSequence[0] &&\n\t\t\t\t(!isTrackRequiredToPlay(this.noteSequence[0].track) ||\n\t\t\t\t\tthis.isInputKeyPressed(this.noteSequence[0].noteNumber))\n\t\t\t) {\n\t\t\t\tthis.playNote(this.noteSequence.shift())\n\t\t\t} else {\n\t\t\t\tthis.progress = oldProgress\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\n\t\tthis.requestNextTick()\n\t}\n\n\tplayMetronomeBeats(currentTime) {\n\t\tthis.playedBeats = this.playedBeats || {}\n\t\tlet beatsBySecond = getCurrentSong().temporalData.beatsBySecond\n\t\tlet secondsToCheck = [Math.floor(currentTime), Math.floor(currentTime) + 1]\n\t\tsecondsToCheck.forEach(second => {\n\t\t\tif (beatsBySecond[second]) {\n\t\t\t\tbeatsBySecond[second].forEach(beatTimestamp => {\n\t\t\t\t\tif (\n\t\t\t\t\t\t!this.playedBeats.hasOwnProperty(beatTimestamp) &&\n\t\t\t\t\t\tbeatTimestamp / 1000 < currentTime + 0.5\n\t\t\t\t\t) {\n\t\t\t\t\t\tlet newMeasure =\n\t\t\t\t\t\t\tgetCurrentSong().measureLines[Math.floor(beatTimestamp / 1000)] &&\n\t\t\t\t\t\t\tgetCurrentSong().measureLines[\n\t\t\t\t\t\t\t\tMath.floor(beatTimestamp / 1000)\n\t\t\t\t\t\t\t].includes(beatTimestamp)\n\t\t\t\t\t\tthis.playedBeats[beatTimestamp] = true\n\t\t\t\t\t\tthis.audioPlayer.playBeat(\n\t\t\t\t\t\t\tbeatTimestamp / 1000 - currentTime,\n\t\t\t\t\t\t\tnewMeasure\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t}\n\n\tclearOldPlayedInputNotes() {\n\t\t//TODO - Clear those that arent displayed anymore.. And/Or save them somewhere for playback.\n\t}\n\n\taddMicInputNotes() {\n\t\tif (getSetting(\"micInputEnabled\")) {\n\t\t\tlet currentMicNote = getCurrentMicNote()\n\n\t\t\t// console.log(currentMicFrequency)\n\t\t\tif (this.lastMicNote != currentMicNote) {\n\t\t\t\tif (this.lastMicNote > -1) {\n\t\t\t\t\tthis.addInputNoteOff(this.lastMicNote)\n\t\t\t\t}\n\t\t\t\tif (currentMicNote > -1) {\n\t\t\t\t\tthis.addInputNoteOn(currentMicNote)\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.lastMicNote = currentMicNote\n\t\t}\n\t}\n\n\trequestNextTick() {\n\t\twindow.requestAnimationFrame(this.playTick.bind(this))\n\t}\n\n\tisInputKeyPressed(noteNumber) {\n\t\tif (\n\t\t\tthis.inputActiveNotes.hasOwnProperty(noteNumber) &&\n\t\t\t!this.inputActiveNotes[noteNumber].wasUsed\n\t\t) {\n\t\t\tthis.inputActiveNotes[noteNumber].wasUsed = true\n\t\t\treturn true\n\t\t}\n\t\treturn false\n\t}\n\tisSongEnded(currentTime) {\n\t\treturn currentTime >= this.song.getEnd() / 1000\n\t}\n\n\tisNextNoteReached(currentTime) {\n\t\tlet lookahead = isAnyTrackPlayalong()\n\t\t\t? LOOK_AHEAD_TIME_WHEN_PLAYALONG\n\t\t\t: LOOK_AHEAD_TIME\n\t\treturn (\n\t\t\tthis.noteSequence.length &&\n\t\t\tthis.noteSequence[0].timestamp / 1000 <\n\t\t\tcurrentTime + lookahead * this.playbackSpeed\n\t\t)\n\t}\n\n\tstop() {\n\t\tthis.progress = 0\n\t\tthis.scrollOffset = 0\n\t\tthis.playing = false\n\t\tthis.pause()\n\t}\n\tresume() {\n\t\tif (!this.song || !this.paused) return\n\t\tconsole.log(\"Resuming Song\")\n\t\tthis.paused = false\n\t\tthis.resetNoteSequence()\n\t\tthis.audioPlayer.resume()\n\t}\n\tresetNoteSequence() {\n\t\tthis.noteSequence = this.song.getNoteSequence()\n\t\tthis.noteSequence = this.noteSequence.filter(\n\t\t\tnote => note.timestamp > this.getTime()\n\t\t)\n\t\tthis.inputActiveNotes = {}\n\t\tthis.playedBeats = {}\n\t}\n\n\tpause() {\n\t\tconsole.log(\"Pausing Song\")\n\t\tthis.pauseTime = this.getTime()\n\t\tthis.paused = true\n\t}\n\n\tplayNote(note) {\n\t\tif (!note.hasOwnProperty(\"channel\") || !note.hasOwnProperty(\"noteNumber\")) {\n\t\t\treturn\n\t\t}\n\t\tlet currentTime = this.getTime()\n\n\t\tif (getMidiHandler().isOutputActive()) {\n\t\t\tgetMidiHandler().playNote(\n\t\t\t\tnote.noteNumber + 21,\n\t\t\t\tnote.velocity,\n\t\t\t\tnote.noteOffVelocity,\n\t\t\t\t(note.timestamp - currentTime * 1000) / this.playbackSpeed,\n\t\t\t\t(note.offTime - currentTime * 1000) / this.playbackSpeed\n\t\t\t)\n\t\t} else {\n\t\t\tthis.audioPlayer.playCompleteNote(\n\t\t\t\tcurrentTime,\n\t\t\t\tnote,\n\t\t\t\tthis.playbackSpeed,\n\t\t\t\tthis.getNoteVolume(note),\n\t\t\t\tisAnyTrackPlayalong()\n\t\t\t)\n\t\t}\n\t}\n\tgetNoteVolume(note) {\n\t\treturn (\n\t\t\t(this.volume / 100) *\n\t\t\t(getTrackVolume(note.track) / 100) *\n\t\t\t(note.channelVolume / 127)\n\t\t)\n\t}\n\n\taddInputNoteOn(noteNumber) {\n\t\tconsole.log(pianoNotes[noteNumber])\n\t\tif (this.inputActiveNotes.hasOwnProperty(noteNumber)) {\n\t\t\tconsole.log(\"NOTE ALREADY PLAING\")\n\t\t\tthis.audioPlayer.noteOffContinuous(\n\t\t\t\tthis.inputActiveNotes[noteNumber].audioNote\n\t\t\t)\n\t\t\tdelete this.inputActiveNotes[noteNumber]\n\t\t}\n\t\tlet audioNote = this.audioPlayer.createContinuousNote(\n\t\t\tnoteNumber,\n\t\t\tthis.volume,\n\t\t\tthis.inputInstrument\n\t\t)\n\t\tlet activeNoteObj = {\n\t\t\taudioNote: audioNote,\n\t\t\twasUsed: false,\n\t\t\tnoteNumber: noteNumber,\n\t\t\ttimestamp: this.audioPlayer.getContextTime() * 1000\n\t\t}\n\n\t\tthis.inputActiveNotes[noteNumber] = activeNoteObj\n\t}\n\taddInputNoteOff(noteNumber) {\n\t\tif (!this.inputActiveNotes.hasOwnProperty(noteNumber)) {\n\t\t\tconsole.log(\"NOTE NOT PLAYING\")\n\t\t\treturn\n\t\t}\n\t\tthis.audioPlayer.noteOffContinuous(\n\t\t\tthis.inputActiveNotes[noteNumber].audioNote\n\t\t)\n\t\tthis.inputActiveNotes[noteNumber].offTime =\n\t\t\tthis.audioPlayer.getContextTime() * 1000\n\t\tthis.inputPlayedNotes.push(this.inputActiveNotes[noteNumber])\n\n\n\t\tdelete this.inputActiveNotes[noteNumber]\n\t\tconsole.log(this.inputPlayedNotes)\n\t}\n}\nconst thePlayer = new Player()\nexport const getPlayer = () => {\n\treturn thePlayer\n}\n\nexport const getCurrentSong = () => {\n\treturn thePlayer.song\n}\n\nexport const getPlayerState = () => {\n\treturn thePlayer.getState()\n}\nfunction getPianoNotes() {\n\tconst notes = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"];\n\tconst numOctaves = 8; // 7 octaves from A0 to A7\n\tconst pianoNotes = [];\n\n\tfor (let octave = 0; octave <= numOctaves; octave++) {\n\t\tfor (let noteIndex = 0; noteIndex < notes.length; noteIndex++) {\n\t\t\tif (noteIndex < 9 && octave === 0) {\n\t\t\t\tcontinue; // Skip C0 to G#8\n\t\t\t}\n\n\t\t\tconst noteWithOctave = `${notes[noteIndex]}${octave}`;\n\t\t\tpianoNotes.push(noteWithOctave);\n\n\t\t\tif (notes[noteIndex] === \"C\" && octave === 8) {\n\t\t\t\tbreak; // Stop after C8\n\t\t\t}\n\t\t}\n\t}\n\n\treturn pianoNotes;\n}\n\nexport const pianoNotes = getPianoNotes();\nconsole.log(pianoNotes);\n","import { CONST } from \"../data/CONST.js\"\n\n/**\n *\n */\n\nvar theTracks = {}\nexport const getTracks = () => {\n\treturn theTracks\n}\nexport const getTrack = trackId => {\n\treturn theTracks[trackId]\n}\nexport const setupTracks = activeTracks => {\n\ttheTracks = {}\n\tfor (let trackId in activeTracks) {\n\t\tif (!theTracks.hasOwnProperty(trackId)) {\n\t\t\ttheTracks[trackId] = {\n\t\t\t\tdraw: true,\n\t\t\t\tcolor: CONST.TRACK_COLORS[trackId % 4],\n\t\t\t\tvolume: 100,\n\t\t\t\tname: activeTracks[trackId].name || \"Track \" + trackId,\n\t\t\t\trequiredToPlay: false,\n\t\t\t\tindex: trackId\n\t\t\t}\n\t\t}\n\t\ttheTracks[trackId].color = CONST.TRACK_COLORS[trackId % 4]\n\t}\n}\n\nexport const isTrackRequiredToPlay = trackId => {\n\treturn theTracks[trackId].requiredToPlay\n}\n\nexport const isAnyTrackPlayalong = () => {\n\treturn (\n\t\tObject.keys(theTracks).filter(trackId => theTracks[trackId].requiredToPlay)\n\t\t\t.length > 0\n\t)\n}\n\nexport const getTrackVolume = trackId => {\n\treturn theTracks[trackId].volume\n}\n\nexport const isTrackDrawn = trackId => {\n\treturn theTracks[trackId] && theTracks[trackId].draw\n}\n\nexport const getTrackColor = trackId => {\n\treturn theTracks[trackId] ? theTracks[trackId].color : \"rgba(0,0,0,0)\"\n}\n\nexport const setTrackColor = (trackId, colorId, color) => {\n\ttheTracks[trackId].color[colorId] = color\n}\n","import { getSetting, setSetting } from \"./Settings.js\"\n\nexport const getDefaultSettings = () => {\n\tlet copy = {}\n\tfor (let tab in defaultSettings) {\n\t\tcopy[tab] = {}\n\t\tfor (let category in defaultSettings[tab]) {\n\t\t\tcopy[tab][category] = []\n\t\t\tdefaultSettings[tab][category].forEach(setting => {\n\t\t\t\tlet settingCopy = {}\n\t\t\t\tfor (let attribute in setting) {\n\t\t\t\t\tsettingCopy[attribute] = setting[attribute]\n\t\t\t\t}\n\t\t\t\tcopy[tab][category].push(settingCopy)\n\t\t\t})\n\t\t}\n\t}\n\treturn copy\n}\nconst TAB_GENERAL = \"General\"\nconst TAB_AUDIO = \"Audio\"\nconst TAB_VIDEO = \"Video\"\n\nconst defaultSettings = {\n\t//tabs\n\tGeneral: {\n\t\t//default or subcategory\n\t\tdefault: [\n\t\t\t{\n\t\t\t\ttype: \"slider\",\n\t\t\t\tid: \"renderOffset\",\n\t\t\t\tlabel: \"Render offset (ms)\",\n\t\t\t\tvalue: 0,\n\t\t\t\tmin: -250,\n\t\t\t\tmax: 250,\n\t\t\t\tstep: 1,\n\t\t\t\tonChange: value => setSetting(\"renderOffset\", value)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"checkbox\",\n\t\t\t\tid: \"reverseNoteDirection\",\n\t\t\t\tlabel: \"Reverse note direction\",\n\t\t\t\tvalue: false,\n\t\t\t\tonChange: ev => {\n\t\t\t\t\tsetSetting(\"reverseNoteDirection\", ev.target.checked)\n\t\t\t\t\tsetSetting(\n\t\t\t\t\t\t\"pianoPosition\",\n\t\t\t\t\t\tMath.abs(parseInt(getSetting(\"pianoPosition\")) + 1)\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t{\n\t\t\t\ttype: \"checkbox\",\n\t\t\t\tid: \"showBPM\",\n\t\t\t\tlabel: \"Show BPM\",\n\t\t\t\tvalue: true,\n\t\t\t\tonChange: ev => setSetting(\"showBPM\", ev.target.checked)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"checkbox\",\n\t\t\t\tid: \"showMiliseconds\",\n\t\t\t\tlabel: \"Show Miliseconds\",\n\t\t\t\tvalue: true,\n\t\t\t\tonChange: ev => setSetting(\"showMiliseconds\", ev.target.checked)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"checkbox\",\n\t\t\t\tid: \"showNoteDebugInfo\",\n\t\t\t\tlabel: \"Enable debug info on hover over note\",\n\t\t\t\tvalue: false,\n\t\t\t\tonChange: ev => setSetting(\"showNoteDebugInfo\", ev.target.checked)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"checkbox\",\n\t\t\t\tid: \"showMarkersSong\",\n\t\t\t\tlabel: \"Show markers in the song\",\n\t\t\t\tvalue: false,\n\t\t\t\tonChange: ev => setSetting(\"showMarkersSong\", ev.target.checked)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"checkbox\",\n\t\t\t\tid: \"showMarkersTimeline\",\n\t\t\t\tlabel: \"Show markers on timeline\",\n\t\t\t\tvalue: false,\n\t\t\t\tonChange: ev => setSetting(\"showMarkersTimeline\", ev.target.checked)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"checkbox\",\n\t\t\t\tid: \"showFps\",\n\t\t\t\tlabel: \"Show FPS\",\n\t\t\t\tvalue: true,\n\t\t\t\tonChange: ev => setSetting(\"showFps\", ev.target.checked)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"color\",\n\t\t\t\tid: \"inputNoteColor\",\n\t\t\t\tlabel: \"Your note color\",\n\t\t\t\tvalue: \"rgba(40,155,155,0.8)\",\n\t\t\t\tonChange: value => setSetting(\"inputNoteColor\", value)\n\t\t\t}\n\t\t],\n\t\t\"On Screen Piano\": [\n\t\t\t{\n\t\t\t\ttype: \"checkbox\",\n\t\t\t\tid: \"clickablePiano\",\n\t\t\t\tlabel: \"Clickable piano\",\n\t\t\t\tvalue: true,\n\t\t\t\tonChange: ev => setSetting(\"clickablePiano\", ev.target.checked)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"checkbox\",\n\t\t\t\tid: \"showKeyNamesOnPianoWhite\",\n\t\t\t\tlabel: \"Show white key names on piano\",\n\t\t\t\tvalue: true,\n\t\t\t\tonChange: ev =>\n\t\t\t\t\tsetSetting(\"showKeyNamesOnPianoWhite\", ev.target.checked)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"checkbox\",\n\t\t\t\tid: \"showKeyNamesOnPianoBlack\",\n\t\t\t\tlabel: \"Show black key names on piano\",\n\t\t\t\tvalue: true,\n\t\t\t\tonChange: ev =>\n\t\t\t\t\tsetSetting(\"showKeyNamesOnPianoBlack\", ev.target.checked)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"checkbox\",\n\t\t\t\tid: \"highlightActivePianoKeys\",\n\t\t\t\tlabel: \"Color active piano keys\",\n\t\t\t\tvalue: true,\n\t\t\t\tonChange: ev => setSetting(\"showPianoKeys\", ev.target.checked)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"checkbox\",\n\t\t\t\tid: \"drawPianoKeyHitEffect\",\n\t\t\t\tlabel: \"Piano Hit key effect\",\n\t\t\t\tvalue: true,\n\t\t\t\tonChange: ev => setSetting(\"drawPianoKeyHitEffect\", ev.target.checked)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"slider\",\n\t\t\t\tid: \"pianoPosition\",\n\t\t\t\tlabel: \"Piano Position\",\n\t\t\t\tvalue: 20,\n\t\t\t\tmin: 0,\n\t\t\t\tmax: 100,\n\t\t\t\tstep: 1,\n\t\t\t\tonChange: value => setSetting(\"pianoPosition\", value)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"slider\",\n\t\t\t\tid: \"whiteKeyHeight\",\n\t\t\t\tlabel: \"Height (%) - White keys\",\n\t\t\t\tvalue: 100,\n\t\t\t\tmin: 0,\n\t\t\t\tmax: 200,\n\t\t\t\tstep: 1,\n\t\t\t\tonChange: value => setSetting(\"whiteKeyHeight\", value)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"slider\",\n\t\t\t\tid: \"blackKeyHeight\",\n\t\t\t\tlabel: \"Height (%) - Black keys\",\n\t\t\t\tvalue: 100,\n\t\t\t\tmin: 0,\n\t\t\t\tmax: 200,\n\t\t\t\tstep: 1,\n\t\t\t\tonChange: value => setSetting(\"blackKeyHeight\", value)\n\t\t\t}\n\t\t]\n\t},\n\n\tVideo: {\n\t\tdefault: [\n\t\t\t{\n\t\t\t\ttype: \"slider\",\n\t\t\t\tid: \"noteToHeightConst\",\n\t\t\t\tlabel: \"Seconds shown on screen\",\n\t\t\t\tvalue: 3,\n\t\t\t\tmin: 0.1,\n\t\t\t\tmax: 30,\n\t\t\t\tstep: 0.1,\n\t\t\t\tonChange: value => setSetting(\"noteToHeightConst\", value)\n\t\t\t}\n\t\t],\n\t\t\"Note Appearance\": [\n\t\t\t{\n\t\t\t\ttype: \"checkbox\",\n\t\t\t\tid: \"showHitKeys\",\n\t\t\t\tlabel: \"Active Notes effect\",\n\t\t\t\tvalue: true,\n\t\t\t\tonChange: ev => setSetting(\"showHitKeys\", ev.target.checked)\n\t\t\t},\n\n\t\t\t{\n\t\t\t\ttype: \"checkbox\",\n\t\t\t\tid: \"strokeActiveNotes\",\n\t\t\t\tlabel: \"Stroke active notes\",\n\t\t\t\tvalue: true,\n\t\t\t\tonChange: ev => setSetting(\"strokeActiveNotes\", ev.target.checked)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"color\",\n\t\t\t\tid: \"strokeActiveNotesColor\",\n\t\t\t\tlabel: \"Stroke color\",\n\t\t\t\tvalue: \"rgba(240,240,240,0.5)\",\n\t\t\t\tonChange: value => setSetting(\"strokeActiveNotesColor\", value)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"slider\",\n\t\t\t\tid: \"strokeActiveNotesWidth\",\n\t\t\t\tlabel: \"Stroke width\",\n\t\t\t\tvalue: \"4\",\n\t\t\t\tmin: 1,\n\t\t\t\tmax: 10,\n\t\t\t\tstep: 0.5,\n\t\t\t\tonChange: value => setSetting(\"strokeActiveNotesWidth\", value)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"checkbox\",\n\t\t\t\tid: \"strokeNotes\",\n\t\t\t\tlabel: \"Stroke notes\",\n\t\t\t\tvalue: true,\n\t\t\t\tonChange: ev => setSetting(\"strokeNotes\", ev.target.checked)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"color\",\n\t\t\t\tid: \"strokeNotesColor\",\n\t\t\t\tlabel: \"Stroke color\",\n\t\t\t\tvalue: \"rgba(0,0,0,1)\",\n\t\t\t\tonChange: value => setSetting(\"strokeNotesColor\", value)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"slider\",\n\t\t\t\tid: \"strokeNotesWidth\",\n\t\t\t\tlabel: \"Stroke width\",\n\t\t\t\tvalue: \"1\",\n\t\t\t\tmin: 1,\n\t\t\t\tmax: 10,\n\t\t\t\tstep: 0.5,\n\t\t\t\tonChange: value => setSetting(\"strokeNotesWidth\", value)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"checkbox\",\n\t\t\t\tid: \"roundedNotes\",\n\t\t\t\tlabel: \"Rounded notes\",\n\t\t\t\tvalue: true,\n\t\t\t\tonChange: ev => setSetting(\"roundedNotes\", ev.target.checked)\n\t\t\t},\n\t\t\t//TODO fix getAlphaFromY in Noterender.\n\t\t\t// {\n\t\t\t// \ttype: \"checkbox\",\n\t\t\t// \tid: \"fadeInNotes\",\n\t\t\t// \tlabel: \"Enable fade in effect\",\n\t\t\t// \tvalue: true,\n\t\t\t// \tonChange: ev => setSetting(\"fadeInNotes\", ev.target.checked)\n\t\t\t// },\n\t\t\t{\n\t\t\t\ttype: \"slider\",\n\t\t\t\tid: \"noteBorderRadius\",\n\t\t\t\tlabel: \"Note border radius (%)\",\n\t\t\t\tvalue: 15,\n\t\t\t\tmin: 0,\n\t\t\t\tmax: 50,\n\t\t\t\tstep: 1,\n\t\t\t\tonChange: value => setSetting(\"noteBorderRadius\", value)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"slider\",\n\t\t\t\tid: \"minNoteHeight\",\n\t\t\t\tlabel: \"Minimum Note height (px)\",\n\t\t\t\tvalue: 10,\n\t\t\t\tmin: 1,\n\t\t\t\tmax: 50,\n\t\t\t\tstep: 1,\n\t\t\t\tonChange: value => setSetting(\"minNoteHeight\", value)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"slider\",\n\t\t\t\tid: \"noteEndedShrink\",\n\t\t\t\tlabel: \"Played Notes shrink speed\",\n\t\t\t\tvalue: 1,\n\t\t\t\tmin: 0,\n\t\t\t\tmax: 5,\n\t\t\t\tstep: 0.1,\n\t\t\t\tonChange: value => setSetting(\"noteEndedShrink\", value)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"slider\",\n\t\t\t\tid: \"playedNoteFalloffSpeed\",\n\t\t\t\tlabel: \"Played Note Speed\",\n\t\t\t\tvalue: 1,\n\t\t\t\tmin: 0.1,\n\t\t\t\tmax: 10,\n\t\t\t\tstep: 0.1,\n\t\t\t\tonChange: value => setSetting(\"playedNoteFalloffSpeed\", value)\n\t\t\t}\n\t\t],\n\t\tSustain: [\n\t\t\t{\n\t\t\t\ttype: \"checkbox\",\n\t\t\t\tid: \"showSustainOnOffs\",\n\t\t\t\tlabel: \"Draw Sustain On/Off Events\",\n\t\t\t\tvalue: false,\n\t\t\t\tonChange: function (ev) {\n\t\t\t\t\tsetSetting(\"showSustainOnOffs\", ev.target.checked)\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"checkbox\",\n\t\t\t\tid: \"showSustainPeriods\",\n\t\t\t\tlabel: \"Draw Sustain Periods\",\n\t\t\t\tvalue: false,\n\t\t\t\tonChange: ev => setSetting(\"showSustainPeriods\", ev.target.checked)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"checkbox\",\n\t\t\t\tid: \"showSustainedNotes\",\n\t\t\t\tlabel: \"Draw Sustained Notes\",\n\t\t\t\tvalue: false,\n\t\t\t\tonChange: ev => setSetting(\"showSustainedNotes\", ev.target.checked)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"slider\",\n\t\t\t\tid: \"sustainedNotesOpacity\",\n\t\t\t\tlabel: \"Sustained Notes Opacity (%)\",\n\t\t\t\tvalue: 50,\n\t\t\t\tmin: 0,\n\t\t\t\tmax: 100,\n\t\t\t\tstep: 1,\n\t\t\t\tonChange: value => setSetting(\"sustainedNotesOpacity\", value)\n\t\t\t}\n\t\t],\n\t\tParticles: [\n\t\t\t{\n\t\t\t\ttype: \"checkbox\",\n\t\t\t\tid: \"showParticlesTop\",\n\t\t\t\tlabel: \"Enable top particles\",\n\t\t\t\tvalue: true,\n\t\t\t\tonChange: ev => setSetting(\"showParticlesTop\", ev.target.checked)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"checkbox\",\n\t\t\t\tid: \"showParticlesBottom\",\n\t\t\t\tlabel: \"Enable bottom particles \",\n\t\t\t\tvalue: true,\n\t\t\t\tonChange: ev => setSetting(\"showParticlesBottom\", ev.target.checked)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"checkbox\",\n\t\t\t\tid: \"particleStroke\",\n\t\t\t\tlabel: \"Stroke particles\",\n\t\t\t\tvalue: true,\n\t\t\t\tonChange: ev => setSetting(\"particleStroke\", ev.target.checked)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"slider\",\n\t\t\t\tid: \"particleBlur\",\n\t\t\t\tlabel: \"Particle blur amount (px)\",\n\t\t\t\tvalue: 3,\n\t\t\t\tmin: 0,\n\t\t\t\tmax: 10,\n\t\t\t\tstep: 1,\n\t\t\t\tonChange: value => setSetting(\"particleBlur\", value)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"slider\",\n\t\t\t\tid: \"particleAmount\",\n\t\t\t\tlabel: \"Particle Amount (per frame)\",\n\t\t\t\tvalue: 3,\n\t\t\t\tmin: 0,\n\t\t\t\tmax: 15,\n\t\t\t\tstep: 1,\n\t\t\t\tonChange: value => setSetting(\"particleAmount\", value)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"slider\",\n\t\t\t\tid: \"particleSize\",\n\t\t\t\tlabel: \"Particle Size\",\n\t\t\t\tvalue: 6,\n\t\t\t\tmin: 0,\n\t\t\t\tmax: 10,\n\t\t\t\tstep: 1,\n\t\t\t\tonChange: value => setSetting(\"particleSize\", value)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"slider\",\n\t\t\t\tid: \"particleLife\",\n\t\t\t\tlabel: \"Particle Duration\",\n\t\t\t\tvalue: 20,\n\t\t\t\tmin: 1,\n\t\t\t\tmax: 150,\n\t\t\t\tstep: 1,\n\t\t\t\tonChange: value => setSetting(\"particleLife\", value)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"slider\",\n\t\t\t\tid: \"particleSpeed\",\n\t\t\t\tlabel: \"Particle Speed\",\n\t\t\t\tvalue: 4,\n\t\t\t\tmin: 1,\n\t\t\t\tmax: 15,\n\t\t\t\tstep: 1,\n\t\t\t\tonChange: value => setSetting(\"particleSpeed\", value)\n\t\t\t}\n\t\t],\n\t\tBackground: [\n\t\t\t{\n\t\t\t\ttype: \"color\",\n\t\t\t\tid: \"bgCol1\",\n\t\t\t\tlabel: \"Background fill color 1\",\n\t\t\t\tvalue: \"rgba(40,40,40,0.8)\",\n\t\t\t\tonChange: value => {\n\t\t\t\t\tsetSetting(\"bgCol1\", value)\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"color\",\n\t\t\t\tid: \"bgCol2\",\n\t\t\t\tlabel: \"Background fill color 2\",\n\t\t\t\tvalue: \"rgba(25,25,25,1)\",\n\t\t\t\tonChange: value => {\n\t\t\t\t\tsetSetting(\"bgCol2\", value)\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"color\",\n\t\t\t\tid: \"bgCol3\",\n\t\t\t\tlabel: \"Background stroke color\",\n\t\t\t\tvalue: \"rgba(10,10,10,0.5)\",\n\t\t\t\tonChange: value => {\n\t\t\t\t\tsetSetting(\"bgCol3\", value)\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t},\n\tAudio: {\n\t\tdefault: [\n\t\t\t{\n\t\t\t\ttype: \"list\",\n\t\t\t\tid: \"soundfontName\",\n\t\t\t\tlabel: \"Soundfont\",\n\t\t\t\tvalue: \"MusyngKite\",\n\t\t\t\tlist: [\"MusyngKite\", \"FluidR3_GM\", \"FatBoy\"],\n\t\t\t\tonChange: newVal => setSetting(\"soundfontName\", newVal)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"checkbox\",\n\t\t\t\tid: \"sustainEnabled\",\n\t\t\t\tlabel: \"Enable Sustain\",\n\t\t\t\tvalue: true,\n\t\t\t\tonChange: function (ev) {\n\t\t\t\t\tsetSetting(\"sustainEnabled\", ev.target.checked)\n\t\t\t\t}.bind(this)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"checkbox\",\n\t\t\t\tid: \"enableMetronome\",\n\t\t\t\tlabel: \"Enable Metronome\",\n\t\t\t\tvalue: true,\n\t\t\t\tonChange: function (ev) {\n\t\t\t\t\tsetSetting(\"enableMetronome\", ev.target.checked)\n\t\t\t\t}.bind(this)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"slider\",\n\t\t\t\tid: \"metronomeVolume\",\n\t\t\t\tlabel: \"Metronome Volume\",\n\t\t\t\tvalue: 0.5,\n\t\t\t\tmin: 0,\n\t\t\t\tmax: 1,\n\t\t\t\tstep: 0.1,\n\t\t\t\tonChange: value => setSetting(\"metronomeVolume\", value)\n\t\t\t}\n\t\t],\n\t\t\"ADSR Envelope\": [\n\t\t\t{\n\t\t\t\ttype: \"slider\",\n\t\t\t\tid: \"adsrAttack\",\n\t\t\t\tlabel: \"Attack (Seconds)\",\n\t\t\t\tvalue: 0,\n\t\t\t\tmin: 0,\n\t\t\t\tmax: 2,\n\t\t\t\tstep: 0.01,\n\t\t\t\tonChange: value => setSetting(\"adsrAttack\", value)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"slider\",\n\t\t\t\tid: \"adsrDecay\",\n\t\t\t\tlabel: \"Decay (Seconds)\",\n\t\t\t\tvalue: 0,\n\t\t\t\tmin: 0,\n\t\t\t\tmax: 0.5,\n\t\t\t\tstep: 0.01,\n\t\t\t\tonChange: value => setSetting(\"adsrDecay\", value)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"slider\",\n\t\t\t\tid: \"adsrSustain\",\n\t\t\t\tlabel: \"Sustain (%)\",\n\t\t\t\tvalue: 100,\n\t\t\t\tmin: 0,\n\t\t\t\tmax: 100,\n\t\t\t\tstep: 1,\n\t\t\t\tonChange: value => setSetting(\"adsrSustain\", value)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"slider\",\n\t\t\t\tid: \"adsrReleaseKey\",\n\t\t\t\tlabel: \"Release - Key (Seconds)\",\n\t\t\t\tvalue: 0.2,\n\t\t\t\tmin: 0,\n\t\t\t\tmax: 2,\n\t\t\t\tstep: 0.01,\n\t\t\t\tonChange: value => setSetting(\"adsrReleaseKey\", value)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"slider\",\n\t\t\t\tid: \"adsrReleasePedal\",\n\t\t\t\tlabel: \"Release - Pedal (Seconds)\",\n\t\t\t\tvalue: 0.2,\n\t\t\t\tmin: 0,\n\t\t\t\tmax: 2,\n\t\t\t\tstep: 0.01,\n\t\t\t\tonChange: value => setSetting(\"adsrReleasePedal\", value)\n\t\t\t}\n\t\t]\n\t}\n}\n","import { getSettingObject } from \"./Settings.js\"\n\nconst SAVE_PATH_ROOT = \"Midiano/SavedSettings\"\nexport const getGlobalSavedSettings = () => {\n\tlet obj = {}\n\tif (window.localStorage) {\n\t\tlet storedObj = window.localStorage.getItem(SAVE_PATH_ROOT)\n\t\tif (storedObj) {\n\t\t\tobj = JSON.parse(storedObj)\n\t\t}\n\t}\n\treturn obj\n}\n\nexport const saveCurrentSettings = () => {\n\tif (window.localStorage) {\n\t\tlet saveObj = getSettingObject()\n\t\twindow.localStorage.setItem(SAVE_PATH_ROOT, JSON.stringify(saveObj))\n\t}\n}\n","import { getDefaultSettings } from \"./DefaultSettings.js\"\nimport { SettingUI } from \"../ui/SettingUI.js\"\nimport {\n\tgetGlobalSavedSettings,\n\tsaveCurrentSettings\n} from \"./LocalStorageHandler.js\"\n\nclass Settings {\n\tconstructor(ui) {\n\t\tthis.settings = getDefaultSettings()\n\t\tlet savedSettings = getGlobalSavedSettings()\n\n\t\tthis.settingsById = {}\n\t\tObject.keys(this.settings).forEach(tabId =>\n\t\t\tObject.keys(this.settings[tabId]).forEach(categoryId =>\n\t\t\t\tthis.settings[tabId][categoryId].forEach(setting => {\n\t\t\t\t\tthis.settingsById[setting.id] = setting\n\n\t\t\t\t\tif (savedSettings.hasOwnProperty(setting.id)) {\n\t\t\t\t\t\tsetting.value = savedSettings[setting.id]\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t)\n\t\t)\n\t\tthis.settingsUi = new SettingUI()\n\t}\n\tsetSettingValue(settingId, value) {\n\t\tthis.settingsById[settingId].value = value\n\t}\n}\n\nconst globalSettings = new Settings()\nexport const getSetting = settingId => {\n\tif (globalSettings == null) {\n\t\tglobalSettings = new Settings()\n\t}\n\treturn globalSettings.settingsById[settingId]\n\t\t? globalSettings.settingsById[settingId].value\n\t\t: null\n}\nexport const setSetting = (settingId, value) => {\n\tglobalSettings.settingsById[settingId].value = value\n\tif (settingCallbacks.hasOwnProperty(settingId)) {\n\t\tsettingCallbacks[settingId].forEach(callback => callback())\n\t}\n\tsaveCurrentSettings()\n}\nexport const getSettingsDiv = () => {\n\treturn globalSettings.settingsUi.getSettingsDiv(globalSettings.settings)\n}\nvar settingCallbacks = {}\nexport const setSettingCallback = (settingId, callback) => {\n\tif (!settingCallbacks.hasOwnProperty(settingId)) {\n\t\tsettingCallbacks[settingId] = []\n\t}\n\tsettingCallbacks[settingId].push(callback)\n}\nexport const getSettingObject = () => {\n\tlet obj = {}\n\tfor (let key in globalSettings.settingsById) {\n\t\tobj[key] = globalSettings.settingsById[key].value\n\t}\n\treturn obj\n}\n\nexport const resetSettingsToDefault = () => {\n\tlet defaultSettings = getDefaultSettings()\n\tObject.keys(defaultSettings).forEach(tabId =>\n\t\tObject.keys(defaultSettings[tabId]).forEach(categoryId =>\n\t\t\tdefaultSettings[tabId][categoryId].forEach(setting => {\n\t\t\t\tglobalSettings.settingsById[setting.id].value = setting.value\n\t\t\t})\n\t\t)\n\t)\n\n\tlet parent = globalSettings.settingsUi.getSettingsDiv(globalSettings.settings)\n\t\t.parentElement\n\tparent.removeChild(\n\t\tglobalSettings.settingsUi.getSettingsDiv(globalSettings.settings)\n\t)\n\tglobalSettings.settingsUi.mainDiv = null\n\tparent.appendChild(getSettingsDiv())\n}\n","import { replaceAllString } from \"../Util.js\"\n\nexport class DomHelper {\n\tstatic createCanvas(width, height, styles) {\n\t\treturn DomHelper.createElement(\"canvas\", styles, {\n\t\t\twidth: width,\n\t\t\theight: height\n\t\t})\n\t}\n\tstatic createSpinner() {\n\t\treturn DomHelper.createDivWithIdAndClass(\"loadSpinner\", \"loader\")\n\t}\n\tstatic setCanvasSize(cnv, width, height) {\n\t\tif (cnv.width != width) {\n\t\t\tcnv.width = width\n\t\t}\n\t\tif (cnv.height != height) {\n\t\t\tcnv.height = height\n\t\t}\n\t}\n\tstatic replaceGlyph(element, oldIcon, newIcon) {\n\t\telement.children.forEach(childNode => {\n\t\t\tif (childNode.classList.contains(\"glyphicon-\" + oldIcon)) {\n\t\t\t\tchildNode.className = childNode.className.replace(\n\t\t\t\t\t\"glyphicon-\" + oldIcon,\n\t\t\t\t\t\"glyphicon-\" + newIcon\n\t\t\t\t)\n\t\t\t}\n\t\t})\n\t}\n\tstatic removeClass(className, element) {\n\t\tif (element.classList.contains(className)) {\n\t\t\telement.classList.remove(className)\n\t\t}\n\t}\n\tstatic removeClassFromElementsSelector(selector, className) {\n\t\tdocument.querySelectorAll(selector).forEach(el => {\n\t\t\tif (el.classList.contains(className)) {\n\t\t\t\tel.classList.remove(className)\n\t\t\t}\n\t\t})\n\t}\n\tstatic createSliderWithLabel(id, label, val, min, max, step, onChange) {\n\t\tlet cont = DomHelper.createElement(\n\t\t\t\"div\",\n\t\t\t{},\n\t\t\t{ id: id + \"container\", className: \"sliderContainer\" }\n\t\t)\n\t\tlet labelDiv = DomHelper.createElement(\n\t\t\t\"label\",\n\t\t\t{},\n\t\t\t{ id: id + \"label\", className: \"sliderLabel\", innerHTML: label }\n\t\t)\n\t\tlet slider = DomHelper.createSlider(id, val, min, max, step, onChange)\n\t\tcont.appendChild(labelDiv)\n\t\tcont.appendChild(slider)\n\t\treturn { slider: slider, container: cont }\n\t}\n\tstatic createSliderWithLabelAndField(\n\t\tid,\n\t\tlabel,\n\t\tval,\n\t\tmin,\n\t\tmax,\n\t\tstep,\n\t\tonChange\n\t) {\n\t\tlet displayDiv = DomHelper.createElement(\n\t\t\t\"div\",\n\t\t\t{},\n\t\t\t{ id: id + \"Field\", className: \"sliderVal\", innerHTML: val }\n\t\t)\n\n\t\tlet onChangeInternal = ev => {\n\t\t\tdisplayDiv.innerHTML = ev.target.value\n\t\t\tonChange(ev.target.value)\n\t\t}\n\n\t\tlet cont = DomHelper.createElement(\n\t\t\t\"div\",\n\t\t\t{},\n\t\t\t{ id: id + \"container\", className: \"sliderContainer\" }\n\t\t)\n\t\tlet labelDiv = DomHelper.createElement(\n\t\t\t\"label\",\n\t\t\t{},\n\t\t\t{ id: id + \"label\", className: \"sliderLabel\", innerHTML: label }\n\t\t)\n\t\tlet slider = DomHelper.createSlider(\n\t\t\tid,\n\t\t\tval,\n\t\t\tmin,\n\t\t\tmax,\n\t\t\tstep,\n\t\t\tonChangeInternal\n\t\t)\n\t\tcont.appendChild(labelDiv)\n\t\tcont.appendChild(displayDiv)\n\t\tcont.appendChild(slider)\n\n\t\treturn { slider: slider, container: cont }\n\t}\n\tstatic createGlyphiconButton(id, glyph, onClick) {\n\t\tlet bt = DomHelper.createButton(id, onClick)\n\t\tbt.appendChild(this.getGlyphicon(glyph))\n\t\treturn bt\n\t}\n\tstatic createGlyphiconTextButton(id, glyph, text, onClick) {\n\t\tlet bt = DomHelper.createButton(id, onClick)\n\t\tbt.appendChild(this.getGlyphicon(glyph))\n\t\tbt.innerHTML += \" \" + text\n\t\treturn bt\n\t}\n\tstatic createDiv(styles, attributes) {\n\t\treturn DomHelper.createElement(\"div\", styles, attributes)\n\t}\n\tstatic createDivWithId(id, styles, attributes) {\n\t\tattributes = attributes || {}\n\t\tattributes.id = id\n\t\treturn DomHelper.createElement(\"div\", styles, attributes)\n\t}\n\tstatic createDivWithClass(className, styles, attributes) {\n\t\tattributes = attributes || {}\n\t\tattributes.className = className\n\t\treturn DomHelper.createElement(\"div\", styles, attributes)\n\t}\n\tstatic createDivWithIdAndClass(id, className, styles, attributes) {\n\t\tattributes = attributes || {}\n\t\tattributes.id = id\n\t\tattributes.className = className\n\t\treturn DomHelper.createElement(\"div\", styles, attributes)\n\t}\n\tstatic createElementWithId(id, tag, styles, attributes) {\n\t\tattributes = attributes || {}\n\t\tattributes.id = id\n\t\treturn DomHelper.createElement(tag, styles, attributes)\n\t}\n\tstatic createElementWithClass(className, tag, styles, attributes) {\n\t\tattributes = attributes || {}\n\t\tattributes.className = className\n\t\treturn DomHelper.createElement(tag, styles, attributes)\n\t}\n\tstatic createElementWithIdAndClass(id, className, tag, styles, attributes) {\n\t\tstyles = styles || {}\n\t\tattributes = attributes || {}\n\t\tattributes.id = id\n\t\tattributes.className = className\n\t\treturn DomHelper.createElement(tag, styles, attributes)\n\t}\n\tstatic getGlyphicon(name) {\n\t\treturn DomHelper.createElement(\n\t\t\t\"span\",\n\t\t\t{},\n\t\t\t{ className: \"glyphicon glyphicon-\" + name }\n\t\t)\n\t}\n\tstatic createSlider(id, val, min, max, step, onChange) {\n\t\tlet el = DomHelper.createElement(\n\t\t\t\"input\",\n\t\t\t{},\n\t\t\t{\n\t\t\t\tid: id,\n\t\t\t\toninput: onChange,\n\t\t\t\ttype: \"range\",\n\t\t\t\tvalue: val,\n\t\t\t\tmin: min,\n\t\t\t\tmax: max,\n\t\t\t\tstep: step\n\t\t\t}\n\t\t)\n\t\tel.value = val\n\t\treturn el\n\t}\n\tstatic createTextInput(onChange, styles, attributes) {\n\t\tattributes = attributes || {}\n\t\tattributes.type = \"text\"\n\t\tattributes.onchange = onChange\n\t\treturn DomHelper.createElement(\"input\", styles, attributes)\n\t}\n\tstatic createCheckbox(text, onChange, value, isChecked) {\n\t\tlet id = replaceAllString(text, \" \", \"\") + \"checkbox\"\n\t\tlet cont = DomHelper.createDivWithIdAndClass(id, \"checkboxCont\")\n\t\tlet checkbox = DomHelper.createElementWithClass(\"checkboxInput\", \"input\")\n\t\tcheckbox.setAttribute(\"type\", \"checkbox\")\n\t\tcheckbox.checked = value\n\t\tcheckbox.setAttribute(\"name\", id)\n\t\tcheckbox.onchange = onChange\n\n\t\tlet label = DomHelper.createElementWithClass(\n\t\t\t\"checkboxlabel\",\n\t\t\t\"label\",\n\t\t\t{},\n\t\t\t{ innerHTML: text, for: id }\n\t\t)\n\n\t\tlabel.setAttribute(\"for\", id)\n\n\t\tcont.appendChild(checkbox)\n\t\tcont.appendChild(label)\n\t\tcont.addEventListener(\"click\", ev => {\n\t\t\tif (ev.target != checkbox) {\n\t\t\t\tcheckbox.click()\n\t\t\t\tif (isChecked) {\n\t\t\t\t\tcheckbox.checked = isChecked()\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\treturn cont\n\t}\n\tstatic addClassToElements(className, elements) {\n\t\telements.forEach(element => DomHelper.addClassToElement(className, element))\n\t}\n\tstatic addClassToElement(className, element) {\n\t\tif (!element.classList.contains(className)) {\n\t\t\telement.classList.add(className)\n\t\t}\n\t}\n\tstatic createFlexContainer() {\n\t\treturn DomHelper.createElement(\"div\", {}, { className: \"flexContainer\" })\n\t}\n\tstatic addToFlexContainer(el) {\n\t\tlet cont = DomHelper.createFlexContainer()\n\t\tcont.appendChild(el)\n\t\treturn cont\n\t}\n\tstatic appendChildren(parent, children) {\n\t\tchildren.forEach(child => parent.appendChild(child))\n\t}\n\tstatic createButtonGroup(vertical) {\n\t\treturn vertical\n\t\t\t? DomHelper.createElement(\n\t\t\t\t\"div\",\n\t\t\t\t{ justifyContent: \"space-around\" },\n\t\t\t\t{ className: \"btn-group btn-group-vertical\", role: \"group\" }\n\t\t\t)\n\t\t\t: DomHelper.createElement(\n\t\t\t\t\"div\",\n\t\t\t\t{ justifyContent: \"space-around\" },\n\t\t\t\t{ className: \"btn-group\", role: \"group\" }\n\t\t\t)\n\t}\n\tstatic createFileInput(text, callback) {\n\t\tlet customFile = DomHelper.createElement(\n\t\t\t\"label\",\n\t\t\t{},\n\t\t\t{ className: \"btn btn-default btn-file\" }\n\t\t)\n\t\tcustomFile.appendChild(DomHelper.getGlyphicon(\"folder-open\"))\n\t\tcustomFile.innerHTML += \" \" + text\n\t\tlet inp = DomHelper.createElement(\n\t\t\t\"input\",\n\t\t\t{ display: \"none\" },\n\t\t\t{ type: \"file\" }\n\t\t)\n\n\t\tcustomFile.appendChild(inp)\n\t\tinp.onchange = callback\n\n\t\treturn customFile\n\t}\n\tstatic getDivider() {\n\t\treturn DomHelper.createElement(\"div\", {}, { className: \"divider\" })\n\t}\n\tstatic createButton(id, onClick) {\n\t\tlet bt = DomHelper.createElement(\n\t\t\t\"button\",\n\t\t\t{},\n\t\t\t{\n\t\t\t\tid: id,\n\t\t\t\ttype: \"button\",\n\t\t\t\tclassName: \"btn btn-default\",\n\t\t\t\tonclick: onClick\n\t\t\t}\n\t\t)\n\t\tbt.appendChild(DomHelper.getButtonSelectLine())\n\t\treturn bt\n\t}\n\tstatic createTextButton(id, text, onClick) {\n\t\tlet bt = DomHelper.createElement(\n\t\t\t\"button\",\n\t\t\t{},\n\t\t\t{\n\t\t\t\tid: id,\n\t\t\t\ttype: \"button\",\n\t\t\t\tclassName: \"btn btn-default\",\n\t\t\t\tonclick: onClick,\n\t\t\t\tinnerHTML: text\n\t\t\t}\n\t\t)\n\t\tbt.appendChild(DomHelper.getButtonSelectLine())\n\t\treturn bt\n\t}\n\tstatic getButtonSelectLine() {\n\t\treturn DomHelper.createDivWithClass(\"btn-select-line\")\n\t}\n\tstatic createElement(tag, styles, attributes) {\n\t\ttag = tag || \"div\"\n\t\tattributes = attributes || {}\n\t\tstyles = styles || {}\n\t\tlet el = document.createElement(tag)\n\t\tObject.keys(attributes).forEach(attr => {\n\t\t\tel[attr] = attributes[attr]\n\t\t})\n\t\tObject.keys(styles).forEach(style => {\n\t\t\tel.style[style] = styles[style]\n\t\t})\n\t\treturn el\n\t}\n\n\tstatic createInputSelect(title, items, callback) {\n\t\tlet selectBox = DomHelper.createDivWithId(title)\n\t\tlet label = DomHelper.createElementWithClass(\n\t\t\t\"inputSelectLabel\",\n\t\t\t\"label\",\n\t\t\t{},\n\t\t\t{ innerHTML: title }\n\t\t)\n\t\tselectBox.appendChild(label)\n\t\tlet selectTag = DomHelper.createElementWithIdAndClass(\n\t\t\ttitle,\n\t\t\t\"inputSelect\",\n\t\t\t\"select\"\n\t\t)\n\t\tselectBox.appendChild(selectTag)\n\t\titems.forEach((item, index) => {\n\t\t\tlet option = DomHelper.createElement(\n\t\t\t\t\"option\",\n\t\t\t\t{},\n\t\t\t\t{\n\t\t\t\t\tvalue: item,\n\t\t\t\t\tinnerHTML: item\n\t\t\t\t}\n\t\t\t)\n\t\t\tselectTag.appendChild(option)\n\t\t})\n\t\tselectBox.addEventListener(\"change\", ev => {\n\t\t\tcallback(selectTag.value)\n\t\t})\n\t\treturn selectBox\n\t}\n\n\tstatic createColorPickerGlyphiconText(glyph, text, startColor, onChange) {\n\t\tlet pickrEl = null\n\t\tlet pickrElCont = DomHelper.createDiv()\n\t\tlet glyphBut = DomHelper.createGlyphiconTextButton(\n\t\t\t\"colorPickerGlyph\" + glyph + replaceAllString(text, \" \", \"_\"),\n\t\t\tglyph,\n\t\t\ttext,\n\t\t\t() => {\n\t\t\t\tpickrEl.show()\n\t\t\t}\n\t\t)\n\n\t\tglyphBut.appendChild(pickrElCont)\n\n\t\tpickrEl = Pickr.create({\n\t\t\tel: pickrElCont,\n\t\t\ttheme: \"nano\",\n\t\t\tuseAsButton: true,\n\t\t\tcomponents: {\n\t\t\t\thue: true,\n\t\t\t\tpreview: true,\n\t\t\t\topacity: true,\n\t\t\t\tinteraction: {\n\t\t\t\t\tinput: true\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tlet getGlyphEl = () =>\n\t\t\tglyphBut.querySelector(\n\t\t\t\t\"#colorPickerGlyph\" +\n\t\t\t\tglyph +\n\t\t\t\treplaceAllString(text, \" \", \"_\") +\n\t\t\t\t\" .glyphicon\"\n\t\t\t)\n\n\t\tpickrEl.on(\"init\", () => {\n\t\t\tpickrEl.setColor(startColor)\n\t\t\tgetGlyphEl().style.color = startColor\n\t\t})\n\t\tpickrEl.on(\"change\", color => {\n\t\t\tlet colorString = color.toRGBA().toString()\n\t\t\tgetGlyphEl().style.color = colorString\n\t\t\tonChange(colorString)\n\t\t})\n\t\treturn glyphBut\n\t}\n\t/**\n\t *\n\t * @param {String} text\n\t * @param {String} startColor\n\t * @param {Function} onChange  A color string of the newly selected color will be passed as argument\n\t */\n\tstatic createColorPickerText(text, startColor, onChange) {\n\t\tlet cont = DomHelper.createDivWithClass(\"settingContainer\")\n\n\t\tlet label = DomHelper.createDivWithClass(\n\t\t\t\"colorLabel settingLabel\",\n\t\t\t{},\n\t\t\t{ innerHTML: text }\n\t\t)\n\n\t\tlet colorButtonContainer = DomHelper.createDivWithClass(\n\t\t\t\"colorPickerButtonContainer\"\n\t\t)\n\t\tlet colorButton = DomHelper.createDivWithClass(\"colorPickerButton\")\n\t\tcolorButtonContainer.appendChild(colorButton)\n\n\t\tcont.appendChild(label)\n\t\tcont.appendChild(colorButtonContainer)\n\n\t\tlet colorPicker = Pickr.create({\n\t\t\tel: colorButton,\n\t\t\ttheme: \"nano\",\n\t\t\tdefaultRepresentation: \"RGBA\",\n\t\t\tcomponents: {\n\t\t\t\thue: true,\n\t\t\t\tpreview: true,\n\t\t\t\topacity: true,\n\t\t\t\tinteraction: {\n\t\t\t\t\tinput: true\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\tcolorButtonContainer.style.backgroundColor = startColor\n\t\tcont.onclick = () => colorPicker.show()\n\t\tcolorPicker.on(\"init\", () => {\n\t\t\tcolorPicker.show()\n\t\t\tcolorPicker.setColor(startColor)\n\t\t\tcolorPicker.hide()\n\t\t})\n\t\tcolorPicker.on(\"change\", color => {\n\t\t\tcolorButtonContainer.style.backgroundColor = colorPicker\n\t\t\t\t.getColor()\n\t\t\t\t.toRGBA()\n\t\t\t\t.toString()\n\t\t\tonChange(color.toRGBA().toString())\n\t\t})\n\n\t\treturn cont\n\t}\n\n\tstatic removeClassFromElement(className, element) {\n\t\tif (element.classList.contains(className)) {\n\t\t\telement.classList.remove(className);\n\t\t}\n\t}\n\n}\n","export class ElementHighlight {\n\tconstructor(element, time) {\n\t\ttime = time || 1500\n\n\t\telement.classList.add(\"highlighted\")\n\t\twindow.setTimeout(() => {\n\t\t\telement.classList.remove(\"highlighted\")\n\t\t}, time)\n\t}\n}\n","import { DomHelper } from \"./DomHelper.js\"\nclass Loader {\n\tstartLoad() {\n\t\tthis.getLoadingDiv().style.display = \"block\"\n\t\tthis.getLoadingText().innerHTML = \"Loading\"\n\t\tthis.loading = true\n\t\tthis.loadAnimation()\n\t}\n\tstopLoad() {\n\t\tthis.getLoadingDiv().style.display = \"none\"\n\t\tthis.loading = false\n\t}\n\tloadAnimation() {\n\t\tlet currentText = this.getLoadingText().innerHTML\n\t\tcurrentText = currentText.replace(\"...\", \" ..\")\n\t\tcurrentText = currentText.replace(\" ..\", \". .\")\n\t\tcurrentText = currentText.replace(\". .\", \".. \")\n\t\tcurrentText = currentText.replace(\".. \", \"...\")\n\t\tthis.getLoadingText().innerHTML = currentText\n\t\tif (this.loading) {\n\t\t\twindow.requestAnimationFrame(this.loadAnimation.bind(this))\n\t\t}\n\t}\n\tsetLoadMessage(msg) {\n\t\tthis.getLoadingText().innerHTML = msg + \"...\"\n\t}\n\tgetLoadingText() {\n\t\tif (!this.loadingText) {\n\t\t\tthis.loadingText = DomHelper.createElement(\"p\")\n\t\t\tthis.getLoadingDiv().appendChild(this.loadingText)\n\t\t}\n\t\treturn this.loadingText\n\t}\n\tgetLoadingDiv() {\n\t\tif (!this.loadingDiv) {\n\t\t\tthis.loadingDiv = DomHelper.createDivWithIdAndClass(\n\t\t\t\t\"loadingDiv\",\n\t\t\t\t\"fullscreen\"\n\t\t\t)\n\n\t\t\tlet spinner = DomHelper.createSpinner()\n\t\t\tthis.loadingDiv.appendChild(spinner)\n\t\t\tdocument.body.appendChild(this.loadingDiv)\n\t\t}\n\t\treturn this.loadingDiv\n\t}\n}\n\nexport const getLoader = () => loaderSingleton\nconst loaderSingleton = new Loader()\n","import { DomHelper } from \"./DomHelper.js\"\n\nexport class Notification {\n\tstatic create(message, time) {\n\t\ttime = time || 1500\n\t\tlet notifEl = DomHelper.createDivWithClass(\"notification\")\n\t\tnotifEl.innerHTML = message\n\t\tdocument.body.appendChild(notifEl)\n\t\twindow.setTimeout(() => document.body.removeChild(notifEl), time)\n\t}\n}\n","import { resetSettingsToDefault } from \"../settings/Settings.js\"\nimport { DomHelper } from \"../ui/DomHelper.js\"\nimport { groupArrayBy } from \"../Util.js\"\n/**\n * Class to create the DOM Elements used to manipulate the settings.\n */\nexport class SettingUI {\n\tconstructor() {\n\t\tthis.tabs = {}\n\t\tthis.activeTab = \"General\"\n\t\tthis.mainDiv = null\n\t}\n\t/**\n\t * returns a div with the following structure:\n\t * \t.settingsContainer {\n\t * \t\t.settingsTabButtonContainer {\n\t * \t\t\t.settingsTabButton ...\n\t * \t\t}\n\t * \t\t.settingsContentContainer {\n\t * \t\t\t.settingContainer ...\n\t * \t\t}\n\t * }\n\t *\n\t * @param {Object} settings  as defined in DefaultSettings.js\n\t */\n\tgetSettingsDiv(settings) {\n\t\tif (this.mainDiv == null) {\n\t\t\tthis.mainDiv = DomHelper.createDivWithClass(\"settingsContainer\")\n\t\t\tthis.mainDiv.appendChild(this.getTabDiv(Object.keys(settings)))\n\t\t\tthis.mainDiv.appendChild(this.getContentDiv(settings))\n\n\t\t\tthis.mainDiv\n\t\t\t\t.querySelectorAll(\".settingsTabContent\" + this.activeTab)\n\t\t\t\t.forEach(el => (el.style.display = \"block\"))\n\t\t\tthis.mainDiv\n\t\t\t\t.querySelector(\"#\" + this.activeTab + \"Tab\")\n\t\t\t\t.classList.add(\"selected\")\n\t\t}\n\t\treturn this.mainDiv\n\t}\n\tgetTabDiv(tabIds) {\n\t\tlet cont = DomHelper.createDivWithClass(\"settingsTabButtonContainer\")\n\t\ttabIds.forEach(tabId => {\n\t\t\tlet tabButton = this.createTabButton(tabId)\n\t\t\ttabButton.classList.add(\"settingsTabButton\")\n\t\t\tcont.appendChild(tabButton)\n\t\t})\n\t\treturn cont\n\t}\n\tcreateTabButton(tabName) {\n\t\tlet butEl = DomHelper.createTextButton(tabName + \"Tab\", tabName, ev => {\n\t\t\tdocument\n\t\t\t\t.querySelectorAll(\".settingsTabButton\")\n\t\t\t\t.forEach(el => el.classList.remove(\"selected\"))\n\n\t\t\tbutEl.classList.add(\"selected\")\n\n\t\t\tdocument\n\t\t\t\t.querySelectorAll(\".settingsTabContentContainer\")\n\t\t\t\t.forEach(settingEl => (settingEl.style.display = \"none\"))\n\t\t\tdocument\n\t\t\t\t.querySelectorAll(\".settingsTabContent\" + tabName)\n\t\t\t\t.forEach(settingEl => (settingEl.style.display = \"block\"))\n\t\t})\n\t\treturn butEl\n\t}\n\tgetContentDiv(settings) {\n\t\tlet cont = DomHelper.createDivWithClass(\"settingsContentContainer\")\n\t\tObject.keys(settings).forEach(tabId => {\n\t\t\tcont.appendChild(this.createSettingTabContentDiv(tabId, settings[tabId]))\n\t\t})\n\n\t\treturn cont\n\t}\n\tcreateSettingTabContentDiv(tabName, settingGroups) {\n\t\tlet cont = DomHelper.createDivWithClass(\n\t\t\t\"settingsTabContentContainer settingsTabContent\" + tabName\n\t\t)\n\t\tObject.keys(settingGroups).forEach(groupId => {\n\t\t\tcont.appendChild(\n\t\t\t\tthis.createSettingGroupDiv(groupId, settingGroups[groupId])\n\t\t\t)\n\t\t})\n\t\tif (tabName == \"General\") {\n\t\t\tcont.appendChild(this.getResetButton())\n\t\t}\n\t\treturn cont\n\t}\n\tgetResetButton() {\n\t\tlet but = DomHelper.createTextButton(\n\t\t\t\"settingsResetButton\",\n\t\t\t\"Reset to defaults\",\n\t\t\t() => {\n\t\t\t\tresetSettingsToDefault()\n\t\t\t}\n\t\t)\n\t\treturn but\n\t}\n\tcreateSettingGroupDiv(categoryName, settingsList) {\n\t\tlet cont = DomHelper.createDivWithClass(\n\t\t\t\"settingsGroupContainer innerMenuContDiv\"\n\t\t)\n\t\tif (categoryName != \"default\") {\n\t\t\tcont.classList.add(\"collapsed\")\n\t\t\tlet label = DomHelper.createElementWithClass(\n\t\t\t\t\"settingsGroupLabel clickableTitle\",\n\t\t\t\t\"div\",\n\t\t\t\t{},\n\t\t\t\t{ innerHTML: categoryName + \": \" }\n\t\t\t)\n\t\t\tcont.appendChild(label)\n\n\t\t\tlet collapsed = true\n\t\t\tlet glyph = DomHelper.getGlyphicon(\"plus\")\n\t\t\tglyph.classList.add(\"collapserGlyphSpan\")\n\t\t\tlabel.appendChild(glyph)\n\n\t\t\tlabel.onclick = () => {\n\t\t\t\tif (collapsed == true) {\n\t\t\t\t\tcollapsed = false\n\t\t\t\t\tcont.classList.remove(\"collapsed\")\n\t\t\t\t\tDomHelper.replaceGlyph(label, \"plus\", \"minus\")\n\t\t\t\t} else {\n\t\t\t\t\tcollapsed = true\n\t\t\t\t\tcont.classList.add(\"collapsed\")\n\t\t\t\t\tDomHelper.replaceGlyph(label, \"minus\", \"plus\")\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tsettingsList.forEach(setting =>\n\t\t\tcont.appendChild(SettingUI.createSettingDiv(setting))\n\t\t)\n\t\treturn cont\n\t}\n\tstatic createSettingDiv(setting) {\n\t\tswitch (setting.type) {\n\t\t\tcase \"list\":\n\t\t\t\treturn SettingUI.createListSettingDiv(setting)\n\t\t\tcase \"checkbox\":\n\t\t\t\treturn SettingUI.createCheckboxSettingDiv(setting)\n\t\t\tcase \"slider\":\n\t\t\t\treturn SettingUI.createSliderSettingDiv(setting)\n\t\t\tcase \"color\":\n\t\t\t\treturn SettingUI.createColorSettingDiv(setting)\n\t\t}\n\t}\n\tstatic createListSettingDiv(setting) {\n\t\tlet el = DomHelper.createInputSelect(\n\t\t\tsetting.label,\n\t\t\tsetting.list,\n\t\t\tsetting.onChange\n\t\t)\n\t\tel.classList.add(\"settingContainer\")\n\t\treturn el\n\t}\n\tstatic createCheckboxSettingDiv(setting) {\n\t\tlet el = DomHelper.createCheckbox(\n\t\t\tsetting.label,\n\t\t\tsetting.onChange,\n\t\t\tsetting.value,\n\t\t\tsetting.isChecked\n\t\t)\n\t\tel.classList.add(\"settingContainer\")\n\t\treturn el\n\t}\n\tstatic createSliderSettingDiv(setting) {\n\t\tlet el = DomHelper.createSliderWithLabelAndField(\n\t\t\tsetting.id + \"Slider\",\n\t\t\tsetting.label,\n\t\t\tparseFloat(setting.value),\n\t\t\tsetting.min,\n\t\t\tsetting.max,\n\t\t\tsetting.step,\n\t\t\tsetting.onChange\n\t\t).container\n\t\tel.classList.add(\"settingContainer\")\n\t\treturn el\n\t}\n\tstatic createColorSettingDiv(setting) {\n\t\treturn DomHelper.createColorPickerText(\n\t\t\tsetting.label,\n\t\t\tsetting.value,\n\t\t\tsetting.onChange\n\t\t)\n\t}\n}\n","import { FileLoader } from \"../player/FileLoader.js\"\nimport { getCurrentSong, getPlayer } from \"../player/Player.js\"\nimport { replaceAllString } from \"../Util.js\"\nimport { DomHelper } from \"./DomHelper.js\"\nimport { getLoader } from \"./Loader.js\"\n\nexport class SongUI {\n\tconstructor() {\n\t\tthis.songDivs = {}\n\t\tthis.wrapper = DomHelper.createDiv()\n\t}\n\tgetDivContent() {\n\t\treturn this.wrapper\n\t}\n\tsetExampleSongs(jsonSongs) {\n\t\tjsonSongs.forEach(exampleSongJson => {\n\t\t\tlet songDivObj = createUnloadedSongDiv(exampleSongJson)\n\t\t\tthis.songDivs[exampleSongJson.fileName] = songDivObj\n\t\t\tthis.wrapper.appendChild(songDivObj.wrapper)\n\t\t})\n\t}\n\tnewSongCallback(song) {\n\t\tif (!this.songDivs.hasOwnProperty(song.fileName)) {\n\t\t\tlet songDivObj = createLoadedSongDiv(song)\n\t\t\tthis.songDivs[song.fileName] = songDivObj\n\t\t\tthis.wrapper.appendChild(songDivObj.wrapper)\n\t\t} else {\n\t\t\tthis.replaceNowLoadedSongDiv(song)\n\t\t}\n\t\tDomHelper.removeClassFromElementsSelector(\".songButton\", \"selected\")\n\t\tDomHelper.addClassToElement(\"selected\", song.div)\n\t}\n\treplaceNowLoadedSongDiv(song) {\n\t\tsong.div = this.songDivs[song.fileName].button\n\t\tsong.div.onclick = () => loadedButtonClickCallback(song)\n\t}\n}\nfunction createUnloadedSongDiv(songJson) {\n\tlet wrapper = DomHelper.createDivWithIdAndClass(\n\t\t\"songWrap\" + replaceAllString(songJson.fileName, \" \", \"_\"),\n\t\t\"innerMenuContDiv\"\n\t)\n\tlet button = createUnloadedSongButton(songJson)\n\n\twrapper.appendChild(button)\n\n\treturn {\n\t\twrapper: wrapper,\n\t\tname: songJson.name,\n\t\tbutton: button\n\t}\n}\n\nfunction createLoadedSongDiv(song) {\n\tlet wrapper = DomHelper.createDivWithIdAndClass(\n\t\t\"songWrap\" + replaceAllString(song.fileName, \" \", \"_\"),\n\t\t\"innerMenuContDiv\"\n\t)\n\tlet button = createLoadedSongButton(song)\n\tsong.div = button\n\twrapper.appendChild(song.div)\n\n\treturn {\n\t\twrapper: wrapper,\n\t\tname: song.name,\n\t\tbutton: button\n\t}\n}\nfunction createUnloadedSongButton(songJson) {\n\tlet but = DomHelper.createTextButton(\n\t\t\"song\" + replaceAllString(songJson.fileName, \" \", \"_\"),\n\t\tsongJson.name,\n\t\t() => {\n\t\t\tgetLoader().setLoadMessage(\"Downloading Song\")\n\t\t\tFileLoader.loadSongFromURL(songJson.url, respone => {\n\t\t\t\tgetPlayer().loadSong(respone, songJson.fileName, songJson.name)\n\t\t\t})\n\t\t}\n\t)\n\tbut.classList.add(\"songButton\")\n\treturn but\n}\nfunction createLoadedSongButton(song) {\n\tlet but = DomHelper.createTextButton(\n\t\t\"song\" + replaceAllString(song.fileName, \" \", \"_\"),\n\t\tsong.name,\n\t\t() => loadedButtonClickCallback(song)\n\t)\n\tbut.classList.add(\"songButton\")\n\treturn but\n}\n\nfunction loadedButtonClickCallback(song) {\n\tlet currentSong = getCurrentSong()\n\tif (currentSong != song) {\n\t\tDomHelper.removeClassFromElementsSelector(\".songButton\", \"selected\")\n\t\tDomHelper.addClassToElement(\"selected\", song.div)\n\t\tgetPlayer().setSong(song)\n\t}\n}\n","import { DomHelper } from \"./DomHelper.js\"\nimport {\n\tgetTrack,\n\tgetTrackColor,\n\tgetTracks,\n\tsetTrackColor\n} from \"../player/Tracks.js\"\nimport { getPlayer } from \"../player/Player.js\"\nimport { SettingUI } from \"./SettingUI.js\"\nimport { ElementHighlight } from \"./ElementHighlight.js\"\nimport { Notification } from \"./Notification.js\"\nimport { getMidiHandler } from \"../MidiInputHandler.js\"\n\n/**\n *  Handles creation of the Track-Divs that give control over volume, diplay, color...\n *\n *  Directly changes values in the track objects\n */\n\nexport const createTrackDivs = () => {\n\treturn Object.keys(getTracks()).map(trackId => createTrackDiv(trackId))\n}\n\nexport const createTrackDiv = trackId => {\n\tconst trackObj = getTrack(trackId)\n\tlet volumeSlider,\n\t\tmuteButton,\n\t\thideButton,\n\t\ttrackName,\n\t\tinstrumentName,\n\t\trequireToPlayAlongButton,\n\t\tclickableTitleDiv\n\n\tlet trackDiv = DomHelper.createDivWithIdAndClass(\n\t\t\"trackDiv\" + trackId,\n\t\t\"innerMenuContDiv settingGroupContainer\",\n\t\t{\n\t\t\tborderLeft: \"5px solid \" + getTrackColor(trackId).white\n\t\t}\n\t)\n\n\tclickableTitleDiv = DomHelper.createDivWithClass(\"clickableTitle\")\n\tlet collapsed = instrumentName == \"percussion\" ? true : false\n\n\tlet glyph = DomHelper.getGlyphicon(collapsed ? \"plus\" : \"minus\")\n\tglyph.classList.add(\"collapserGlyphSpan\")\n\tclickableTitleDiv.appendChild(glyph)\n\n\tif (collapsed) {\n\t\ttrackDiv.classList.add(\"collapsed\")\n\t}\n\tclickableTitleDiv.onclick = () => {\n\t\tif (collapsed) {\n\t\t\tcollapsed = false\n\t\t\ttrackDiv.classList.remove(\"collapsed\")\n\t\t\tDomHelper.replaceGlyph(clickableTitleDiv, \"plus\", \"minus\")\n\t\t} else {\n\t\t\tcollapsed = true\n\t\t\ttrackDiv.classList.add(\"collapsed\")\n\t\t\tDomHelper.replaceGlyph(clickableTitleDiv, \"minus\", \"plus\")\n\t\t}\n\t}\n\n\t//Name\n\ttrackName = DomHelper.createDivWithIdAndClass(\n\t\t\"trackName\" + trackId,\n\t\t\"trackName\"\n\t)\n\ttrackName.innerHTML = trackObj.name || \"Track \" + trackId\n\n\t//Instrument\n\tlet currentInstrument = getPlayer().getCurrentTrackInstrument(trackObj.index)\n\tinstrumentName = DomHelper.createDivWithIdAndClass(\n\t\t\"instrumentName\" + trackObj.index,\n\t\t\"instrumentName\"\n\t)\n\tinstrumentName.innerHTML = currentInstrument\n\n\twindow.setInterval(\n\t\t() =>\n\t\t\t(instrumentName.innerHTML = getPlayer().getCurrentTrackInstrument(\n\t\t\t\ttrackObj.index\n\t\t\t)),\n\t\t2000\n\t)\n\n\tlet btnGrp = DomHelper.createButtonGroup(false)\n\n\t//Track Volume\n\tvolumeSlider = SettingUI.createSettingDiv({\n\t\ttype: \"slider\",\n\t\tlabel: \"Volume \",\n\t\tvalue: trackObj.volume,\n\t\tmin: 0,\n\t\tmax: 200,\n\t\tstep: 1,\n\t\tonChange: value => {\n\t\t\tif (trackObj.volume == 0 && value != 0) {\n\t\t\t\tmuteButton.querySelector(\"input\").checked = false\n\t\t\t} else if (trackObj.volume != 0 && value == 0) {\n\t\t\t\tmuteButton.querySelector(\"input\").checked = true\n\t\t\t}\n\t\t\ttrackObj.volume = parseInt(value)\n\t\t}\n\t})\n\t// DomHelper.createSliderWithLabel(\n\t// \t\"volume\" + trackId,\n\t// \t\"Volume\",\n\t// \ttrackObj.volume,\n\t// \t0,\n\t// \t200,\n\t// \t1,\n\t// \tev => {\n\t// \t\ttrackObj.volume = parseInt(ev.target.value)\n\t// \t}\n\t// )\n\n\t//Hide Track\n\thideButton = SettingUI.createSettingDiv({\n\t\ttype: \"checkbox\",\n\t\tlabel: \"Show track\",\n\t\tvalue: trackObj.draw,\n\t\tonChange: () => {\n\t\t\tif (trackObj.draw) {\n\t\t\t\ttrackObj.draw = false\n\t\t\t} else {\n\t\t\t\ttrackObj.draw = true\n\t\t\t}\n\t\t}\n\t})\n\n\t//Mute Track\n\tmuteButton = SettingUI.createSettingDiv({\n\t\ttype: \"checkbox\",\n\t\tlabel: \"Mute track\",\n\t\tvalue: trackObj.volume == 0,\n\t\tonChange: () => {\n\t\t\tlet volumeSliderInput = volumeSlider.querySelector(\"input\")\n\t\t\tlet volumeSliderLabel = volumeSlider.querySelector(\".sliderVal\")\n\t\t\tif (trackObj.volume == 0) {\n\t\t\t\tlet volume = trackObj.volumeAtMute || 100\n\t\t\t\ttrackObj.volume = volume\n\t\t\t\tvolumeSliderInput.value = volume\n\t\t\t\ttrackObj.volumeAtMute = 0\n\t\t\t\tvolumeSliderLabel.innerHTML = volume\n\t\t\t} else {\n\t\t\t\ttrackObj.volumeAtMute = trackObj.volume\n\t\t\t\ttrackObj.volume = 0\n\t\t\t\tvolumeSliderInput.value = 0\n\t\t\t\tvolumeSliderLabel.innerHTML = 0\n\t\t\t}\n\t\t}\n\t})\n\n\t//Require Track to play along\n\trequireToPlayAlongButton = SettingUI.createSettingDiv({\n\t\ttype: \"checkbox\",\n\t\tlabel: \"Require playalong\",\n\t\tvalue: trackObj.requiredToPlay,\n\t\tisChecked: () => trackObj.requiredToPlay,\n\t\tonChange: () => {\n\t\t\tconsole.log(trackObj.requiredToPlay)\n\t\t\tif (!trackObj.requiredToPlay) {\n\t\t\t\tif (!getMidiHandler().isInputActive()) {\n\t\t\t\t\tNotification.create(\n\t\t\t\t\t\t\"You have to choose a Midi Input Device to play along.\",\n\t\t\t\t\t\t5000\n\t\t\t\t\t)\n\t\t\t\t\tnew ElementHighlight(document.querySelector(\"#midiInput\"))\n\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\ttrackObj.requiredToPlay = true\n\t\t\t} else {\n\t\t\t\ttrackObj.requiredToPlay = false\n\t\t\t}\n\t\t}\n\t})\n\n\tlet colorPickerWhite = SettingUI.createColorSettingDiv({\n\t\ttype: \"color\",\n\t\tlabel: \"White note color\",\n\t\tvalue: getTrackColor(trackId).white,\n\t\tonChange: colorString => {\n\t\t\ttrackDiv.style.borderLeft = \"5px solid \" + colorString\n\t\t\tsetTrackColor(trackId, \"white\", colorString)\n\t\t}\n\t})\n\tlet colorPickerBlack = SettingUI.createColorSettingDiv({\n\t\ttype: \"color\",\n\t\tlabel: \"Black note color\",\n\t\tvalue: getTrackColor(trackId).black,\n\t\tonChange: colorString => setTrackColor(trackId, \"black\", colorString)\n\t})\n\n\tDomHelper.appendChildren(btnGrp, [\n\t\thideButton,\n\t\tmuteButton,\n\t\tDomHelper.getDivider(),\n\t\trequireToPlayAlongButton,\n\t\tDomHelper.getDivider(),\n\t\tcolorPickerWhite,\n\t\tcolorPickerBlack\n\t])\n\n\tDomHelper.appendChildren(clickableTitleDiv, [trackName, instrumentName])\n\tDomHelper.appendChildren(trackDiv, [\n\t\tclickableTitleDiv,\n\t\tDomHelper.getDivider(),\n\t\tvolumeSlider,\n\t\tbtnGrp\n\t])\n\n\treturn trackDiv\n}\n","import { DomHelper } from \"./DomHelper.js\"\nimport { getSettingsDiv } from \"../settings/Settings.js\"\nimport { ZoomUI } from \"./ZoomUI.js\"\nimport { createTrackDivs } from \"./TrackUI.js\"\nimport { getCurrentSong, getPlayer } from \"../player/Player.js\"\nimport { SongUI } from \"./SongUI.js\"\nimport { getMidiHandler } from \"../MidiInputHandler.js\"\nimport { MidiWriter } from 'midi-writer-js'\n\n/**\n * Contains all initiation, appending and manipulation of DOM-elements.\n * Callback-bindings for some events are created in  the constructor\n */\nexport class UI {\n\tconstructor(render, isMobile) {\n\t\tthis.isMobile = window.matchMedia(\n\t\t\t\"only screen and (max-width: 1600px)\"\n\t\t).matches\n\n\t\tthis.songUI = new SongUI()\n\t\t//add callbacks to the player\n\t\tgetPlayer().newSongCallbacks.push(this.newSongCallback.bind(this))\n\n\t\tdocument.body.addEventListener(\"mousemove\", this.mouseMoved.bind(this))\n\n\t\tthis.createControlMenu()\n\n\t\tthis.menuHeight = 200\n\n\t\tdocument\n\t\t\t.querySelectorAll(\".innerMenuDiv\")\n\t\t\t.forEach(\n\t\t\t\tel =>\n\t\t\t\t(el.style.height =\n\t\t\t\t\t\"calc(100% - \" + (this.getNavBar().clientHeight + 24) + \"px)\")\n\t\t\t)\n\n\t\tdocument.body.appendChild(new ZoomUI().getContentDiv(render))\n\t}\n\n\tsetExampleSongs(exampleSongsJson) {\n\t\tthis.songUI.setExampleSongs(exampleSongsJson)\n\t}\n\n\tfireInitialListeners() {\n\t\tthis.onMenuHeightChange(this.getNavBar().clientHeight)\n\t\twindow.setTimeout(\n\t\t\t() => this.onMenuHeightChange(this.getNavBar().clientHeight),\n\t\t\t500\n\t\t)\n\t}\n\n\tmouseMoved() {\n\t\tthis.getMinimizeButton().style.opacity = 1\n\t\tif (!this.fadingOutMinimizeButton) {\n\t\t\tthis.fadingOutMinimizeButton = true\n\t\t\twindow.setTimeout(() => {\n\t\t\t\tthis.getMinimizeButton().style.opacity = 0\n\t\t\t\tthis.fadingOutMinimizeButton = false\n\t\t\t}, 1000)\n\t\t}\n\t}\n\tcreateControlMenu() {\n\t\tlet topGroupsContainer = DomHelper.createDivWithClass(\"container\")\n\n\t\tlet fileGrp = this.getFileButtonGroup()\n\t\tlet songSpeedGrp = this.getSpeedButtonGroup()\n\t\tlet songControlGrp = this.getSongControlButtonGroup()\n\t\tlet volumeGrp = this.getVolumneButtonGroup()\n\t\tlet settingsGrpRight = this.getSettingsButtonGroup()\n\t\tlet trackGrp = this.getTracksButtonGroup()\n\n\t\tDomHelper.addClassToElements(\"align-middle\", [\n\t\t\tfileGrp,\n\t\t\tsongSpeedGrp,\n\t\t\tsongControlGrp,\n\t\t\tvolumeGrp,\n\t\t\ttrackGrp\n\t\t])\n\n\t\tlet leftTop = DomHelper.createElementWithClass(\"topContainer\")\n\t\tlet middleTop = DomHelper.createElementWithClass(\"topContainer\")\n\t\tlet rightTop = DomHelper.createElementWithClass(\"topContainer\")\n\n\t\tDomHelper.appendChildren(leftTop, [fileGrp, trackGrp])\n\t\tDomHelper.appendChildren(middleTop, [songControlGrp])\n\t\tDomHelper.appendChildren(rightTop, [\n\t\t\tsongSpeedGrp,\n\t\t\tvolumeGrp,\n\t\t\tsettingsGrpRight\n\t\t])\n\n\t\tDomHelper.appendChildren(topGroupsContainer, [leftTop, middleTop, rightTop])\n\t\tthis.getNavBar().appendChild(topGroupsContainer)\n\n\t\tlet minimizeButton = this.getMinimizeButton()\n\n\t\tlet innerMenuDivsContainer = DomHelper.createElementWithClass(\n\t\t\t\"innerMenuDivsContainer\"\n\t\t)\n\t\tDomHelper.appendChildren(innerMenuDivsContainer, [\n\t\t\tthis.getTrackMenuDiv(),\n\t\t\tthis.getLoadedSongsDiv(),\n\t\t\tthis.getSettingsDiv()\n\t\t])\n\n\t\tdocument.body.appendChild(minimizeButton)\n\t\tdocument.body.appendChild(this.getNavBar())\n\t\tdocument.body.appendChild(innerMenuDivsContainer)\n\n\t\tthis.createFileDragArea()\n\t}\n\n\tgetMinimizeButton() {\n\t\tif (!this.minimizeButton) {\n\t\t\tthis.minimizeButton = DomHelper.createGlyphiconButton(\n\t\t\t\t\"minimizeMenu\",\n\t\t\t\t\"chevron-up\",\n\t\t\t\t() => {\n\t\t\t\t\tif (!this.navMinimized) {\n\t\t\t\t\t\tthis.getNavBar().style.marginTop =\n\t\t\t\t\t\t\t\"-\" + this.getNavBar().clientHeight + \"px\"\n\t\t\t\t\t\tthis.navMinimized = true\n\t\t\t\t\t\tthis.minimizeButton\n\t\t\t\t\t\t\t.querySelector(\"span\")\n\t\t\t\t\t\t\t.classList.remove(\"glyphicon-chevron-up\")\n\t\t\t\t\t\tthis.minimizeButton\n\t\t\t\t\t\t\t.querySelector(\"span\")\n\t\t\t\t\t\t\t.classList.add(\"glyphicon-chevron-down\")\n\t\t\t\t\t\tthis.onMenuHeightChange(0)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.getNavBar().style.marginTop = \"0px\"\n\t\t\t\t\t\tthis.navMinimized = false\n\n\t\t\t\t\t\tthis.minimizeButton\n\t\t\t\t\t\t\t.querySelector(\"span\")\n\t\t\t\t\t\t\t.classList.add(\"glyphicon-chevron-up\")\n\t\t\t\t\t\tthis.minimizeButton\n\t\t\t\t\t\t\t.querySelector(\"span\")\n\t\t\t\t\t\t\t.classList.remove(\"glyphicon-chevron-down\")\n\t\t\t\t\t\tthis.onMenuHeightChange(this.getNavBar().clientHeight)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\t\t\tthis.minimizeButton.style.padding = \"0px\"\n\t\t\tthis.minimizeButton.style.fontSize = \"0.5em\"\n\t\t}\n\t\tlet navbarHeight = this.navMinimized ? 0 : this.getNavBar().clientHeight\n\t\tthis.minimizeButton.style.top = navbarHeight + 23 + \"px\"\n\t\treturn this.minimizeButton\n\t}\n\n\tgetSettingsButtonGroup() {\n\t\tlet settingsGrpRight = DomHelper.createButtonGroup(true)\n\t\tDomHelper.appendChildren(settingsGrpRight, [\n\t\t\tthis.getFullscreenButton(),\n\t\t\tthis.getSettingsButton()\n\t\t])\n\t\treturn settingsGrpRight\n\t}\n\tsetOnMenuHeightChange(func) {\n\t\tthis.onMenuHeightChange = func\n\t}\n\n\tgetTracksButtonGroup() {\n\t\tlet trackGrp = DomHelper.createButtonGroup(true)\n\t\tDomHelper.appendChildren(trackGrp, [\n\t\t\tthis.getTracksButton(),\n\t\t\tthis.getMidiSetupButton()\n\t\t\t// this.getChannelsButton()\n\t\t])\n\t\treturn trackGrp\n\t}\n\n\tgetVolumneButtonGroup() {\n\t\tlet volumeGrp = DomHelper.createButtonGroup(true)\n\t\tDomHelper.appendChildren(volumeGrp, [\n\t\t\tthis.getMainVolumeSlider().container,\n\t\t\tthis.getMuteButton()\n\t\t])\n\t\treturn volumeGrp\n\t}\n\n\tgetSongControlButtonGroup() {\n\t\tlet songControlGrp = DomHelper.createButtonGroup(false)\n\t\tDomHelper.appendChildren(songControlGrp, [\n\t\t\tthis.getPlayButton(),\n\t\t\tthis.getPauseButton(),\n\t\t\tthis.getStopButton(),\n\t\t\tthis.getRecordButton()\n\t\t])\n\t\treturn songControlGrp\n\t}\n\n\tgetSpeedButtonGroup() {\n\t\tlet songSpeedGrp = DomHelper.createButtonGroup(true)\n\t\tDomHelper.appendChildren(songSpeedGrp, [this.getSpeedDiv()])\n\t\treturn songSpeedGrp\n\t}\n\n\tgetFileButtonGroup() {\n\t\tlet fileGrp = DomHelper.createButtonGroup(true)\n\t\tDomHelper.appendChildren(fileGrp, [\n\t\t\tthis.getLoadSongButton(),\n\t\t\tthis.getLoadedSongsButton()\n\t\t])\n\t\treturn fileGrp\n\t}\n\n\tgetNavBar() {\n\t\tif (!this.navBar) {\n\t\t\tthis.navBar = DomHelper.createElement(\n\t\t\t\t\"nav\",\n\t\t\t\t{},\n\t\t\t\t{\n\t\t\t\t\tclassName: \"navbar navbar-wrapper\"\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t\treturn this.navBar\n\t}\n\tgetSettingsButton() {\n\t\tif (!this.settingsButton) {\n\t\t\tthis.settingsButton = DomHelper.createGlyphiconButton(\n\t\t\t\t\"settingsButton\",\n\t\t\t\t\"cog\",\n\t\t\t\t() => {\n\t\t\t\t\tif (this.settingsShown) {\n\t\t\t\t\t\tthis.hideSettings()\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.showSettings()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t\treturn this.settingsButton\n\t}\n\thideDiv(div) {\n\t\tdiv.classList.add(\"hidden\")\n\t\tdiv.classList.remove(\"unhidden\")\n\t}\n\tshowDiv(div) {\n\t\tdiv.classList.remove(\"hidden\")\n\t\tdiv.classList.add(\"unhidden\")\n\t}\n\thideSettings() {\n\t\tDomHelper.removeClass(\"selected\", this.getSettingsButton())\n\t\tthis.settingsShown = false\n\t\tthis.hideDiv(this.getSettingsDiv())\n\t}\n\tshowSettings() {\n\t\tthis.hideAllDialogs()\n\t\tDomHelper.addClassToElement(\"selected\", this.getSettingsButton())\n\t\tthis.settingsShown = true\n\t\tthis.showDiv(this.getSettingsDiv())\n\t}\n\tgetSettingsDiv() {\n\t\tif (!this.settingsDiv) {\n\t\t\tthis.settingsDiv = DomHelper.createDivWithIdAndClass(\n\t\t\t\t\"settingsDiv\",\n\t\t\t\t\"innerMenuDiv\"\n\t\t\t)\n\t\t\tthis.hideDiv(this.settingsDiv)\n\t\t\tthis.settingsDiv.appendChild(this.getSettingsContent())\n\t\t}\n\t\treturn this.settingsDiv\n\t}\n\tgetSettingsContent() {\n\t\treturn getSettingsDiv()\n\t}\n\tgetFullscreenButton() {\n\t\tif (!this.fullscreenButton) {\n\t\t\tthis.fullscreen = false\n\t\t\tlet clickFullscreen = () => {\n\t\t\t\tif (!this.fullscreen) {\n\t\t\t\t\tdocument.body.requestFullscreen()\n\t\t\t\t} else {\n\t\t\t\t\tdocument.exitFullscreen()\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.fullscreenButton = DomHelper.createGlyphiconButton(\n\t\t\t\t\"fullscreenButton\",\n\t\t\t\t\"fullscreen\",\n\t\t\t\tclickFullscreen.bind(this)\n\t\t\t)\n\t\t\tlet fullscreenSwitch = () => (this.fullscreen = !this.fullscreen)\n\t\t\tdocument.body.onfullscreenchange = fullscreenSwitch.bind(this)\n\t\t}\n\t\treturn this.fullscreenButton\n\t}\n\tgetLoadSongButton() {\n\t\tif (!this.loadSongButton) {\n\t\t\tthis.loadSongButton = DomHelper.createFileInput(\n\t\t\t\t\"Upload Midi\",\n\t\t\t\tthis.handleFileSelect.bind(this)\n\t\t\t)\n\t\t\tDomHelper.addClassToElement(\"floatSpanLeft\", this.loadSongButton)\n\t\t}\n\t\treturn this.loadSongButton\n\t}\n\tgetLoadedSongsButton() {\n\t\tif (!this.loadedSongsButton) {\n\t\t\tthis.loadedSongsButton = DomHelper.createGlyphiconTextButton(\n\t\t\t\t\"mute\",\n\t\t\t\t\"music\",\n\t\t\t\t\"Loaded Songs\",\n\t\t\t\tev => {\n\t\t\t\t\tif (this.loadedSongsShown) {\n\t\t\t\t\t\tthis.hideLoadedSongsDiv()\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.showLoadedSongsDiv()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t\treturn this.loadedSongsButton\n\t}\n\tshowLoadedSongsDiv() {\n\t\tthis.hideAllDialogs()\n\t\tDomHelper.addClassToElement(\"selected\", this.loadedSongsButton)\n\t\tthis.loadedSongsShown = true\n\t\tthis.showDiv(this.getLoadedSongsDiv())\n\t}\n\n\thideLoadedSongsDiv() {\n\t\tDomHelper.removeClass(\"selected\", this.loadedSongsButton)\n\t\tthis.loadedSongsShown = false\n\t\tthis.hideDiv(this.getLoadedSongsDiv())\n\t}\n\n\tgetLoadedSongsDiv() {\n\t\tif (!this.loadedSongsDiv) {\n\t\t\tthis.loadedSongsDiv = DomHelper.createDivWithClass(\"innerMenuDiv\")\n\t\t\tthis.loadedSongsDiv.appendChild(this.songUI.getDivContent())\n\t\t\tthis.hideDiv(this.loadedSongsDiv)\n\t\t}\n\t\treturn this.loadedSongsDiv\n\t}\n\n\tcreateFileDragArea() {\n\t\tlet dragArea = DomHelper.createElement(\n\t\t\t\"div\",\n\t\t\t{\n\t\t\t\tposition: \"absolute\",\n\t\t\t\ttop: 0,\n\t\t\t\tleft: 0,\n\t\t\t\twidth: \"100%\",\n\t\t\t\theight: \"100%\",\n\t\t\t\tzIndex: 10000,\n\t\t\t\tvisibility: \"hidden\",\n\t\t\t\topacity: \"0\",\n\t\t\t\tbackgroundColor: \"rgba(0,0,0,0.2)\",\n\t\t\t\ttransition: \"all 0.2s ease-out\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tdraggable: \"true\"\n\t\t\t}\n\t\t)\n\n\t\tlet dragAreaText = DomHelper.createDivWithClass(\n\t\t\t\"centeredBigText\",\n\t\t\t{\n\t\t\t\tmarginTop: \"25%\",\n\t\t\t\tfontSize: \"35px\",\n\t\t\t\tcolor: \"rgba(225,225,225,0.8)\"\n\t\t\t},\n\t\t\t{ innerHTML: \"Drop Midi File anywhere!\" }\n\t\t)\n\t\tdragArea.appendChild(dragAreaText)\n\n\t\tdragArea.ondrop = ev => {\n\t\t\tdragArea.style.backgroundColor = \"rgba(0,0,0,0)\"\n\t\t\tthis.handleDragDropFileSelect(ev)\n\t\t}\n\t\tlet lastTarget\n\t\twindow.ondragenter = ev => {\n\t\t\tev.preventDefault()\n\t\t\tlastTarget = ev.target\n\t\t\tdragArea.style.visibility = \"\"\n\t\t\tdragArea.style.opacity = \"1\"\n\t\t}\n\t\twindow.ondragleave = ev => {\n\t\t\tif (ev.target === lastTarget || ev.target === document) {\n\t\t\t\tdragArea.style.visibility = \"hidden\"\n\t\t\t\tdragArea.style.opacity = \"0\"\n\t\t\t}\n\t\t}\n\t\twindow.ondragover = ev => ev.preventDefault()\n\t\twindow.ondrop = ev => {\n\t\t\tev.preventDefault()\n\t\t\tdragArea.style.visibility = \"hidden\"\n\t\t\tdragArea.style.opacity = \"0\"\n\t\t\tthis.handleDragDropFileSelect(ev)\n\t\t}\n\t\tdocument.body.appendChild(dragArea)\n\t}\n\thandleDragOverFile(ev) {\n\t\tthis.createFileDragArea().style\n\t}\n\thandleDragDropFileSelect(ev) {\n\t\tif (ev.dataTransfer.items) {\n\t\t\t// Use DataTransferItemList interface to access the file(s)\n\t\t\tif (ev.dataTransfer.items.length > 0) {\n\t\t\t\tif (ev.dataTransfer.items[0].kind === \"file\") {\n\t\t\t\t\tvar file = ev.dataTransfer.items[0].getAsFile()\n\t\t\t\t\tthis.readFile(file)\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// Use DataTransfer interface to access the file(s)\n\t\t\tif (ev.dataTransfer.files.length > 0) {\n\t\t\t\tvar file = ev.dataTransfer.files[0]\n\t\t\t\tthis.readFile(file)\n\t\t\t}\n\t\t}\n\t}\n\thandleFileSelect(evt) {\n\t\tvar files = evt.target.files\n\t\tfor (var i = 0, f; (f = files[i]); i++) {\n\t\t\tthis.readFile(f)\n\t\t}\n\t}\n\treadFile(file) {\n\t\tlet reader = new FileReader()\n\t\tlet fileName = file.name\n\t\treader.onload = function (theFile) {\n\t\t\tgetPlayer().loadSong(reader.result, fileName)\n\t\t}.bind(this)\n\t\treader.readAsDataURL(file)\n\t}\n\n\tgetSpeedDiv() {\n\t\tif (!this.speedDiv) {\n\t\t\tthis.speedDiv = DomHelper.createDivWithClass(\n\t\t\t\t\"btn-group btn-group-vertical\"\n\t\t\t)\n\t\t\tthis.speedDiv.appendChild(this.getSpeedUpButton())\n\t\t\tthis.speedDiv.appendChild(this.getSpeedDisplayField())\n\t\t\tthis.speedDiv.appendChild(this.getSpeedDownButton())\n\t\t}\n\t\treturn this.speedDiv\n\t}\n\tgetSpeedUpButton() {\n\t\tif (!this.speedUpButton) {\n\t\t\tthis.speedUpButton = DomHelper.createGlyphiconButton(\n\t\t\t\t\"speedUp\",\n\t\t\t\t\"triangle-top\",\n\t\t\t\tev => {\n\t\t\t\t\tgetPlayer().increaseSpeed(0.05)\n\t\t\t\t\tthis.updateSpeed()\n\t\t\t\t}\n\t\t\t)\n\t\t\tthis.speedUpButton.className += \" btn-xs forcedThinButton\"\n\t\t}\n\t\treturn this.speedUpButton\n\t}\n\tupdateSpeed() {\n\t\tthis.getSpeedDisplayField().value =\n\t\t\tMath.round(getPlayer().playbackSpeed * 100) + \"%\"\n\t}\n\tgetSpeedDisplayField() {\n\t\tif (!this.speedDisplay) {\n\t\t\tthis.speedDisplay = DomHelper.createTextInput(\n\t\t\t\tev => {\n\t\t\t\t\tlet newVal = Math.max(1, Math.min(1000, parseInt(ev.target.value)))\n\t\t\t\t\tif (!isNaN(newVal)) {\n\t\t\t\t\t\tev.target.value = newVal + \"%\"\n\t\t\t\t\t\tgetPlayer().playbackSpeed = newVal / 100\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfloat: \"none\",\n\t\t\t\t\ttextAlign: \"center\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tvalue: Math.floor(getPlayer().playbackSpeed * 100) + \"%\",\n\t\t\t\t\tclassName: \"forcedThinButton\",\n\t\t\t\t\ttype: \"text\"\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t\treturn this.speedDisplay\n\t}\n\tgetSpeedDownButton() {\n\t\tif (!this.speedDownButton) {\n\t\t\tthis.speedDownButton = DomHelper.createGlyphiconButton(\n\t\t\t\t\"speedUp\",\n\t\t\t\t\"triangle-bottom\",\n\t\t\t\tev => {\n\t\t\t\t\tgetPlayer().increaseSpeed(-0.05)\n\t\t\t\t\tthis.updateSpeed()\n\t\t\t\t}\n\t\t\t)\n\t\t\tthis.speedDownButton.className += \" btn-xs forcedThinButton\"\n\t\t}\n\t\treturn this.speedDownButton\n\t}\n\tgetTracksButton() {\n\t\tif (!this.tracksButton) {\n\t\t\tthis.tracksButton = DomHelper.createGlyphiconTextButton(\n\t\t\t\t\"tracks\",\n\t\t\t\t\"align-justify\",\n\t\t\t\t\"Tracks\",\n\t\t\t\tev => {\n\t\t\t\t\tif (this.tracksShown) {\n\t\t\t\t\t\tthis.hideTracks()\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.showTracks()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\t\t\tDomHelper.addClassToElement(\"floatSpanLeft\", this.tracksButton)\n\t\t}\n\t\treturn this.tracksButton\n\t}\n\thideTracks() {\n\t\tDomHelper.removeClass(\"selected\", this.tracksButton)\n\t\tthis.tracksShown = false\n\t\tthis.hideDiv(this.getTrackMenuDiv())\n\t}\n\n\tshowTracks() {\n\t\tthis.hideAllDialogs()\n\t\tDomHelper.addClassToElement(\"selected\", this.tracksButton)\n\t\tthis.tracksShown = true\n\t\t//instrument of a track could theoretically change during the song.\n\t\tdocument\n\t\t\t.querySelectorAll(\".instrumentName\")\n\t\t\t.forEach(\n\t\t\t\tel =>\n\t\t\t\t(el.innerHTML = getPlayer().getCurrentTrackInstrument(\n\t\t\t\t\tel.id.split(\"instrumentName\")[1]\n\t\t\t\t))\n\t\t\t)\n\t\tthis.showDiv(this.getTrackMenuDiv())\n\t}\n\n\tgetMidiSetupButton() {\n\t\tif (!this.midiSetupButton) {\n\t\t\tthis.midiSetupButton = DomHelper.createGlyphiconTextButton(\n\t\t\t\t\"midiSetup\",\n\t\t\t\t\"tower\",\n\t\t\t\t\"Midi-Setup\",\n\t\t\t\tev => {\n\t\t\t\t\tif (this.midiSetupDialogShown) {\n\t\t\t\t\t\tthis.hideMidiSetupDialog()\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.showMidiSetupDialog()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\t\t\tDomHelper.addClassToElement(\"floatSpanLeft\", this.midiSetupButton)\n\t\t}\n\t\treturn this.midiSetupButton\n\t}\n\thideMidiSetupDialog() {\n\t\tDomHelper.removeClass(\"selected\", this.midiSetupButton)\n\t\tthis.midiSetupDialogShown = false\n\t\tthis.hideDiv(this.getMidiSetupDialog())\n\t}\n\n\tshowMidiSetupDialog() {\n\t\tthis.hideAllDialogs()\n\t\tDomHelper.addClassToElement(\"selected\", this.midiSetupButton)\n\t\tthis.midiSetupDialogShown = true\n\n\t\tthis.showDiv(this.getMidiSetupDialog())\n\t}\n\tgetChannelsButton() {\n\t\tif (!this.channelsButton) {\n\t\t\tlet channelMenuDiv = this.getChannelMenuDiv()\n\t\t\tthis.channelsButton = DomHelper.createGlyphiconTextButton(\n\t\t\t\t\"channels\",\n\t\t\t\t\"align-justify\",\n\t\t\t\t\"Channels\",\n\t\t\t\tev => {\n\t\t\t\t\tif (this.channelsShown) {\n\t\t\t\t\t\tthis.hideChannels(channelMenuDiv)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.showChannels(channelMenuDiv)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\t\t\tDomHelper.addClassToElement(\"floatSpanLeft\", this.channelsButton)\n\n\t\t\t//Todo. decide what channel info to show...\n\t\t\tthis.channelsButton.style.opacity = 0\n\t\t}\n\t\treturn this.channelsButton\n\t}\n\tgetChannelMenuDiv() {\n\t\tif (!this.channelMenuDiv) {\n\t\t\tthis.channelMenuDiv = DomHelper.createDivWithId(\"trackContainerDiv\")\n\t\t\tthis.channelMenuDiv.style.display = \"none\"\n\t\t\tthis.channelMenuDiv.style.top = this.getNavBar().style.height\n\t\t\tdocument.body.appendChild(this.channelMenuDiv)\n\t\t}\n\t\treturn this.channelMenuDiv\n\t}\n\tshowChannels(channelMenuDiv) {\n\t\tif (this.tracksShown) {\n\t\t\tthis.hideTracks()\n\t\t}\n\t\tDomHelper.addClassToElement(\"selected\", this.tracksButton)\n\t\tthis.channelsShown = true\n\t\tchannelMenuDiv.style.display = \"block\"\n\t}\n\n\thideChannels(channelMenuDiv) {\n\t\tDomHelper.removeClass(\"selected\", this.tracksButton)\n\t\tthis.channelsShown = false\n\t\tchannelMenuDiv.style.display = \"none\"\n\t}\n\thideAllDialogs() {\n\t\t// this.hideChannels()\n\t\tthis.hideMidiSetupDialog()\n\t\tthis.hideSettings()\n\t\tthis.hideLoadedSongsDiv()\n\t\tthis.hideTracks()\n\t\tthis.hideLoadedSongsDiv()\n\t}\n\n\tgetMainVolumeSlider() {\n\t\tif (!this.mainVolumeSlider) {\n\t\t\tthis.mainVolumeSlider = DomHelper.createSliderWithLabel(\n\t\t\t\t\"volumeMain\",\n\t\t\t\t\"Master Volume\",\n\t\t\t\tgetPlayer().volume,\n\t\t\t\t0,\n\t\t\t\t100,\n\t\t\t\t1,\n\t\t\t\tev => {\n\t\t\t\t\tif (getPlayer().volume == 0 && parseInt(ev.target.value) != 0) {\n\t\t\t\t\t\tDomHelper.replaceGlyph(\n\t\t\t\t\t\t\tthis.getMuteButton(),\n\t\t\t\t\t\t\t\"volume-off\",\n\t\t\t\t\t\t\t\"volume-up\"\n\t\t\t\t\t\t)\n\t\t\t\t\t\t//this.getMuteButton().firstChild.className = this.muteButton.firstChild.className.replace('volume-off', 'volume-up')\n\t\t\t\t\t}\n\t\t\t\t\tgetPlayer().volume = parseInt(ev.target.value)\n\t\t\t\t\tif (getPlayer().volume <= 0) {\n\t\t\t\t\t\tDomHelper.replaceGlyph(\n\t\t\t\t\t\t\tthis.getMuteButton(),\n\t\t\t\t\t\t\t\"volume-up\",\n\t\t\t\t\t\t\t\"volume-off\"\n\t\t\t\t\t\t)\n\t\t\t\t\t} else if (this.getMuteButton().innerHTML == \"Unmute\") {\n\t\t\t\t\t\tDomHelper.replaceGlyph(\n\t\t\t\t\t\t\tthis.getMuteButton(),\n\t\t\t\t\t\t\t\"volume-off\",\n\t\t\t\t\t\t\t\"volume-up\"\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t\treturn this.mainVolumeSlider\n\t}\n\tgetMuteButton() {\n\t\tif (!this.muteButton) {\n\t\t\tthis.muteButton = DomHelper.createGlyphiconButton(\n\t\t\t\t\"mute\",\n\t\t\t\t\"volume-up\",\n\t\t\t\tev => {\n\t\t\t\t\tif (getPlayer().muted) {\n\t\t\t\t\t\tgetPlayer().muted = false\n\t\t\t\t\t\tif (!isNaN(getPlayer().mutedAtVolume)) {\n\t\t\t\t\t\t\tif (getPlayer().mutedAtVolume == 0) {\n\t\t\t\t\t\t\t\tgetPlayer().mutedAtVolume = 100\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.getMainVolumeSlider().slider.value = getPlayer().mutedAtVolume\n\t\t\t\t\t\t\tgetPlayer().volume = getPlayer().mutedAtVolume\n\t\t\t\t\t\t}\n\t\t\t\t\t\tDomHelper.replaceGlyph(this.muteButton, \"volume-off\", \"volume-up\")\n\t\t\t\t\t} else {\n\t\t\t\t\t\tgetPlayer().mutedAtVolume = getPlayer().volume\n\t\t\t\t\t\tgetPlayer().muted = true\n\t\t\t\t\t\tgetPlayer().volume = 0\n\t\t\t\t\t\tthis.getMainVolumeSlider().slider.value = 0\n\t\t\t\t\t\tDomHelper.replaceGlyph(this.muteButton, \"volume-up\", \"volume-off\")\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t\treturn this.muteButton\n\t}\n\tgetPlayButton() {\n\t\tif (!this.playButton) {\n\t\t\tthis.playButton = DomHelper.createGlyphiconButton(\n\t\t\t\t\"play\",\n\t\t\t\t\"play\",\n\t\t\t\tthis.clickPlay.bind(this)\n\t\t\t)\n\t\t\tDomHelper.addClassToElement(\"btn-lg\", this.playButton)\n\t\t}\n\t\treturn this.playButton\n\t}\n\tclickPlay(ev) {\n\t\tif (getPlayer().song) {\n\t\t\tDomHelper.removeClass(\"selected\", this.getPauseButton())\n\t\t\tgetPlayer().startPlay()\n\t\t\tDomHelper.addClassToElement(\"selected\", this.playButton)\n\t\t}\n\t}\n\tgetPauseButton() {\n\t\tif (!this.pauseButton) {\n\t\t\tthis.pauseButton = DomHelper.createGlyphiconButton(\n\t\t\t\t\"pause\",\n\t\t\t\t\"pause\",\n\t\t\t\tthis.clickPause.bind(this)\n\t\t\t)\n\t\t\tDomHelper.addClassToElement(\"btn-lg\", this.pauseButton)\n\t\t}\n\t\treturn this.pauseButton\n\t}\n\tclickPause(ev) {\n\t\tgetPlayer().pause()\n\t\tDomHelper.removeClass(\"selected\", this.getPlayButton())\n\n\t\tDomHelper.addClassToElement(\"selected\", this.pauseButton)\n\t}\n\n\tgetStopButton() {\n\t\tif (!this.stopButton) {\n\t\t\tthis.stopButton = DomHelper.createGlyphiconButton(\n\t\t\t\t\"stop\",\n\t\t\t\t\"stop\",\n\t\t\t\tthis.clickStop.bind(this)\n\t\t\t)\n\n\t\t\tDomHelper.addClassToElement(\"btn-lg\", this.stopButton)\n\t\t}\n\t\treturn this.stopButton\n\t}\n\tclickStop(ev) {\n\t\tgetPlayer().stop()\n\t\tDomHelper.removeClass(\"selected\", this.getPlayButton())\n\t\tDomHelper.removeClass(\"selected\", this.getPauseButton())\n\t}\n\tgetRecordButton() {\n\t\tif (!this.recordButton) {\n\t\t\tthis.recordButton = DomHelper.createGlyphiconButton(\n\t\t\t\t\"record\",\n\t\t\t\t\"record\",\n\t\t\t\tthis.clickRecord.bind(this)\n\t\t\t);\n\t\t\tDomHelper.addClassToElement(\"btn-lg\", this.recordButton);\n\t\t}\n\t\treturn this.recordButton;\n\t}\n\tclickRecord(ev) {\n\n\t}\n\tresetTrackMenuDiv() {\n\t\tlet menuDiv = this.getTrackMenuDiv()\n\t\tmenuDiv.innerHTML = \"\"\n\t\tDomHelper.appendChildren(menuDiv, createTrackDivs())\n\t}\n\tnewSongCallback() {\n\t\tthis.resetTrackMenuDiv()\n\t\tthis.clickStop()\n\t\tthis.songUI.newSongCallback(getCurrentSong())\n\t}\n\n\tgetMidiSetupDialog() {\n\t\tif (!this.midiSetupDialog) {\n\t\t\tthis.midiSetupDialog = DomHelper.createDivWithIdAndClass(\n\t\t\t\t\"midiSetupDialog\",\n\t\t\t\t\"centeredMenuDiv\"\n\t\t\t)\n\t\t\tthis.hideDiv(this.midiSetupDialog)\n\t\t\tdocument.body.appendChild(this.midiSetupDialog)\n\n\t\t\tlet text = DomHelper.createDivWithClass(\n\t\t\t\t\"centeredBigText\",\n\t\t\t\t{ marginTop: \"25px\" },\n\t\t\t\t{ innerHTML: \"Choose Midi device:\" }\n\t\t\t)\n\t\t\tthis.midiSetupDialog.appendChild(text)\n\n\t\t\tthis.inputDevicesDiv = DomHelper.createDivWithClass(\"halfContainer\")\n\t\t\tthis.outputDevicesDiv = DomHelper.createDivWithClass(\"halfContainer\")\n\t\t\tthis.midiSetupDialog.appendChild(this.inputDevicesDiv)\n\t\t\tthis.midiSetupDialog.appendChild(this.outputDevicesDiv)\n\t\t}\n\t\tlet inputDevices = getMidiHandler().getAvailableInputDevices()\n\t\tif (inputDevices.length == 0) {\n\t\t\tthis.inputDevicesDiv.innerHTML = \"No MIDI input-devices found.\"\n\t\t} else {\n\t\t\tthis.inputDevicesDiv.innerHTML = \"\"\n\t\t\tlet inputTitle = DomHelper.createElementWithClass(\"row\", \"span\")\n\t\t\tinputTitle.innerHTML = \"Input: \"\n\t\t\tthis.inputDevicesDiv.appendChild(inputTitle)\n\t\t\tinputDevices.forEach(device => {\n\t\t\t\tthis.inputDevicesDiv.appendChild(this.createDeviceDiv(device))\n\t\t\t})\n\t\t}\n\n\t\tlet outputDevices = getMidiHandler().getAvailableOutputDevices()\n\t\tif (outputDevices.length == 0) {\n\t\t\tthis.outputDevicesDiv.innerHTML = \"No MIDI output-devices found.\"\n\t\t} else {\n\t\t\tthis.outputDevicesDiv.innerHTML = \"\"\n\t\t\tlet outputTitle = DomHelper.createDivWithClass(\"row\")\n\t\t\toutputTitle.innerHTML = \"Output: \"\n\t\t\tthis.outputDevicesDiv.appendChild(outputTitle)\n\t\t\toutputDevices.forEach(device => {\n\t\t\t\tthis.outputDevicesDiv.appendChild(this.createOutputDeviceDiv(device))\n\t\t\t})\n\t\t}\n\t\tthis.midiSetupDialog.style.marginTop =\n\t\t\tthis.getNavBar().clientHeight + 25 + \"px\"\n\t\treturn this.midiSetupDialog\n\t}\n\tcreateDeviceDiv(device) {\n\t\tlet deviceDiv = DomHelper.createTextButton(\n\t\t\t\"midiInDeviceDiv\" + device.id,\n\t\t\tdevice.name,\n\t\t\t() => {\n\t\t\t\tif (deviceDiv.classList.contains(\"selected\")) {\n\t\t\t\t\tDomHelper.removeClass(\"selected\", deviceDiv)\n\t\t\t\t\tgetMidiHandler().clearInput(device)\n\t\t\t\t} else {\n\t\t\t\t\tDomHelper.addClassToElement(\"selected\", deviceDiv)\n\t\t\t\t\tgetMidiHandler().addInput(device)\n\t\t\t\t}\n\t\t\t}\n\t\t)\n\t\tif (getMidiHandler().isDeviceActive(device)) {\n\t\t\tDomHelper.addClassToElement(\"selected\", deviceDiv)\n\t\t}\n\n\t\treturn deviceDiv\n\t}\n\tcreateOutputDeviceDiv(device) {\n\t\tlet deviceDiv = DomHelper.createTextButton(\n\t\t\t\"midiOutDeviceDiv\" + device.id,\n\t\t\tdevice.name,\n\t\t\t() => {\n\t\t\t\tif (deviceDiv.classList.contains(\"selected\")) {\n\t\t\t\t\tDomHelper.removeClass(\"selected\", deviceDiv)\n\t\t\t\t\tgetMidiHandler().clearOutput(device)\n\t\t\t\t} else {\n\t\t\t\t\tDomHelper.addClassToElement(\"sele\tcted\", deviceDiv)\n\t\t\t\t\tgetMidiHandler().addOutput(device)\n\t\t\t\t}\n\t\t\t}\n\t\t)\n\t\tif (getMidiHandler().isOutputDeviceActive(device)) {\n\t\t\tdocument\n\t\t\t\t.querySelectorAll(\".midiOutDeviceDiv\")\n\t\t\t\t.forEach(el =>\n\t\t\t\t\tel.classList.contains(\"selected\")\n\t\t\t\t\t\t? el.classList.remove(\"selected\")\n\t\t\t\t\t\t: null\n\t\t\t\t)\n\t\t\tDomHelper.addClassToElement(\"selected\", deviceDiv)\n\t\t}\n\t\tdeviceDiv.classList.add(\"midiOutDeviceDiv\")\n\n\t\treturn deviceDiv\n\t}\n\tgetTrackMenuDiv() {\n\t\tif (!this.trackMenuDiv) {\n\t\t\tthis.trackMenuDiv = DomHelper.createDivWithIdAndClass(\n\t\t\t\t\"trackContainerDiv\",\n\t\t\t\t\"innerMenuDiv\"\n\t\t\t)\n\t\t\tthis.hideDiv(this.trackMenuDiv)\n\t\t}\n\t\treturn this.trackMenuDiv\n\t}\n}\n","import { getPlayer } from \"../player/Player.js\"\nimport { DomHelper } from \"./DomHelper.js\"\n\nexport class ZoomUI {\n\tconstructor() {}\n\tgetContentDiv(render) {\n\t\tlet cont = DomHelper.createDivWithClass(\"zoomGroup btn-group\")\n\t\t//zoomIn\n\t\tcont.appendChild(\n\t\t\tDomHelper.createGlyphiconButton(\"zoomInButton\", \"zoom-in\", () =>\n\t\t\t\trender.renderDimensions.zoomIn()\n\t\t\t)\n\t\t)\n\n\t\t//zoomOut\n\t\tcont.appendChild(\n\t\t\tDomHelper.createGlyphiconButton(\"zoomOutButton\", \"zoom-out\", () =>\n\t\t\t\trender.renderDimensions.zoomOut()\n\t\t\t)\n\t\t)\n\t\t//moveLeft\n\t\tcont.appendChild(\n\t\t\tDomHelper.createGlyphiconButton(\"moveViewLeftButton\", \"arrow-left\", () =>\n\t\t\t\trender.renderDimensions.moveViewLeft()\n\t\t\t)\n\t\t)\n\n\t\t//moveRight\n\t\tcont.appendChild(\n\t\t\tDomHelper.createGlyphiconButton(\"moveViewLeftButton\", \"arrow-right\", () =>\n\t\t\t\trender.renderDimensions.moveViewRight()\n\t\t\t)\n\t\t)\n\t\tconst fitSongButton = DomHelper.createTextButton(\n\t\t\t\"fitSongButton\",\n\t\t\t\"Fit Song\",\n\t\t\t() => render.renderDimensions.fitSong(getPlayer().song.getNoteRange())\n\t\t)\n\t\tfitSongButton.style.float = \"none\"\n\t\t//FitSong\n\t\tcont.appendChild(fitSongButton)\n\t\t//ShowAll\n\t\tcont.appendChild(\n\t\t\tDomHelper.createTextButton(\"showAllButton\", \"Show All\", () =>\n\t\t\t\trender.renderDimensions.showAll()\n\t\t\t)\n\t\t)\n\t\treturn cont\n\t}\n}\n","'use strict';\n\nvar tonalMidi = require('tonal-midi');\n\n/**\n * MIDI file format constants.\n * @return {Constants}\n */\nvar Constants = {\n  VERSION: '2.1.4',\n  HEADER_CHUNK_TYPE: [0x4d, 0x54, 0x68, 0x64],\n  // Mthd\n  HEADER_CHUNK_LENGTH: [0x00, 0x00, 0x00, 0x06],\n  // Header size for SMF\n  HEADER_CHUNK_FORMAT0: [0x00, 0x00],\n  // Midi Type 0 id\n  HEADER_CHUNK_FORMAT1: [0x00, 0x01],\n  // Midi Type 1 id\n  HEADER_CHUNK_DIVISION: [0x00, 0x80],\n  // Defaults to 128 ticks per beat\n  TRACK_CHUNK_TYPE: [0x4d, 0x54, 0x72, 0x6b],\n  // MTrk,\n  META_EVENT_ID: 0xFF,\n  META_TEXT_ID: 0x01,\n  META_COPYRIGHT_ID: 0x02,\n  META_TRACK_NAME_ID: 0x03,\n  META_INSTRUMENT_NAME_ID: 0x04,\n  META_LYRIC_ID: 0x05,\n  META_MARKER_ID: 0x06,\n  META_CUE_POINT: 0x07,\n  META_TEMPO_ID: 0x51,\n  META_SMTPE_OFFSET: 0x54,\n  META_TIME_SIGNATURE_ID: 0x58,\n  META_KEY_SIGNATURE_ID: 0x59,\n  META_END_OF_TRACK_ID: [0x2F, 0x00],\n  CONTROLLER_CHANGE_STATUS: 0xB0,\n  // includes channel number (0)\n  PITCH_BEND_STATUS: 0xE0 // includes channel number (0)\n\n};\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nfunction _wrapRegExp() {\n  _wrapRegExp = function (re, groups) {\n    return new BabelRegExp(re, void 0, groups);\n  };\n\n  var _super = RegExp.prototype,\n      _groups = new WeakMap();\n\n  function BabelRegExp(re, flags, groups) {\n    var _this = new RegExp(re, flags);\n\n    return _groups.set(_this, groups || _groups.get(re)), _setPrototypeOf(_this, BabelRegExp.prototype);\n  }\n\n  function buildGroups(result, re) {\n    var g = _groups.get(re);\n\n    return Object.keys(g).reduce(function (groups, name) {\n      return groups[name] = result[g[name]], groups;\n    }, Object.create(null));\n  }\n\n  return _inherits(BabelRegExp, RegExp), BabelRegExp.prototype.exec = function (str) {\n    var result = _super.exec.call(this, str);\n\n    return result && (result.groups = buildGroups(result, this)), result;\n  }, BabelRegExp.prototype[Symbol.replace] = function (str, substitution) {\n    if (\"string\" == typeof substitution) {\n      var groups = _groups.get(this);\n\n      return _super[Symbol.replace].call(this, str, substitution.replace(/\\$<([^>]+)>/g, function (_, name) {\n        return \"$\" + groups[name];\n      }));\n    }\n\n    if (\"function\" == typeof substitution) {\n      var _this = this;\n\n      return _super[Symbol.replace].call(this, str, function () {\n        var args = arguments;\n        return \"object\" != typeof args[args.length - 1] && (args = [].slice.call(args)).push(buildGroups(args, _this)), substitution.apply(this, args);\n      });\n    }\n\n    return _super[Symbol.replace].call(this, str, substitution);\n  }, _wrapRegExp.apply(this, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\n/**\n * Static utility functions used throughout the library.\n */\n\nvar Utils = /*#__PURE__*/function () {\n  function Utils() {\n    _classCallCheck(this, Utils);\n  }\n\n  _createClass(Utils, null, [{\n    key: \"version\",\n    value:\n    /**\n     * Gets MidiWriterJS version number.\n     * @return {string}\n     */\n    function version() {\n      return Constants.VERSION;\n    }\n    /**\n     * Convert a string to an array of bytes\n     * @param {string} string\n     * @return {array}\n     */\n\n  }, {\n    key: \"stringToBytes\",\n    value: function stringToBytes(string) {\n      return string.split('').map(function (_char) {\n        return _char.charCodeAt();\n      });\n    }\n    /**\n     * Checks if argument is a valid number.\n     * @param {*} n - Value to check\n     * @return {boolean}\n     */\n\n  }, {\n    key: \"isNumeric\",\n    value: function isNumeric(n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n    /**\n     * Returns the correct MIDI number for the specified pitch.\n     * Uses Tonal Midi - https://github.com/danigb/tonal/tree/master/packages/midi\n     * @param {(string|number)} pitch - 'C#4' or midi note code\n     * @param {string} middleC\n     * @return {number}\n     */\n\n  }, {\n    key: \"getPitch\",\n    value: function getPitch(pitch) {\n      var middleC = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'C4';\n      return 60 - tonalMidi.toMidi(middleC) + tonalMidi.toMidi(pitch);\n    }\n    /**\n     * Translates number of ticks to MIDI timestamp format, returning an array of\n     * hex strings with the time values. Midi has a very particular time to express time,\n     * take a good look at the spec before ever touching this function.\n     * Thanks to https://github.com/sergi/jsmidi\n     *\n     * @param {number} ticks - Number of ticks to be translated\n     * @return {array} - Bytes that form the MIDI time value\n     */\n\n  }, {\n    key: \"numberToVariableLength\",\n    value: function numberToVariableLength(ticks) {\n      ticks = Math.round(ticks);\n      var buffer = ticks & 0x7F; // eslint-disable-next-line no-cond-assign\n\n      while (ticks = ticks >> 7) {\n        buffer <<= 8;\n        buffer |= ticks & 0x7F | 0x80;\n      }\n\n      var bList = [];\n\n      while (true) {\n        bList.push(buffer & 0xff);\n        if (buffer & 0x80) buffer >>= 8;else {\n          break;\n        }\n      }\n\n      return bList;\n    }\n    /**\n     * Counts number of bytes in string\n     * @param {string} s\n     * @return {array}\n     */\n\n  }, {\n    key: \"stringByteCount\",\n    value: function stringByteCount(s) {\n      return encodeURI(s).split(/%..|./).length - 1;\n    }\n    /**\n     * Get an int from an array of bytes.\n     * @param {array} bytes\n     * @return {number}\n     */\n\n  }, {\n    key: \"numberFromBytes\",\n    value: function numberFromBytes(bytes) {\n      var hex = '';\n      var stringResult;\n      bytes.forEach(function (_byte) {\n        stringResult = _byte.toString(16); // ensure string is 2 chars\n\n        if (stringResult.length == 1) stringResult = \"0\" + stringResult;\n        hex += stringResult;\n      });\n      return parseInt(hex, 16);\n    }\n    /**\n     * Takes a number and splits it up into an array of bytes.  Can be padded by passing a number to bytesNeeded\n     * @param {number} number\n     * @param {number} bytesNeeded\n     * @return {array} - Array of bytes\n     */\n\n  }, {\n    key: \"numberToBytes\",\n    value: function numberToBytes(number, bytesNeeded) {\n      bytesNeeded = bytesNeeded || 1;\n      var hexString = number.toString(16);\n\n      if (hexString.length & 1) {\n        // Make sure hex string is even number of chars\n        hexString = '0' + hexString;\n      } // Split hex string into an array of two char elements\n\n\n      var hexArray = hexString.match(/.{2}/g); // Now parse them out as integers\n\n      hexArray = hexArray.map(function (item) {\n        return parseInt(item, 16);\n      }); // Prepend empty bytes if we don't have enough\n\n      if (hexArray.length < bytesNeeded) {\n        while (bytesNeeded - hexArray.length > 0) {\n          hexArray.unshift(0);\n        }\n      }\n\n      return hexArray;\n    }\n    /**\n     * Converts value to array if needed.\n     * @param {string} value\n     * @return {array}\n     */\n\n  }, {\n    key: \"toArray\",\n    value: function toArray(value) {\n      if (Array.isArray(value)) return value;\n      return [value];\n    }\n    /**\n     * Converts velocity to value 0-127\n     * @param {number} velocity - Velocity value 1-100\n     * @return {number}\n     */\n\n  }, {\n    key: \"convertVelocity\",\n    value: function convertVelocity(velocity) {\n      // Max passed value limited to 100\n      velocity = velocity > 100 ? 100 : velocity;\n      return Math.round(velocity / 100 * 127);\n    }\n    /**\n     * Gets the total number of ticks of a specified duration.\n     * Note: type=='note' defaults to quarter note, type==='rest' defaults to 0\n     * @param {(string|array)} duration\n     * @return {number}\n     */\n\n  }, {\n    key: \"getTickDuration\",\n    value: function getTickDuration(duration) {\n      if (Array.isArray(duration)) {\n        // Recursively execute this method for each item in the array and return the sum of tick durations.\n        return duration.map(function (value) {\n          return Utils.getTickDuration(value);\n        }).reduce(function (a, b) {\n          return a + b;\n        }, 0);\n      }\n\n      duration = duration.toString();\n\n      if (duration.toLowerCase().charAt(0) === 't') {\n        // If duration starts with 't' then the number that follows is an explicit tick count\n        var ticks = parseInt(duration.substring(1));\n\n        if (isNaN(ticks) || ticks < 0) {\n          throw new Error(duration + ' is not a valid duration.');\n        }\n\n        return ticks;\n      } // Need to apply duration here.  Quarter note == Constants.HEADER_CHUNK_DIVISION\n\n\n      var quarterTicks = Utils.numberFromBytes(Constants.HEADER_CHUNK_DIVISION);\n      var tickDuration = quarterTicks * Utils.getDurationMultiplier(duration);\n      return Utils.getRoundedIfClose(tickDuration);\n    }\n    /**\n     * Due to rounding errors in JavaScript engines,\n     * it's safe to round when we're very close to the actual tick number\n     *\n     * @static\n     * @param {number} tick\n     * @return {number}\n     */\n\n  }, {\n    key: \"getRoundedIfClose\",\n    value: function getRoundedIfClose(tick) {\n      var roundedTick = Math.round(tick);\n      return Math.abs(roundedTick - tick) < 0.000001 ? roundedTick : tick;\n    }\n    /**\n     * Due to low precision of MIDI,\n     * we need to keep track of rounding errors in deltas.\n     * This function will calculate the rounding error for a given duration.\n     *\n     * @static\n     * @param {number} tick\n     * @return {number}\n     */\n\n  }, {\n    key: \"getPrecisionLoss\",\n    value: function getPrecisionLoss(tick) {\n      var roundedTick = Math.round(tick);\n      return roundedTick - tick;\n    }\n    /**\n     * Gets what to multiple ticks/quarter note by to get the specified duration.\n     * Note: type=='note' defaults to quarter note, type==='rest' defaults to 0\n     * @param {string} duration\n     * @return {number}\n     */\n\n  }, {\n    key: \"getDurationMultiplier\",\n    value: function getDurationMultiplier(duration) {\n      // Need to apply duration here.\n      // Quarter note == Constants.HEADER_CHUNK_DIVISION ticks.\n      if (duration === '0') return 0;\n      var match = duration.match( /*#__PURE__*/_wrapRegExp(/^(d+)?(\\d+)(?:t(\\d*))?/, {\n        dotted: 1,\n        base: 2,\n        tuplet: 3\n      }));\n\n      if (match) {\n        var base = Number(match.groups.base); // 1 or any power of two:\n\n        var isValidBase = base === 1 || (base & base - 1) === 0;\n\n        if (isValidBase) {\n          // how much faster or slower is this note compared to a quarter?\n          var ratio = base / 4;\n          var durationInQuarters = 1 / ratio;\n          var _match$groups = match.groups,\n              dotted = _match$groups.dotted,\n              tuplet = _match$groups.tuplet;\n\n          if (dotted) {\n            var thisManyDots = dotted.length;\n            var divisor = Math.pow(2, thisManyDots);\n            durationInQuarters = durationInQuarters + durationInQuarters * ((divisor - 1) / divisor);\n          }\n\n          if (typeof tuplet === 'string') {\n            var fitInto = durationInQuarters * 2; // default to triplet:\n\n            var thisManyNotes = Number(tuplet || '3');\n            durationInQuarters = fitInto / thisManyNotes;\n          }\n\n          return durationInQuarters;\n        }\n      }\n\n      throw new Error(duration + ' is not a valid duration.');\n    }\n  }]);\n\n  return Utils;\n}();\n\n/**\n * Holds all data for a \"controller change\" MIDI event\n * @param {object} fields {controllerNumber: integer, controllerValue: integer, delta: integer}\n * @return {ControllerChangeEvent}\n */\n\nvar ControllerChangeEvent = /*#__PURE__*/_createClass(function ControllerChangeEvent(fields) {\n  _classCallCheck(this, ControllerChangeEvent);\n\n  // Set default fields\n  fields = Object.assign({\n    delta: 0x00\n  }, fields);\n  this.type = 'controller'; // delta time defaults to 0.\n\n  this.data = Utils.numberToVariableLength(fields.delta).concat(Constants.CONTROLLER_CHANGE_STATUS, fields.controllerNumber, fields.controllerValue);\n});\n\n/**\n * Object representation of a cue point meta event.\n * @param {object} fields {text: string, delta: integer}\n * @return {CuePointEvent}\n */\n\nvar CuePointEvent = /*#__PURE__*/_createClass(function CuePointEvent(fields) {\n  _classCallCheck(this, CuePointEvent);\n\n  // Set default fields\n  fields = Object.assign({\n    delta: 0x00\n  }, fields);\n  this.type = 'cue-point';\n  var textBytes = Utils.stringToBytes(fields.text); // Start with zero time delta\n\n  this.data = Utils.numberToVariableLength(fields.delta).concat(Constants.META_EVENT_ID, Constants.META_CUE_POINT, Utils.numberToVariableLength(textBytes.length), // Size\n  textBytes // Text\n  );\n});\n\n/**\n * Object representation of a end track meta event.\n * @param {object} fields {delta: integer}\n * @return {EndTrackEvent}\n */\n\nvar EndTrackEvent = /*#__PURE__*/_createClass(function EndTrackEvent(fields) {\n  _classCallCheck(this, EndTrackEvent);\n\n  // Set default fields\n  fields = Object.assign({\n    delta: 0x00\n  }, fields);\n  this.type = 'end-track'; // Start with zero time delta\n\n  this.data = Utils.numberToVariableLength(fields.delta).concat(Constants.META_EVENT_ID, Constants.META_END_OF_TRACK_ID);\n});\n\n/**\n * Object representation of an instrument name meta event.\n * @param {object} fields {text: string, delta: integer}\n * @return {InstrumentNameEvent}\n */\n\nvar InstrumentNameEvent = /*#__PURE__*/_createClass(function InstrumentNameEvent(fields) {\n  _classCallCheck(this, InstrumentNameEvent);\n\n  // Set default fields\n  fields = Object.assign({\n    delta: 0x00\n  }, fields);\n  this.type = 'instrument-name';\n  var textBytes = Utils.stringToBytes(fields.text); // Start with zero time delta\n\n  this.data = Utils.numberToVariableLength(fields.delta).concat(Constants.META_EVENT_ID, Constants.META_INSTRUMENT_NAME_ID, Utils.numberToVariableLength(textBytes.length), // Size\n  textBytes // Instrument name\n  );\n});\n\n/**\n * Object representation of a key signature meta event.\n * @return {KeySignatureEvent}\n */\n\nvar KeySignatureEvent = /*#__PURE__*/_createClass(function KeySignatureEvent(sf, mi) {\n  _classCallCheck(this, KeySignatureEvent);\n\n  this.type = 'key-signature';\n  var mode = mi || 0;\n  sf = sf || 0; //\tFunction called with string notation\n\n  if (typeof mi === 'undefined') {\n    var fifths = [['Cb', 'Gb', 'Db', 'Ab', 'Eb', 'Bb', 'F', 'C', 'G', 'D', 'A', 'E', 'B', 'F#', 'C#'], ['ab', 'eb', 'bb', 'f', 'c', 'g', 'd', 'a', 'e', 'b', 'f#', 'c#', 'g#', 'd#', 'a#']];\n    var _sflen = sf.length;\n    var note = sf || 'C';\n    if (sf[0] === sf[0].toLowerCase()) mode = 1;\n\n    if (_sflen > 1) {\n      switch (sf.charAt(_sflen - 1)) {\n        case 'm':\n          mode = 1;\n          note = sf.charAt(0).toLowerCase();\n          note = note.concat(sf.substring(1, _sflen - 1));\n          break;\n\n        case '-':\n          mode = 1;\n          note = sf.charAt(0).toLowerCase();\n          note = note.concat(sf.substring(1, _sflen - 1));\n          break;\n\n        case 'M':\n          mode = 0;\n          note = sf.charAt(0).toUpperCase();\n          note = note.concat(sf.substring(1, _sflen - 1));\n          break;\n\n        case '+':\n          mode = 0;\n          note = sf.charAt(0).toUpperCase();\n          note = note.concat(sf.substring(1, _sflen - 1));\n          break;\n      }\n    }\n\n    var fifthindex = fifths[mode].indexOf(note);\n    sf = fifthindex === -1 ? 0 : fifthindex - 7;\n  } // Start with zero time delta\n\n\n  this.data = Utils.numberToVariableLength(0x00).concat(Constants.META_EVENT_ID, Constants.META_KEY_SIGNATURE_ID, [0x02], // Size\n  Utils.numberToBytes(sf, 1), // Number of sharp or flats ( < 0 flat; > 0 sharp)\n  Utils.numberToBytes(mode, 1) // Mode: 0 major, 1 minor\n  );\n});\n\n/**\n * Object representation of a lyric meta event.\n * @param {object} fields {text: string, delta: integer}\n * @return {LyricEvent}\n */\n\nvar LyricEvent = /*#__PURE__*/_createClass(function LyricEvent(fields) {\n  _classCallCheck(this, LyricEvent);\n\n  // Set default fields\n  fields = Object.assign({\n    delta: 0x00\n  }, fields);\n  this.type = 'lyric';\n  var textBytes = Utils.stringToBytes(fields.text); // Start with zero time delta\n\n  this.data = Utils.numberToVariableLength(fields.delta).concat(Constants.META_EVENT_ID, Constants.META_LYRIC_ID, Utils.numberToVariableLength(textBytes.length), // Size\n  textBytes // Text\n  );\n});\n\n/**\n * Object representation of a marker meta event.\n * @param {object} fields {text: string, delta: integer}\n * @return {MarkerEvent}\n */\n\nvar MarkerEvent = /*#__PURE__*/_createClass(function MarkerEvent(fields) {\n  _classCallCheck(this, MarkerEvent);\n\n  // Set default fields\n  fields = Object.assign({\n    delta: 0x00\n  }, fields);\n  this.type = 'marker';\n  var textBytes = Utils.stringToBytes(fields.text); // Start with zero time delta\n\n  this.data = Utils.numberToVariableLength(fields.delta).concat(Constants.META_EVENT_ID, Constants.META_MARKER_ID, Utils.numberToVariableLength(textBytes.length), // Size\n  textBytes // Text\n  );\n});\n\n/**\n * Holds all data for a \"note on\" MIDI event\n * @param {object} fields {data: []}\n * @return {NoteOnEvent}\n */\n\nvar NoteOnEvent = /*#__PURE__*/function () {\n  function NoteOnEvent(fields) {\n    _classCallCheck(this, NoteOnEvent);\n\n    // Set default fields\n    fields = Object.assign({\n      channel: 1,\n      startTick: null,\n      velocity: 50,\n      wait: 0\n    }, fields);\n    this.type = 'note-on';\n    this.channel = fields.channel;\n    this.pitch = fields.pitch;\n    this.wait = fields.wait;\n    this.velocity = fields.velocity;\n    this.startTick = fields.startTick;\n    this.tick = null;\n    this.delta = null;\n    this.data = fields.data;\n  }\n  /**\n   * Builds int array for this event.\n   * @param {Track} track - parent track\n   * @return {NoteOnEvent}\n   */\n\n\n  _createClass(NoteOnEvent, [{\n    key: \"buildData\",\n    value: function buildData(track, precisionDelta) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      this.data = []; // Explicitly defined startTick event\n\n      if (this.startTick) {\n        this.tick = Utils.getRoundedIfClose(this.startTick); // If this is the first event in the track then use event's starting tick as delta.\n\n        if (track.tickPointer == 0) {\n          this.delta = this.tick;\n        }\n      } else {\n        this.delta = Utils.getTickDuration(this.wait);\n        this.tick = Utils.getRoundedIfClose(track.tickPointer + this.delta);\n      }\n\n      this.deltaWithPrecisionCorrection = Utils.getRoundedIfClose(this.delta - precisionDelta);\n      this.data = Utils.numberToVariableLength(this.deltaWithPrecisionCorrection).concat(this.getStatusByte(), Utils.getPitch(this.pitch, options.middleC), Utils.convertVelocity(this.velocity));\n      return this;\n    }\n    /**\n     * Gets the note on status code based on the selected channel. 0x9{0-F}\n     * Note on at channel 0 is 0x90 (144)\n     * 0 = Ch 1\n     * @return {number}\n     */\n\n  }, {\n    key: \"getStatusByte\",\n    value: function getStatusByte() {\n      return 144 + this.channel - 1;\n    }\n  }]);\n\n  return NoteOnEvent;\n}();\n\n/**\n * Holds all data for a \"note off\" MIDI event\n * @param {object} fields {data: []}\n * @return {NoteOffEvent}\n */\n\nvar NoteOffEvent = /*#__PURE__*/function () {\n  function NoteOffEvent(fields) {\n    _classCallCheck(this, NoteOffEvent);\n\n    // Set default fields\n    fields = Object.assign({\n      channel: 1,\n      velocity: 50,\n      tick: null\n    }, fields);\n    this.type = 'note-off';\n    this.channel = fields.channel;\n    this.pitch = fields.pitch;\n    this.duration = fields.duration;\n    this.velocity = fields.velocity;\n    this.tick = fields.tick;\n    this.delta = Utils.getTickDuration(this.duration);\n    this.data = fields.data;\n  }\n  /**\n   * Builds int array for this event.\n   * @param {Track} track - parent track\n   * @return {NoteOffEvent}\n   */\n\n\n  _createClass(NoteOffEvent, [{\n    key: \"buildData\",\n    value: function buildData(track, precisionDelta) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      if (this.tick === null) {\n        this.tick = Utils.getRoundedIfClose(this.delta + track.tickPointer);\n      }\n\n      this.deltaWithPrecisionCorrection = Utils.getRoundedIfClose(this.delta - precisionDelta);\n      this.data = Utils.numberToVariableLength(this.deltaWithPrecisionCorrection).concat(this.getStatusByte(), Utils.getPitch(this.pitch, options.middleC), Utils.convertVelocity(this.velocity));\n      return this;\n    }\n    /**\n     * Gets the note off status code based on the selected channel. 0x8{0-F}\n     * Note off at channel 0 is 0x80 (128)\n     * 0 = Ch 1\n     * @return {number}\n     */\n\n  }, {\n    key: \"getStatusByte\",\n    value: function getStatusByte() {\n      return 128 + this.channel - 1;\n    }\n  }]);\n\n  return NoteOffEvent;\n}();\n\n/**\n * Wrapper for noteOnEvent/noteOffEvent objects that builds both events.\n * @param {object} fields - {pitch: '[C4]', duration: '4', wait: '4', velocity: 1-100}\n * @return {NoteEvent}\n */\n\nvar NoteEvent = /*#__PURE__*/function () {\n  function NoteEvent(fields) {\n    _classCallCheck(this, NoteEvent);\n\n    // Set default fields\n    fields = Object.assign({\n      channel: 1,\n      repeat: 1,\n      sequential: false,\n      startTick: null,\n      velocity: 50,\n      wait: 0\n    }, fields);\n    this.data = [];\n    this.type = 'note';\n    this.pitch = Utils.toArray(fields.pitch);\n    this.channel = fields.channel;\n    this.duration = fields.duration;\n    this.grace = fields.grace;\n    this.repeat = fields.repeat;\n    this.sequential = fields.sequential;\n    this.startTick = fields.startTick;\n    this.velocity = fields.velocity;\n    this.wait = fields.wait;\n    this.tickDuration = Utils.getTickDuration(this.duration);\n    this.restDuration = Utils.getTickDuration(this.wait);\n    this.events = []; // Hold actual NoteOn/NoteOff events\n  }\n  /**\n   * Builds int array for this event.\n   * @return {NoteEvent}\n   */\n\n\n  _createClass(NoteEvent, [{\n    key: \"buildData\",\n    value: function buildData() {\n      var _this = this;\n\n      // Reset data array\n      this.data = []; // Apply grace note(s) and subtract ticks (currently 1 tick per grace note) from tickDuration so net value is the same\n\n      if (this.grace) {\n        var graceDuration = 1;\n        this.grace = Utils.toArray(this.grace);\n        this.grace.forEach(function () {\n          var noteEvent = new NoteEvent({\n            pitch: _this.grace,\n            duration: 'T' + graceDuration\n          });\n          _this.data = _this.data.concat(noteEvent.data);\n        });\n      } // fields.pitch could be an array of pitches.\n      // If so create note events for each and apply the same duration.\n      // By default this is a chord if it's an array of notes that requires one NoteOnEvent.\n      // If this.sequential === true then it's a sequential string of notes that requires separate NoteOnEvents.\n\n\n      if (!this.sequential) {\n        // Handle repeat\n        for (var j = 0; j < this.repeat; j++) {\n          // Note on\n          this.pitch.forEach(function (p, i) {\n            var noteOnNew;\n\n            if (i == 0) {\n              noteOnNew = new NoteOnEvent({\n                channel: _this.channel,\n                wait: _this.wait,\n                velocity: _this.velocity,\n                pitch: p,\n                startTick: _this.startTick\n              });\n            } else {\n              // Running status (can ommit the note on status)\n              //noteOn = new NoteOnEvent({data: [0, Utils.getPitch(p), Utils.convertVelocity(this.velocity)]});\n              noteOnNew = new NoteOnEvent({\n                channel: _this.channel,\n                wait: 0,\n                velocity: _this.velocity,\n                pitch: p,\n                startTick: _this.startTick\n              });\n            }\n\n            _this.events.push(noteOnNew);\n          }); // Note off\n\n          this.pitch.forEach(function (p, i) {\n            var noteOffNew;\n\n            if (i == 0) {\n              //noteOff = new NoteOffEvent({data: Utils.numberToVariableLength(tickDuration).concat(this.getNoteOffStatus(), Utils.getPitch(p), Utils.convertVelocity(this.velocity))});\n              noteOffNew = new NoteOffEvent({\n                channel: _this.channel,\n                duration: _this.duration,\n                velocity: _this.velocity,\n                pitch: p,\n                tick: _this.startTick !== null ? Utils.getTickDuration(_this.duration) + _this.startTick : null\n              });\n            } else {\n              // Running status (can ommit the note off status)\n              //noteOff = new NoteOffEvent({data: [0, Utils.getPitch(p), Utils.convertVelocity(this.velocity)]});\n              noteOffNew = new NoteOffEvent({\n                channel: _this.channel,\n                duration: 0,\n                velocity: _this.velocity,\n                pitch: p,\n                tick: _this.startTick !== null ? Utils.getTickDuration(_this.duration) + _this.startTick : null\n              });\n            }\n\n            _this.events.push(noteOffNew);\n          });\n        }\n      } else {\n        // Handle repeat\n        for (var _j = 0; _j < this.repeat; _j++) {\n          this.pitch.forEach(function (p, i) {\n            var noteOnNew = new NoteOnEvent({\n              channel: _this.channel,\n              wait: i > 0 ? 0 : _this.wait,\n              // wait only applies to first note in repetition\n              velocity: _this.velocity,\n              pitch: p,\n              startTick: _this.startTick\n            });\n            var noteOffNew = new NoteOffEvent({\n              channel: _this.channel,\n              duration: _this.duration,\n              velocity: _this.velocity,\n              pitch: p\n            });\n\n            _this.events.push(noteOnNew, noteOffNew);\n          });\n        }\n      }\n\n      return this;\n    }\n  }]);\n\n  return NoteEvent;\n}();\n\n/**\n * Holds all data for a \"Pitch Bend\" MIDI event\n * [ -1.0, 0, 1.0 ] ->  [ 0, 8192, 16383]\n * @param {object} fields { bend : float, channel : int, delta: int }\n * @return {PitchBendEvent}\n */\n\nvar scale14bits = function scale14bits(zeroOne) {\n  if (zeroOne <= 0) {\n    return Math.floor(16384 * (zeroOne + 1) / 2);\n  }\n\n  return Math.floor(16383 * (zeroOne + 1) / 2);\n};\n\nvar PitchBendEvent = /*#__PURE__*/_createClass(function PitchBendEvent(fields) {\n  _classCallCheck(this, PitchBendEvent);\n\n  // Set default fields\n  fields = Object.assign({\n    delta: 0x00\n  }, fields);\n  this.type = 'pitch-bend';\n  var bend14 = scale14bits(fields.bend);\n  var channel = fields.channel || 0;\n  var lsbValue = bend14 & 0x7f;\n  var msbValue = bend14 >> 7 & 0x7f;\n  this.data = Utils.numberToVariableLength(fields.delta).concat(Constants.PITCH_BEND_STATUS | channel, lsbValue, msbValue);\n});\n\n/**\n * Holds all data for a \"program change\" MIDI event\n * @param {object} fields {instrument: integer, delta: integer}\n * @return {ProgramChangeEvent}\n */\n\nvar ProgramChangeEvent = /*#__PURE__*/function () {\n  function ProgramChangeEvent(fields) {\n    _classCallCheck(this, ProgramChangeEvent);\n\n    // Set default fields\n    this.fields = Object.assign({\n      channel: 1,\n      delta: 0x00\n    }, fields);\n    this.type = 'program'; // delta time defaults to 0.\n\n    this.data = Utils.numberToVariableLength(this.fields.delta).concat(this.getStatusByte(), this.fields.instrument);\n  }\n  /**\n   * Gets the status code based on the selected channel. 0xC{0-F}\n   * Program change status byte for channel 0 is 0xC0 (192)\n   * 0 = Ch 1\n   * @return {number}\n   */\n\n\n  _createClass(ProgramChangeEvent, [{\n    key: \"getStatusByte\",\n    value: function getStatusByte() {\n      return 192 + this.fields.channel - 1;\n    }\n  }]);\n\n  return ProgramChangeEvent;\n}();\n\n/**\n * Object representation of a tempo meta event.\n * @param {object} fields {bpm: integer, delta: integer}\n * @return {TempoEvent}\n */\n\nvar TempoEvent = /*#__PURE__*/_createClass(function TempoEvent(fields) {\n  _classCallCheck(this, TempoEvent);\n\n  // Set default fields\n  fields = Object.assign({\n    delta: 0x00\n  }, fields);\n  this.type = 'tempo';\n  this.tick = fields.tick;\n  var tempo = Math.round(60000000 / fields.bpm); // Start with zero time delta\n\n  this.data = Utils.numberToVariableLength(fields.delta).concat(Constants.META_EVENT_ID, Constants.META_TEMPO_ID, [0x03], // Size\n  Utils.numberToBytes(tempo, 3) // Tempo, 3 bytes\n  );\n});\n\n/**\n * Object representation of a tempo meta event.\n * @param {object} fields {text: string, delta: integer}\n * @return {TextEvent}\n */\n\nvar TextEvent = /*#__PURE__*/_createClass(function TextEvent(fields) {\n  _classCallCheck(this, TextEvent);\n\n  // Set default fields\n  fields = Object.assign({\n    delta: 0x00\n  }, fields);\n  this.type = 'text';\n  var textBytes = Utils.stringToBytes(fields.text); // Start with zero time delta\n\n  this.data = Utils.numberToVariableLength(fields.delta).concat(Constants.META_EVENT_ID, Constants.META_TEXT_ID, Utils.numberToVariableLength(textBytes.length), // Size\n  textBytes // Text\n  );\n});\n\n/**\n * Object representation of a time signature meta event.\n * @return {TimeSignatureEvent}\n */\n\nvar TimeSignatureEvent = /*#__PURE__*/_createClass(function TimeSignatureEvent(numerator, denominator, midiclockspertick, notespermidiclock) {\n  _classCallCheck(this, TimeSignatureEvent);\n\n  this.type = 'time-signature'; // Start with zero time delta\n\n  this.data = Utils.numberToVariableLength(0x00).concat(Constants.META_EVENT_ID, Constants.META_TIME_SIGNATURE_ID, [0x04], // Size\n  Utils.numberToBytes(numerator, 1), // Numerator, 1 bytes\n  Utils.numberToBytes(Math.log2(denominator), 1), // Denominator is expressed as pow of 2, 1 bytes\n  Utils.numberToBytes(midiclockspertick || 24, 1), // MIDI Clocks per tick, 1 bytes\n  Utils.numberToBytes(notespermidiclock || 8, 1) // Number of 1/32 notes per MIDI clocks, 1 bytes\n  );\n});\n\n/**\n * Object representation of a tempo meta event.\n * @param {object} fields {text: string, delta: integer}\n * @return {CopyrightEvent}\n */\n\nvar CopyrightEvent = /*#__PURE__*/_createClass(function CopyrightEvent(fields) {\n  _classCallCheck(this, CopyrightEvent);\n\n  // Set default fields\n  fields = Object.assign({\n    delta: 0x00\n  }, fields);\n  this.type = 'copyright';\n  var textBytes = Utils.stringToBytes(fields.text); // Start with zero time delta\n\n  this.data = Utils.numberToVariableLength(fields.delta).concat(Constants.META_EVENT_ID, Constants.META_COPYRIGHT_ID, Utils.numberToVariableLength(textBytes.length), // Size\n  textBytes // Text\n  );\n});\n\n/**\n * Object representation of a tempo meta event.\n * @param {object} fields {text: string, delta: integer}\n * @return {TrackNameEvent}\n */\n\nvar TrackNameEvent = /*#__PURE__*/_createClass(function TrackNameEvent(fields) {\n  _classCallCheck(this, TrackNameEvent);\n\n  // Set default fields\n  fields = Object.assign({\n    delta: 0x00\n  }, fields);\n  this.type = 'track-name';\n  var textBytes = Utils.stringToBytes(fields.text); // Start with zero time delta\n\n  this.data = Utils.numberToVariableLength(fields.delta).concat(Constants.META_EVENT_ID, Constants.META_TRACK_NAME_ID, Utils.numberToVariableLength(textBytes.length), // Size\n  textBytes // Text\n  );\n});\n\n/**\n * Holds all data for a track.\n * @param {object} fields {type: number, data: array, size: array, events: array}\n * @return {Track}\n */\n\nvar Track = /*#__PURE__*/function () {\n  function Track() {\n    _classCallCheck(this, Track);\n\n    this.type = Constants.TRACK_CHUNK_TYPE;\n    this.data = [];\n    this.size = [];\n    this.events = [];\n    this.explicitTickEvents = []; // If there are any events with an explicit tick defined then we will create a \"sub\" track for those\n    // and merge them in and the end.\n\n    this.tickPointer = 0; // Each time an event is added this will increase\n  }\n  /**\n   * Adds any event type to the track.\n   * Events without a specific startTick property are assumed to be added in order of how they should output.\n   * Events with a specific startTick property are set aside for now will be merged in during build process.\n   * @param {(NoteEvent|ProgramChangeEvent)} events - Event object or array of Event objects.\n   * @param {function} mapFunction - Callback which can be used to apply specific properties to all events.\n   * @return {Track}\n   */\n\n\n  _createClass(Track, [{\n    key: \"addEvent\",\n    value: function addEvent(events, mapFunction) {\n      var _this = this;\n\n      Utils.toArray(events).forEach(function (event, i) {\n        if (event instanceof NoteEvent) {\n          // Handle map function if provided\n          if (typeof mapFunction === 'function') {\n            var properties = mapFunction(i, event);\n\n            if (_typeof(properties) === 'object') {\n              for (var j in properties) {\n                switch (j) {\n                  case 'channel':\n                    event.channel = properties[j];\n                    break;\n\n                  case 'duration':\n                    event.duration = properties[j];\n                    break;\n\n                  case 'sequential':\n                    event.sequential = properties[j];\n                    break;\n\n                  case 'velocity':\n                    event.velocity = Utils.convertVelocity(properties[j]);\n                    break;\n                }\n              }\n            }\n          } // If this note event has an explicit startTick then we need to set aside for now\n\n\n          if (event.startTick !== null) {\n            _this.explicitTickEvents.push(event);\n          } else {\n            // Push each on/off event to track's event stack\n            event.buildData().events.forEach(function (e) {\n              return _this.events.push(e);\n            });\n          }\n        } else if (event instanceof EndTrackEvent) {\n          // Only one EndTrackEvent is allowed, so remove\n          // any existing ones before adding.\n          _this.removeEventsByType('end-track');\n\n          _this.events.push(event);\n        } else {\n          _this.events.push(event);\n        }\n      });\n      return this;\n    }\n    /**\n     * Builds int array of all events.\n     * @param {object} options\n     * @return {Track}\n     */\n\n  }, {\n    key: \"buildData\",\n    value: function buildData() {\n      var _this2 = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      // If the last event isn't EndTrackEvent, then tack it onto the data.\n      if (!this.events.length || !(this.events[this.events.length - 1] instanceof EndTrackEvent)) {\n        this.addEvent(new EndTrackEvent());\n      } // Reset\n\n\n      this.data = [];\n      this.size = [];\n      this.tickPointer = 0;\n      var precisionLoss = 0;\n      this.events.forEach(function (event) {\n        // Build event & add to total tick duration\n        if (event instanceof NoteOnEvent || event instanceof NoteOffEvent) {\n          var built = event.buildData(_this2, precisionLoss, options);\n          precisionLoss = Utils.getPrecisionLoss(event.deltaWithPrecisionCorrection || 0);\n          _this2.data = _this2.data.concat(built.data);\n          _this2.tickPointer = Utils.getRoundedIfClose(event.tick);\n        } else if (event instanceof TempoEvent) {\n          _this2.tickPointer = Utils.getRoundedIfClose(event.tick);\n          _this2.data = _this2.data.concat(event.data);\n        } else {\n          _this2.data = _this2.data.concat(event.data);\n        }\n      });\n      this.mergeExplicitTickEvents();\n      this.size = Utils.numberToBytes(this.data.length, 4); // 4 bytes long\n\n      return this;\n    }\n  }, {\n    key: \"mergeExplicitTickEvents\",\n    value: function mergeExplicitTickEvents() {\n      var _this3 = this;\n\n      if (!this.explicitTickEvents.length) return; // First sort asc list of events by startTick\n\n      this.explicitTickEvents.sort(function (a, b) {\n        return a.startTick - b.startTick;\n      }); // Now this.explicitTickEvents is in correct order, and so is this.events naturally.\n      // For each explicit tick event, splice it into the main list of events and\n      // adjust the delta on the following events so they still play normally.\n\n      this.explicitTickEvents.forEach(function (noteEvent) {\n        // Convert NoteEvent to it's respective NoteOn/NoteOff events\n        // Note that as we splice in events the delta for the NoteOff ones will\n        // Need to change based on what comes before them after the splice.\n        noteEvent.buildData().events.forEach(function (e) {\n          return e.buildData(_this3);\n        }); // Merge each event indivually into this track's event list.\n\n        noteEvent.events.forEach(function (event) {\n          return _this3.mergeSingleEvent(event);\n        });\n      }); // Hacky way to rebuild track with newly spliced events.  Need better solution.\n\n      this.explicitTickEvents = [];\n      this.buildData();\n    }\n    /**\n     * Merges another track's events with this track.\n     * @param {Track} track\n     * @return {Track}\n     */\n\n  }, {\n    key: \"mergeTrack\",\n    value: function mergeTrack(track) {\n      var _this4 = this;\n\n      // First build this track to populate each event's tick property\n      this.buildData(); // Then build track to be merged so that tick property is populated on all events & merge each event.\n\n      track.buildData().events.forEach(function (event) {\n        return _this4.mergeSingleEvent(event);\n      });\n    }\n    /**\n     * Merges a single event into this track's list of events based on event.tick property.\n     * @param {NoteOnEvent|NoteOffEvent} - event\n     * @return {Track}\n     */\n\n  }, {\n    key: \"mergeSingleEvent\",\n    value: function mergeSingleEvent(event) {\n      // There are no events yet, so just add it in.\n      if (!this.events.length) {\n        this.addEvent(event);\n        return;\n      } // Find index of existing event we need to follow with\n\n\n      var lastEventIndex;\n\n      for (var i = 0; i < this.events.length; i++) {\n        if (this.events[i].tick > event.tick) break;\n        lastEventIndex = i;\n      }\n\n      var splicedEventIndex = lastEventIndex + 1; // Need to adjust the delta of this event to ensure it falls on the correct tick.\n\n      event.delta = event.tick - this.events[lastEventIndex].tick; // Splice this event at lastEventIndex + 1\n\n      this.events.splice(splicedEventIndex, 0, event); // Now adjust delta of all following events\n\n      for (var _i = splicedEventIndex + 1; _i < this.events.length; _i++) {\n        // Since each existing event should have a tick value at this point we just need to\n        // adjust delta to that the event still falls on the correct tick.\n        this.events[_i].delta = this.events[_i].tick - this.events[_i - 1].tick;\n      }\n    }\n    /**\n     * Removes all events matching specified type.\n     * @param {string} eventType - Event type\n     * @return {Track}\n     */\n\n  }, {\n    key: \"removeEventsByType\",\n    value: function removeEventsByType(eventType) {\n      var _this5 = this;\n\n      this.events.forEach(function (event, index) {\n        if (event.type === eventType) {\n          _this5.events.splice(index, 1);\n        }\n      });\n      return this;\n    }\n    /**\n     * Sets tempo of the MIDI file.\n     * @param {number} bpm - Tempo in beats per minute.\n     * @param {number} tick - Start tick.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"setTempo\",\n    value: function setTempo(bpm) {\n      var tick = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this.addEvent(new TempoEvent({\n        bpm: bpm,\n        tick: tick\n      }));\n    }\n    /**\n     * Sets time signature.\n     * @param {number} numerator - Top number of the time signature.\n     * @param {number} denominator - Bottom number of the time signature.\n     * @param {number} midiclockspertick - Defaults to 24.\n     * @param {number} notespermidiclock - Defaults to 8.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"setTimeSignature\",\n    value: function setTimeSignature(numerator, denominator, midiclockspertick, notespermidiclock) {\n      return this.addEvent(new TimeSignatureEvent(numerator, denominator, midiclockspertick, notespermidiclock));\n    }\n    /**\n     * Sets key signature.\n     * @param {*} sf -\n     * @param {*} mi -\n     * @return {Track}\n     */\n\n  }, {\n    key: \"setKeySignature\",\n    value: function setKeySignature(sf, mi) {\n      return this.addEvent(new KeySignatureEvent(sf, mi));\n    }\n    /**\n     * Adds text to MIDI file.\n     * @param {string} text - Text to add.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"addText\",\n    value: function addText(text) {\n      return this.addEvent(new TextEvent({\n        text: text\n      }));\n    }\n    /**\n     * Adds copyright to MIDI file.\n     * @param {string} text - Text of copyright line.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"addCopyright\",\n    value: function addCopyright(text) {\n      return this.addEvent(new CopyrightEvent({\n        text: text\n      }));\n    }\n    /**\n     * Adds Sequence/Track Name.\n     * @param {string} text - Text of track name.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"addTrackName\",\n    value: function addTrackName(text) {\n      return this.addEvent(new TrackNameEvent({\n        text: text\n      }));\n    }\n    /**\n     * Sets instrument name of track.\n     * @param {string} text - Name of instrument.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"addInstrumentName\",\n    value: function addInstrumentName(text) {\n      return this.addEvent(new InstrumentNameEvent({\n        text: text\n      }));\n    }\n    /**\n     * Adds marker to MIDI file.\n     * @param {string} text - Marker text.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"addMarker\",\n    value: function addMarker(text) {\n      return this.addEvent(new MarkerEvent({\n        text: text\n      }));\n    }\n    /**\n     * Adds cue point to MIDI file.\n     * @param {string} text - Text of cue point.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"addCuePoint\",\n    value: function addCuePoint(text) {\n      return this.addEvent(new CuePointEvent({\n        text: text\n      }));\n    }\n    /**\n     * Adds lyric to MIDI file.\n     * @param {string} text - Lyric text to add.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"addLyric\",\n    value: function addLyric(text) {\n      return this.addEvent(new LyricEvent({\n        text: text\n      }));\n    }\n    /**\n     * Channel mode messages\n     * @return {Track}\n     */\n\n  }, {\n    key: \"polyModeOn\",\n    value: function polyModeOn() {\n      var event = new NoteOnEvent({\n        data: [0x00, 0xB0, 0x7E, 0x00]\n      });\n      return this.addEvent(event);\n    }\n    /**\n     * Sets a pitch bend.\n     * @param {float} bend - Bend value ranging [-1,1], zero meaning no bend.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"setPitchBend\",\n    value: function setPitchBend(bend) {\n      return this.addEvent(new PitchBendEvent({\n        bend: bend\n      }));\n    }\n    /**\n     * Adds a controller change event\n     * @param {number} number - Control number.\n     * @param {number} value - Control value.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"controllerChange\",\n    value: function controllerChange(number, value) {\n      return this.addEvent(new ControllerChangeEvent({\n        controllerNumber: number,\n        controllerValue: value\n      }));\n    }\n  }]);\n\n  return Track;\n}();\n\nvar VexFlow = /*#__PURE__*/function () {\n  function VexFlow() {\n    _classCallCheck(this, VexFlow);\n  }\n\n  _createClass(VexFlow, [{\n    key: \"trackFromVoice\",\n    value:\n    /**\n     * Support for converting VexFlow voice into MidiWriterJS track\n     * @return MidiWriter.Track object\n     */\n    function trackFromVoice(voice) {\n      var _this = this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        addRenderedAccidentals: false\n      };\n      var track = new Track();\n      var wait = [];\n      voice.tickables.forEach(function (tickable) {\n        if (tickable.noteType === 'n') {\n          track.addEvent(new NoteEvent({\n            pitch: tickable.keys.map(function (pitch, index) {\n              return _this.convertPitch(pitch, index, tickable, options.addRenderedAccidentals);\n            }),\n            duration: _this.convertDuration(tickable),\n            wait: wait\n          })); // reset wait\n\n          wait = [];\n        } else if (tickable.noteType === 'r') {\n          // move on to the next tickable and add this to the stack\n          // of the `wait` property for the next note event\n          wait.push(_this.convertDuration(tickable));\n        }\n      }); // There may be outstanding rests at the end of the track,\n      // pad with a ghost note (zero duration and velocity), just to capture the wait.\n\n      if (wait.length > 0) {\n        track.addEvent(new NoteEvent({\n          pitch: '[c4]',\n          duration: '0',\n          wait: wait,\n          velocity: '0'\n        }));\n      }\n\n      return track;\n    }\n    /**\n     * Converts VexFlow pitch syntax to MidiWriterJS syntax\n     * @param pitch string\n     * @param index pitch index\n     * @param note struct from Vexflow\n     * @param addRenderedAccidentals adds Vexflow rendered accidentals\n     */\n\n  }, {\n    key: \"convertPitch\",\n    value: function convertPitch(pitch, index, note) {\n      var addRenderedAccidentals = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      // Splits note name from octave\n      var pitchParts = pitch.split('/'); // Retrieves accidentals from pitch\n      // Removes natural accidentals since they are not accepted in Tonal Midi\n\n      var accidentals = pitchParts[0].substring(1).replace('n', '');\n\n      if (addRenderedAccidentals) {\n        var _note$getAccidentals;\n\n        (_note$getAccidentals = note.getAccidentals()) === null || _note$getAccidentals === void 0 ? void 0 : _note$getAccidentals.forEach(function (accidental) {\n          if (accidental.index === index) {\n            if (accidental.type === 'n') {\n              accidentals = '';\n            } else {\n              accidentals += accidental.type;\n            }\n          }\n        });\n      }\n\n      return pitchParts[0][0] + accidentals + pitchParts[1];\n    }\n    /**\n     * Converts VexFlow duration syntax to MidiWriterJS syntax\n     * @param note struct from VexFlow\n     */\n\n  }, {\n    key: \"convertDuration\",\n    value: function convertDuration(note) {\n      return 'd'.repeat(note.dots) + this.convertBaseDuration(note.duration) + (note.tuplet ? 't' + note.tuplet.num_notes : '');\n    }\n    /**\n     * Converts VexFlow base duration syntax to MidiWriterJS syntax\n     * @param duration Vexflow duration\n     * @returns MidiWriterJS duration\n     */\n\n  }, {\n    key: \"convertBaseDuration\",\n    value: function convertBaseDuration(duration) {\n      switch (duration) {\n        case 'w':\n          return '1';\n\n        case 'h':\n          return '2';\n\n        case 'q':\n          return '4';\n\n        default:\n          return duration;\n      }\n    }\n  }]);\n\n  return VexFlow;\n}();\n\n/**\n * Object representation of a header chunk section of a MIDI file.\n * @param {number} numberOfTracks - Number of tracks\n * @return {HeaderChunk}\n */\n\nvar HeaderChunk = /*#__PURE__*/_createClass(function HeaderChunk(numberOfTracks) {\n  _classCallCheck(this, HeaderChunk);\n\n  this.type = Constants.HEADER_CHUNK_TYPE;\n  var trackType = numberOfTracks > 1 ? Constants.HEADER_CHUNK_FORMAT1 : Constants.HEADER_CHUNK_FORMAT0;\n  this.data = trackType.concat(Utils.numberToBytes(numberOfTracks, 2), // two bytes long,\n  Constants.HEADER_CHUNK_DIVISION);\n  this.size = [0, 0, 0, this.data.length];\n});\n\n/**\n * Object that puts together tracks and provides methods for file output.\n * @param {array|Track} tracks - A single {Track} object or an array of {Track} objects.\n * @param {object} options - {middleC: 'C4'}\n * @return {Writer}\n */\n\nvar Writer = /*#__PURE__*/function () {\n  function Writer(tracks) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Writer);\n\n    // Ensure tracks is an array\n    this.tracks = Utils.toArray(tracks);\n    this.options = options;\n  }\n  /**\n   * Builds array of data from chunkschunks.\n   * @return {array}\n   */\n\n\n  _createClass(Writer, [{\n    key: \"buildData\",\n    value: function buildData() {\n      var _this = this;\n\n      var data = [];\n      data.push(new HeaderChunk(this.tracks.length)); // For each track add final end of track event and build data\n\n      this.tracks.forEach(function (track) {\n        data.push(track.buildData(_this.options));\n      });\n      return data;\n    }\n    /**\n     * Builds the file into a Uint8Array\n     * @return {Uint8Array}\n     */\n\n  }, {\n    key: \"buildFile\",\n    value: function buildFile() {\n      var build = []; // Data consists of chunks which consists of data\n\n      this.buildData().forEach(function (d) {\n        return build = build.concat(d.type, d.size, d.data);\n      });\n      return new Uint8Array(build);\n    }\n    /**\n     * Convert file buffer to a base64 string.  Different methods depending on if browser or node.\n     * @return {string}\n     */\n\n  }, {\n    key: \"base64\",\n    value: function base64() {\n      if (typeof btoa === 'function') return btoa(String.fromCharCode.apply(null, this.buildFile()));\n      return Buffer.from(this.buildFile()).toString('base64');\n    }\n    /**\n     * Get the data URI.\n     * @return {string}\n     */\n\n  }, {\n    key: \"dataUri\",\n    value: function dataUri() {\n      return 'data:audio/midi;base64,' + this.base64();\n    }\n    /**\n     * Set option on instantiated Writer.\n     * @param {string} key\n     * @param {any} value\n     * @return {Writer}\n     */\n\n  }, {\n    key: \"setOption\",\n    value: function setOption(key, value) {\n      this.options[key] = value;\n      return this;\n    }\n    /**\n     * Output to stdout\n     * @return {string}\n     */\n\n  }, {\n    key: \"stdout\",\n    value: function stdout() {\n      return process.stdout.write(Buffer.from(this.buildFile()));\n    }\n  }]);\n\n  return Writer;\n}();\n\nvar main = {\n  Constants: Constants,\n  ControllerChangeEvent: ControllerChangeEvent,\n  CuePointEvent: CuePointEvent,\n  EndTrackEvent: EndTrackEvent,\n  InstrumentNameEvent: InstrumentNameEvent,\n  KeySignatureEvent: KeySignatureEvent,\n  LyricEvent: LyricEvent,\n  MarkerEvent: MarkerEvent,\n  NoteOnEvent: NoteOnEvent,\n  NoteOffEvent: NoteOffEvent,\n  NoteEvent: NoteEvent,\n  PitchBendEvent: PitchBendEvent,\n  ProgramChangeEvent: ProgramChangeEvent,\n  TempoEvent: TempoEvent,\n  TextEvent: TextEvent,\n  TimeSignatureEvent: TimeSignatureEvent,\n  Track: Track,\n  TrackNameEvent: TrackNameEvent,\n  Utils: Utils,\n  VexFlow: VexFlow,\n  Writer: Writer\n};\n\nmodule.exports = main;\n","'use strict'\n\n// util\nfunction fillStr (s, num) { return Array(num + 1).join(s) }\nfunction isNum (x) { return typeof x === 'number' }\nfunction isStr (x) { return typeof x === 'string' }\nfunction isDef (x) { return typeof x !== 'undefined' }\nfunction midiToFreq (midi, tuning) {\n  return Math.pow(2, (midi - 69) / 12) * (tuning || 440)\n}\n\nvar REGEX = /^([a-gA-G])(#{1,}|b{1,}|x{1,}|)(-?\\d*)\\s*(.*)\\s*$/\n/**\n * A regex for matching note strings in scientific notation.\n *\n * @name regex\n * @function\n * @return {RegExp} the regexp used to parse the note name\n *\n * The note string should have the form `letter[accidentals][octave][element]`\n * where:\n *\n * - letter: (Required) is a letter from A to G either upper or lower case\n * - accidentals: (Optional) can be one or more `b` (flats), `#` (sharps) or `x` (double sharps).\n * They can NOT be mixed.\n * - octave: (Optional) a positive or negative integer\n * - element: (Optional) additionally anything after the duration is considered to\n * be the element name (for example: 'C2 dorian')\n *\n * The executed regex contains (by array index):\n *\n * - 0: the complete string\n * - 1: the note letter\n * - 2: the optional accidentals\n * - 3: the optional octave\n * - 4: the rest of the string (trimmed)\n *\n * @example\n * var parser = require('note-parser')\n * parser.regex.exec('c#4')\n * // => ['c#4', 'c', '#', '4', '']\n * parser.regex.exec('c#4 major')\n * // => ['c#4major', 'c', '#', '4', 'major']\n * parser.regex().exec('CMaj7')\n * // => ['CMaj7', 'C', '', '', 'Maj7']\n */\nexport function regex () { return REGEX }\n\nvar SEMITONES = [0, 2, 4, 5, 7, 9, 11]\n/**\n * Parse a note name in scientific notation an return it's components,\n * and some numeric properties including midi number and frequency.\n *\n * @name parse\n * @function\n * @param {String} note - the note string to be parsed\n * @param {Boolean} isTonic - true the strings it's supposed to contain a note number\n * and some category (for example an scale: 'C# major'). It's false by default,\n * but when true, en extra tonicOf property is returned with the category ('major')\n * @param {Float} tunning - The frequency of A4 note to calculate frequencies.\n * By default it 440.\n * @return {Object} the parsed note name or null if not a valid note\n *\n * The parsed note name object will ALWAYS contains:\n * - letter: the uppercase letter of the note\n * - acc: the accidentals of the note (only sharps or flats)\n * - pc: the pitch class (letter + acc)\n * - step: s a numeric representation of the letter. It's an integer from 0 to 6\n * where 0 = C, 1 = D ... 6 = B\n * - alt: a numeric representation of the accidentals. 0 means no alteration,\n * positive numbers are for sharps and negative for flats\n * - chroma: a numeric representation of the pitch class. It's like midi for\n * pitch classes. 0 = C, 1 = C#, 2 = D ... 11 = B. Can be used to find enharmonics\n * since, for example, chroma of 'Cb' and 'B' are both 11\n *\n * If the note has octave, the parser object will contain:\n * - oct: the octave number (as integer)\n * - midi: the midi number\n * - freq: the frequency (using tuning parameter as base)\n *\n * If the parameter `isTonic` is set to true, the parsed object will contain:\n * - tonicOf: the rest of the string that follows note name (left and right trimmed)\n *\n * @example\n * var parse = require('note-parser').parse\n * parse('Cb4')\n * // => { letter: 'C', acc: 'b', pc: 'Cb', step: 0, alt: -1, chroma: -1,\n *         oct: 4, midi: 59, freq: 246.94165062806206 }\n * // if no octave, no midi, no freq\n * parse('fx')\n * // => { letter: 'F', acc: '##', pc: 'F##', step: 3, alt: 2, chroma: 7 })\n */\nexport function parse (str, isTonic, tuning) {\n  if (typeof str !== 'string') return null\n  var m = REGEX.exec(str)\n  if (!m || (!isTonic && m[4])) return null\n\n  var p = { letter: m[1].toUpperCase(), acc: m[2].replace(/x/g, '##') }\n  p.pc = p.letter + p.acc\n  p.step = (p.letter.charCodeAt(0) + 3) % 7\n  p.alt = p.acc[0] === 'b' ? -p.acc.length : p.acc.length\n  var pos = SEMITONES[p.step] + p.alt\n  p.chroma = pos < 0 ? 12 + pos : pos % 12\n  if (m[3]) { // has octave\n    p.oct = +m[3]\n    p.midi = pos + 12 * (p.oct + 1)\n    p.freq = midiToFreq(p.midi, tuning)\n  }\n  if (isTonic) p.tonicOf = m[4]\n  return p\n}\n\nvar LETTERS = 'CDEFGAB'\nfunction accStr (n) { return !isNum(n) ? '' : n < 0 ? fillStr('b', -n) : fillStr('#', n) }\nfunction octStr (n) { return !isNum(n) ? '' : '' + n }\n\n/**\n * Create a string from a parsed object or `step, alteration, octave` parameters\n * @param {Object} obj - the parsed data object\n * @return {String} a note string or null if not valid parameters\n * @since 1.2\n * @example\n * parser.build(parser.parse('cb2')) // => 'Cb2'\n *\n * @example\n * // it accepts (step, alteration, octave) parameters:\n * parser.build(3) // => 'F'\n * parser.build(3, -1) // => 'Fb'\n * parser.build(3, -1, 4) // => 'Fb4'\n */\nexport function build (s, a, o) {\n  if (s === null || typeof s === 'undefined') return null\n  if (s.step) return build(s.step, s.alt, s.oct)\n  if (s < 0 || s > 6) return null\n  return LETTERS.charAt(s) + accStr(a) + octStr(o)\n}\n\n/**\n * Get midi of a note\n *\n * @name midi\n * @function\n * @param {String|Integer} note - the note name or midi number\n * @return {Integer} the midi number of the note or null if not a valid note\n * or the note does NOT contains octave\n * @example\n * var parser = require('note-parser')\n * parser.midi('A4') // => 69\n * parser.midi('A') // => null\n * @example\n * // midi numbers are bypassed (even as strings)\n * parser.midi(60) // => 60\n * parser.midi('60') // => 60\n */\nexport function midi (note) {\n  if ((isNum(note) || isStr(note)) && note >= 0 && note < 128) return +note\n  var p = parse(note)\n  return p && isDef(p.midi) ? p.midi : null\n}\n\n/**\n * Get freq of a note in hertzs (in a well tempered 440Hz A4)\n *\n * @name freq\n * @function\n * @param {String} note - the note name or note midi number\n * @param {String} tuning - (Optional) the A4 frequency (440 by default)\n * @return {Float} the freq of the number if hertzs or null if not valid note\n * @example\n * var parser = require('note-parser')\n * parser.freq('A4') // => 440\n * parser.freq('A') // => null\n * @example\n * // can change tuning (440 by default)\n * parser.freq('A4', 444) // => 444\n * parser.freq('A3', 444) // => 222\n * @example\n * // it accepts midi numbers (as numbers and as strings)\n * parser.freq(69) // => 440\n * parser.freq('69', 442) // => 442\n */\nexport function freq (note, tuning) {\n  var m = midi(note)\n  return m === null ? null : midiToFreq(m, tuning)\n}\n\nexport function letter (src) { return (parse(src) || {}).letter }\nexport function acc (src) { return (parse(src) || {}).acc }\nexport function pc (src) { return (parse(src) || {}).pc }\nexport function step (src) { return (parse(src) || {}).step }\nexport function alt (src) { return (parse(src) || {}).alt }\nexport function chroma (src) { return (parse(src) || {}).chroma }\nexport function oct (src) { return (parse(src) || {}).oct }\n","/**\n * A midi note number is a number representation of a note pitch. It can be\n * integers so it's equal tempered tuned, or float to indicate it's not\n * tuned into equal temepered scale.\n *\n * This module contains functions to convert to and from midi notes.\n *\n * @example\n * var midi = require('tonal-midi')\n * midi.toMidi('A4') // => 69\n * midi.note(69) // => 'A4'\n * midi.note(61) // => 'Db4'\n * midi.note(61, true) // => 'C#4'\n *\n * @module midi\n */\n\nimport { midi } from 'note-parser'\n\n/**\n * Convert the given note to a midi note number. If you pass a midi number it\n * will returned as is.\n *\n * @param {Array|String|Number} note - the note to get the midi number from\n * @return {Integer} the midi number or null if not valid pitch\n * @example\n * midi.toMidi('C4') // => 60\n * midi.toMidi(60) // => 60\n * midi.toMidi('60') // => 60\n */\nexport function toMidi (val) {\n  if (Array.isArray(val) && val.length === 2) return val[0] * 7 + val[1] * 12 + 12\n  return midi(val)\n}\n\nvar FLATS = 'C Db D Eb E F Gb G Ab A Bb B'.split(' ')\nvar SHARPS = 'C C# D D# E F F# G G# A A# B'.split(' ')\n\n/**\n * Given a midi number, returns a note name. The altered notes will have\n * flats unless explicitly set with the optional `useSharps` parameter.\n *\n * @function\n * @param {Integer} midi - the midi note number\n * @param {Boolean} useSharps - (Optional) set to true to use sharps instead of flats\n * @return {String} the note name\n * @example\n * var midi = require('tonal-midi')\n * midi.note(61) // => 'Db4'\n * midi.note(61, true) // => 'C#4'\n * // it rounds to nearest note\n * midi.note(61.7) // => 'D4'\n */\nexport function note (num, sharps) {\n  if (num === true || num === false) return function (m) { return note(m, num) }\n  num = Math.round(num)\n  var pcs = sharps === true ? SHARPS : FLATS\n  var pc = pcs[num % 12]\n  var o = Math.floor(num / 12) - 1\n  return pc + o\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { Render } from \"./Rendering/Render.js\"\nimport { UI } from \"./ui/UI.js\"\nimport { InputListeners } from \"./InputListeners.js\"\nimport { getPlayer, getPlayerState } from \"./player/Player.js\"\nimport { loadJson } from \"./Util.js\"\nimport { FileLoader } from \"./player/FileLoader.js\"\n\n/**\n *\n *\n * TODOs:\n *\n * UI:\n * - Accessability\n * - Mobile\n * - Load from URL / circumvent CORS.. Extension?\n * - channel menu\n * - added song info to \"loaded songs\"\n * - fix the minimize button\n * - Fix fullscreen on mobile\n *\n * Audio\n * - Figure out how to handle different ADSR envelopes / release times for instruments\n * - implement control messages for\n * \t\t- sostenuto pedal\n * \t\t\t- only keys that are pressed while pedal is hit are sustained\n * \t\t- soft pedal\n * \t\t\t- how does that affect sound?\n * - implement pitch shift\n * - settings for playalong:\n * \t\t- accuracy needed\n * \t\t- different modes\n *\n * MISC\n * - add starting songs from piano-midi\n * - make instrument choosable for tracks\n * - Metronome\n * - Update readme - new screenshot, install/ run instructions\n * - Choose License\n * -\n * -\n *\n *\n *\n * bugs:\n * - Fix iOS\n * - too long notes disappear too soon\n */\nlet ui\nlet loading\nlet listeners\n\nwindow.onload = async function () {\n\tawait init()\n\tloading = true\n\n\t//\tloadSongFromURL(\"http://www.piano-midi.de/midis/brahms/brahms_opus1_1_format0.mid\")\n}\n\nasync function init() {\n\trender = new Render()\n\tui = new UI(render)\n\tlisteners = new InputListeners(ui, render)\n\trenderLoop()\n\n\tloadStartingSong()\n\n\tloadJson(\"./js/data/exampleSongs.json\", json =>\n\t\tui.setExampleSongs(JSON.parse(json))\n\t)\n}\n\nlet render\nfunction renderLoop() {\n\trender.render(getPlayerState())\n\twindow.requestAnimationFrame(renderLoop)\n}\nasync function loadStartingSong() {\n\tconst domain = window.location.href\n\tlet url = \"https://midiano.com/mz_331_3.mid?raw=true\" // \"https://bewelge.github.io/piano-midi.de-Files/midi/alb_esp1.mid?raw=true\" //\n\tif (domain.split(\"github\").length > 1) {\n\t\turl = \"https://Bewelge.github.io/MIDIano/mz_331_3.mid?raw=true\"\n\t}\n\n\tFileLoader.loadSongFromURL(url, (response, fileName) =>\n\t\tgetPlayer().loadSong(response, fileName, \"Mozart - Turkish March\")\n\t) // Local: \"../mz_331_3.mid\")\n}\n"],"names":[],"sourceRoot":""}