{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;;;AAA8C;AACK;AACnD;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,4DAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,4DAAS;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,6DAAS;AACZ;AACA,IAAI,4DAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4DAAS;AACjB;AACA;AACA,UAAU,4DAAS;AACnB;AACA,OAAO;AACP;AACA;AACA,MAAM;AACN,KAAK,4DAAS;AACd;AACA,iBAAiB,4DAAS;AAC1B,MAAM;AACN,KAAK,4DAAS;AACd;AACA,iBAAiB,4DAAS;AAC1B,MAAM;AACN,KAAK,4DAAS,WAAW,4DAAS;AAClC,MAAM;AACN,KAAK,4DAAS,WAAW,4DAAS;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,6DAAS,eAAe,4DAAS;AACrC,IAAI,6DAAS;AACb;AACA;AACA,MAAM,4DAAS;AACf;AACA,IAAI,6DAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,4DAAS;AAC3C;AACA;AACA,MAAM,4DAAS;AACf,IAAI,6DAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,4DAAS;AAC1C;AACA;AACA,KAAK,4DAAS;AACd,GAAG,6DAAS;AACZ;AACA;AACA;AACA,gCAAgC,4DAAS;AACzC;AACA,2BAA2B,4DAAS;AACpC;AACA,MAAM,iEAAU;AAChB;AACA;AACA,KAAK,4DAAS;AACd,MAAM,4DAAS;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,4DAAS,eAAe,4DAAS;AACpC;AACA;AACA,GAAG,6DAAS;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,4DAAS;AACZ,GAAG,6DAAS;AACZ;AACA;AACA;AACA,QAAQ,4DAAS;AACjB,IAAI,4DAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,aAAa;AACb;AACA;AACA,WAAW;AACX;AACA;;;;;;;;;;;;;;;;;;ACnOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,UAAU;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,cAAc;AAChC;AACA;AACA;AACA;AACA,kBAAkB,cAAc;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,UAAU;AAC5B,mBAAmB,cAAc;AACjC;AACA;AACA;AACA;AACA;AACA,kBAAkB,UAAU;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACtNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,oBAAoB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;;;;;;;;;;;;;;;;ACjHO;AACP;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,qCAAqC,IAAI;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,kCAAkC;AACnwBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,oBAAoB,wBAAwB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC/foD;AAChB;AACpC;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iEAAU;AAC1B,gBAAgB,iEAAU;AAC1B,gBAAgB,iEAAU;AAC1B,yBAAyB,iEAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iEAAU;AAC3B;AACA;AACA;AACA;AACA;AACA,eAAe,iEAAU;AACzB,eAAe,iEAAU;AACzB,eAAe,iEAAU;AACzB;AACA;AACA;AACA,kBAAkB,QAAQ;AAC1B,QAAQ,iDAAO;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iEAAU;AACjC;AACA;;;;;;;;;;;;;;;;;;;ACpEwC;AACY;AACb;AACvC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,iEAAU;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,iEAAU;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,iDAAK;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC1GoD;AACA;AACpD;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,iEAAc;AAC3B;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACzBoD;AACpD;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,MAAM,iEAAU;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;;;;;;;;;;;;;;;AC7CA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,qBAAqB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AClCoD;AACpD;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,iEAAU;AACvB,MAAM,iEAAU;AAChB,mBAAmB,6CAA6C;AAChE;AACA;AACA,6CAA6C,iEAAU;AACvD;AACA,uBAAuB,iEAAU;AACjC;AACA,mCAAmC,iEAAU;AAC7C;AACA,mCAAmC,iEAAU;AAC7C;AACA;AACA;AACA,MAAM,iEAAU;AAChB,mBAAmB,6CAA6C;AAChE;AACA;AACA,6CAA6C,iEAAU;AACvD;AACA,uBAAuB,iEAAU;AACjC;AACA,mCAAmC,iEAAU;AAC7C;AACA,mCAAmC,iEAAU;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,QAAQ;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iEAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACnHwE;AAC9B;AACkB;AACE;AAC9D;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,sEAAkB;AAClD;AACA;AACA;AACA,iCAAiC,wEAAmB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,iEAAU;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,MAAM,iEAAU;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,iEAAU;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,MAAM,iEAAU;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,iEAAU;AACf;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,yBAAyB,iEAAU;AACnC,uBAAuB,iEAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,kEAAU;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,iEAAU;AACpC,wBAAwB,iEAAU;AAClC;AACA,IAAI,SAAS,iEAAU;AACvB,0BAA0B,iEAAU;AACpC,wBAAwB,iEAAU;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,kEAAU;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,iEAAU;AAClB;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,iEAAU;AAClB;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,iEAAU;AACnC,uBAAuB,iEAAU;AACjC,uBAAuB,iEAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,iEAAU;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,iEAAU;AACtC;AACA;AACA;AACA;AACA,MAAM,iEAAU;AAChB;AACA;AACA,4BAA4B,iEAAU;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,iEAAU;AACd;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,GAAG;AACvC;AACA;AACA;AACA,MAAM,iEAAU;AAChB;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,OAAO,iEAAU;AACjB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,iEAAU,oBAAoB,iEAAU;AAC9C,GAAG,uDAAa;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,iEAAU;AACd;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,iEAAU,wBAAwB,iEAAU;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACxeA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA,uBAAuB,kCAAkC;AACzD;AACA;AACA;AACA;AACA;AACA,yCAAyC,QAAQ;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,0BAA0B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACtEoD;AACpD;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,QAAQ;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,0CAA0C,QAAQ;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC9GwC;AACM;AACM;AACE;AACtD;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,UAAU;AACtB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,uDAAS;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA,mBAAmB,iDAAO;AAC1B;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,iEAAU;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,iEAAU;AAChB;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,iDAAO;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,iDAAO;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,iDAAO;AACf,iCAAiC,iDAAK;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,iDAAO;AACd,iCAAiC,iDAAK;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,0DAAgB;AACpC;AACA;AACA;AACA;AACA,YAAY,0BAA0B;AACtC,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,0BAA0B;AACtC,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,uDAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,uDAAS;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,uDAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,uDAAS;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,iEAAU;AAChB,SAAS,OAAO;AAChB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,iEAAU;AAChB,SAAS,OAAO;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;AACA;AACA,OAAO,SAAS,iDAAO,QAAQ,iDAAO;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;;;;;;;;;;;;;;;;;ACniBoD;AACb;AACvC;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,iEAAU;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,mBAAmB,iEAAU;AAC7B;AACA,IAAI,oDAAU;AACd;AACA,IAAI,oDAAU;AACd;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjF8C;AACA;AACA;AACI;AACN;AACQ;AACA;AACI;AACA;AACI;AACF;AACc;AACpC;AAC6B;AACb;AACQ;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,8BAA8B,kEAAgB;AAC9C;AACA;AACA,EAAE,2EAAkB;AACpB;AACA;AACA;AACA,yBAAyB,wDAAW;AACpC;AACA,2BAA2B,4DAAa;AACxC;AACA;AACA,yBAAyB,wDAAW;AACpC,wBAAwB,sDAAU;AAClC;AACA;AACA;AACA;AACA;AACA,2BAA2B,8DAAa;AACxC,0BAA0B,8DAAc;AACxC,8BAA8B,uEAAkB;AAChD;AACA;AACA;AACA;AACA,gCAAgC,sEAAkB;AAClD;AACA;AACA;AACA;AACA,+BAA+B,qEAAiB;AAChD;AACA;AACA;AACA;AACA,8BAA8B,kEAAgB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,kEAAc;AACnC;AACA,kCAAkC,kEAAU;AAC5C,kCAAkC,kEAAU;AAC5C;AACA;AACA;AACA,wBAAwB,kEAAU;AAClC;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,kEAAU;AAC9C,oCAAoC,kEAAU;AAC9C;AACA,mCAAmC,kEAAU;AAC7C,mCAAmC,kEAAU;AAC7C;AACA;AACA;AACA;AACA;AACA,YAAY,kEAAU;AACtB;AACA;AACA,IAAI,kEAAU;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,kEAAU;AAChB;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA,4BAA4B,kEAAU;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,gEAAY;AACrB,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,qBAAqB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,kEAAU;AAC3B,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,kEAAU;AAC3B,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kDAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,iEAAa;AACnB,MAAM,iEAAa;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,uDAAS;AACX;AACA;AACA;AACA;AACA;AACA,EAAE,uDAAS;AACX;AACA;AACA;AACA;AACA;AACA,EAAE,uDAAS;AACX;AACA;AACA;AACA;AACA;AACA,EAAE,uDAAS;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,uDAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uDAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uDAAS;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC1boC;AACoC;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,0EAAkB;AACpB,EAAE,0EAAkB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,iEAAU;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,iEAAU;AACd;AACA;AACA,yBAAyB,iEAAU;AACnC;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA,qBAAqB,iDAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iEAAU;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,iDAAO;AAC1D;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA,wBAAwB,iEAAU;AAClC;AACA;AACA,MAAM,iEAAU;AAChB;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,iDAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,iEAAU;AAC3C;AACA;AACA;AACA;AACA;AACA,aAAa,iEAAU;AACvB;AACA;AACA;AACA;AACA,iBAAiB,iEAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iEAAU;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,iEAAU;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iEAAU;AACnB;AACA;AACA;AACA,iBAAiB,iEAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iEAAU;AAC3B;AACA;AACA,kCAAkC,iEAAU;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,iDAAO;AACV;AACA;AACA;AACA;AACA;AACA,GAAG,iDAAO;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,iDAAO;AACV;AACA;AACA;AACA;AACA;AACA,GAAG,iDAAO;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,iDAAO;AACV;AACA;AACA;AACA;AACA;AACA,GAAG,iDAAO;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,iDAAO;AACV;AACA;AACA;AACA;AACA,SAAS,iDAAO;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iDAAO;AAChB;AACA;AACA;AACA,GAAG,iDAAO;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,4BAA4B,iDAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACvYoD;AACpD;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,iEAAU;AAChB;AACA;AACA,MAAM,iEAAU;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;;;;;;;;;;;;;;;;AC1GuC;AAChC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,QAAQ;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,eAAe;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,iDAAK;AACZ;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,WAAW;AACX;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,kBAAkB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACvUyD;AACf;AACO;AAC1C;AACP;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,yCAAG;AACpB;AACA;AACA;AACA;AACA;AACA,KAAK,wDAAS;AACd;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,kBAAkB,0DAAgB;AAClC;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,6DAAS;AACd;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,4DAAS;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACxIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,0BAA0B;AACrC,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAUC;;;;;;;;;;;;;;;;;;;AChJmD;AAIpB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,gCAAgC,gFAAwB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,8EAAsB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AC/HoD;AACG;AACZ;AAIpB;AACwB;AAC/C;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,wEAAyB;AAC3C;AACA,GAAG,6DAAgB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,6DAAgB;AACjC;AACA;AACA;AACA;AACA;AACA,kBAAkB,sEAAuB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,iEAAU;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,yDAAS;AACX;AACA,EAAE,yDAAS;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,gEAAe;AACnB;AACA;AACA;AACA,IAAI,gEAAe;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gEAAe;AAC9B;AACA;AACA,GAAG;AACH;AACA;;;;;;;;;;;;;;;;;;;;ACnKwC;AACxC;AACA;AACO;AACP;AACA;AACO;AACP,eAAe,iDAAK;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC/BoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iEAAU;AAC1B,gBAAgB,iEAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,iEAAU;AACnC,wBAAwB,iEAAU;AAClC,0BAA0B,iEAAU;AACpC,+BAA+B,iEAAU;AACzC,6BAA6B,iEAAU;AACvC,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,iEAAU;AACpC,oBAAoB,iEAAU;AAC9B;AACA,uBAAuB,iEAAU;AACjC;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACxHO;AACP;AACA,IAAI,oCAAoC;AACxC,IAAI,oCAAoC;AACxC,IAAI,oCAAoC;AACxC,IAAI,oCAAoC;AACxC,IAAI,oCAAoC;AACxC,IAAI,oCAAoC;AACxC,IAAI,qCAAqC;AACzC;AACA,OAAO,uCAAuC;AAC9C,OAAO,gDAAgD;AACvD,OAAO,uCAAuC;AAC9C,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC78B2C;AACN;AACrC;AACO;AACP;AACA,EAAE,wDAAS,uCAAuC,IAAI;AACtD;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA;AACA,EAAE,wDAAS,6DAA6D,IAAI;AAC5E,4BAA4B,0DAAmB;AAC/C;AACA;AACA;AACA;AACA,uCAAuC;AACvC,IAAI;AACJ;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChC6C;AACZ;AACoB;AACV;AACS;AACG;AACE;AAMrC;AACgC;AACd;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,8DAAW;AACpC;AACA,EAAE,qEAAc;AAChB,EAAE,qEAAc;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iEAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,yDAAS;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,wDAAS;AACb,IAAI;AACJ,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,wDAAS;AACX,EAAE,wDAAS;AACX;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,wDAAS;AACX;AACA,wBAAwB,sDAAU;AAClC,oBAAoB,0CAAI;AACxB,GAAG,wDAAS;AACZ;AACA;AACA;AACA;AACA,GAAG,wDAAS;AACZ,mDAAmD,wDAAS;AAC5D,IAAI;AACJ;AACA,GAAG,6DAAY;AACf,GAAG,wDAAS;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,wDAAS;AACX,EAAE,wDAAS;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,wDAAS;AACX;AACA;AACA;AACA;AACA,2BAA2B,0DAAmB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,wDAAS;AACZ;AACA;AACA,wBAAwB,sDAAU;AAClC,oBAAoB,0CAAI;AACxB;AACA,GAAG,wDAAS;AACZ;AACA;AACA;AACA,GAAG,wDAAS;AACZ,mDAAmD,wDAAS;AAC5D,IAAI;AACJ;AACA,GAAG,6DAAY;AACf,GAAG,wDAAS;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,uDAAW;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,QAAQ;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,sBAAsB,iEAAU;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,iEAAU;AAChB;AACA;AACA;AACA;AACA,4BAA4B,8BAA8B;AAC1D;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,iEAAqB;AAC3B;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,iEAAU;AAChB,wBAAwB,sEAAiB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,+DAAmB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,oEAAc;AACpB,GAAG,oEAAc;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI,+DAAmB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,0DAAc;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA,sBAAsB,sBAAsB;AAC5C,0BAA0B,0BAA0B;AACpD;AACA,cAAc;AACd;AACA;AACA,6BAA6B,iBAAiB,EAAE,OAAO;AACvD;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;;;;;;;;;;;;;;;;;;;;;;;;;AC7jBwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,iDAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iDAAK;AAClC;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;;;;;;;;;;;;;;;;;;;;ACvDiD;AACX;AACtC;AACA;AACA;AACA;AACA,wBAAwB,8CAAI;AAC5B;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,UAAU,GAAG,WAAW;AACxF;AACA;AACA;AACA;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,WAAW,IAAI,SAAS;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,wBAAwB,8CAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,0DAAmB;AAChD;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,8CAAI;AAChC;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,oBAAoB;AAC1D;AACA,cAAc,0DAAmB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,oBAAoB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA,UAAU,gFAAgF;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,WAAW,IAAI,SAAS;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,gFAAgF;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,YAAY,EAAC;;;;;;;;;;;;;;;;;AClQ0B;AACtD;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAU;AACjC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,yDAAU;AACf,KAAK,yDAAU;AACf;AACA,wBAAwB,wDAAU;AAClC;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAU;AAC9B,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAU;AAC9B,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAU;AAC9B,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAU;AAC9B,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAU;AAC9B,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAU;AAC9B,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAU;AAC9B,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,wDAAU;AACf,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,wDAAU;AACf,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAU;AAC9B,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAU;AAC9B,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAU;AACjC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAU;AACjC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAU;AACjC;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAU;AAC9B,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAU;AAC9B,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAU;AACjC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAU;AACjC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAU;AAC9B,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAU;AACjC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAU;AACjC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAU;AAC9B,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAU;AACjC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAU;AACjC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAU;AACjC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,wDAAU;AACf;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAU;AAC9B,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAU;AAC9B,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAU;AAC9B,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAU;AAC9B,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAU;AAC9B,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAU;AACjC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAU;AACjC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAU;AACjC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAU;AACjC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,wDAAU;AACf;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,wDAAU;AACf;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,wDAAU;AACf;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wDAAU;AAClC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,wDAAU;AACf,KAAK,MAAM,SAAI;AACf,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,wDAAU;AACf,KAAK,MAAM,SAAI;AACf,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAU;AACjC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAU;AACjC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAU;AACjC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAU;AACjC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAU;AACjC;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACjhBgD;AAChD;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,gBAAgB,8DAAgB;AAChC;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACnByD;AACX;AAIb;AACjC;AACA;AACA;AACA,kBAAkB,uEAAkB;AACpC,sBAAsB,+EAAsB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,wBAAwB,uDAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,CAAC,4EAAmB;AACpB;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,uBAAuB,uEAAkB;AACzC;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AClF6C;AAC7C;AACO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,0DAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,IAAI,4BAA4B;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,gCAAgC;AACtC,MAAM;AACN;AACA;AACA;AACA,MAAM,gCAAgC;AACtC,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK,iBAAiB;AACtB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,IAAI,sBAAsB;AACpE;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,0DAAgB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAI,0DAAgB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACjcO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;;;;;;;;;;;;;;;ACT0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,oDAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,oDAAS;AAC9B;AACA;AACA;AACA;AACA,iBAAiB,oDAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;;;;;;;;;;;;;;;;;ACjD0C;AAC1C;AACO;AACP;AACA;AACA,gBAAgB,oDAAS;AACzB;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACVgE;AAClB;AACL;AACzC;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA,kBAAkB,uDAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,uDAAS;AACtB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,aAAa,uDAAS;AACtB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,aAAa,uDAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,uDAAS;AACrB;AACA;AACA;AACA,IAAI,6EAAsB;AAC1B;AACA;AACA;AACA;AACA;AACA,aAAa,uDAAS;AACtB;AACA;AACA;AACA;AACA,eAAe,uDAAS;AACxB;AACA;AACA,MAAM;AACN,MAAM;AACN;AACA;AACA;AACA;AACA,eAAe,uDAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,uDAAS;AACd,MAAM;AACN;AACA;AACA,KAAK,uDAAS;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,uDAAS;AAClB;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AC1LoD;AACW;AAClB;AACH;AACH;AACvC;AACO;AACP;AACA;AACA,iBAAiB,oDAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,EAAE,oDAAS;AACX,EAAE,oDAAS;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oDAAS;AACxB,eAAe,0DAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oDAAS;AACxB,eAAe,0DAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,oDAAS;AACpB,WAAW,0DAAgB;AAC3B;AACA;AACA,GAAG,qDAAS;AACZ,GAAG,6DAAU;AACb,IAAI,6DAAS;AACb,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,oDAAS;AACpB,WAAW,0DAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iEAAc;AACjC;AACA,EAAE,oDAAS;AACX,EAAE,oDAAS;AACX,EAAE,6DAAS;AACX;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACnG0C;AAMd;AACmB;AACL;AACc;AACR;AACO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,oBAAoB,4DAAS;AAC7B;AACA;AACO;AACP,kBAAkB,2DAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,oDAAS;AACzB;AACA;AACA;AACA,8BAA8B,gEAAa;AAC3C;AACA;AACA;AACA,qBAAqB,oDAAS;AAC9B;AACA;AACA,aAAa,oDAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,oDAAS;AACZ,IAAI;AACJ;AACA;AACA,GAAG,oDAAS;AACZ;AACA;AACA;AACA;AACA,aAAa,oDAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,4DAAS;AAClC,kBAAkB,oDAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,4DAAS;AACxC;AACA;AACA;AACA;AACA;AACA,cAAc,oDAAS;AACvB;AACA;AACA,gBAAgB,oDAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,oDAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,cAAc,oDAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,4BAA4B,oDAAS;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,oEAAc;AACvB,KAAK,0DAAY;AACjB;AACA;AACA;AACA,SAAS,kEAAgB;AACzB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,EAAE;AACF;AACA,wBAAwB,oDAAS;AACjC;AACA;AACA,SAAS,gEAAa;AACtB;AACA;AACA,GAAG,iEAAa;AAChB;AACA,EAAE;AACF,wBAAwB,oDAAS;AACjC;AACA;AACA,SAAS,gEAAa;AACtB,2BAA2B,gEAAa;AACxC,EAAE;AACF;AACA,CAAC,oDAAS;AACV;AACA;AACA,EAAE,oDAAS;AACX;AACA,EAAE,oDAAS;AACX;AACA;AACA;AACA;AACA,CAAC,oDAAS;AACV,CAAC,oDAAS;AACV;AACA,EAAE,oDAAS;AACX;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACtN0C;AACc;AACpB;AACU;AACkC;AAC5C;AACmB;AACC;AACxD;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,mEAAY;AACtC;AACA,oBAAoB,8CAAM;AAC1B;AACA,EAAE,6DAAS;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,8CAAM;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,2BAA2B,oDAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,oDAAS;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,oDAAS;AACzB,kBAAkB,oDAAS;AAC3B,iBAAiB,oDAAS;AAC1B;AACA,EAAE,oDAAS;AACX,EAAE,oDAAS;AACX,EAAE,oDAAS;AACX;AACA;AACA;AACA;AACA;AACA,EAAE,oDAAS;AACX;AACA;AACA;AACA;AACA,+BAA+B,oDAAS;AACxC;AACA;AACA,EAAE,oDAAS;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,oDAAS;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,oDAAS;AAClC,EAAE,oDAAS;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,oDAAS;AAC1B,EAAE,oDAAS;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,oDAAS;AAC3B,EAAE,oDAAS;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oDAAS;AAChC,EAAE,oDAAS;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,oDAAS;AAC9B,EAAE,oDAAS;AACX;AACA;AACA;AACA;AACA,gBAAgB,oDAAS;AACzB,EAAE,oDAAS;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,oDAAS;AAC1B;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,oDAAS;AAClC;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,oDAAS;AACX;AACA;AACA;AACA;AACA;AACA,EAAE,oDAAS;AACX;AACA;AACA;AACA;AACA;AACA,sBAAsB,oDAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,qEAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,2BAA2B,oDAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,oDAAS;AAClC;AACA;AACA;AACA,GAAG,oDAAS;AACZ;AACA;AACA;AACA;AACA;AACA,4BAA4B,oDAAS;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,oDAAS;AACX;AACA;AACA;AACA;AACA;AACA,EAAE,oDAAS;AACX;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,oDAAS;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,oDAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,qBAAqB,oDAAS;AAC9B;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,6DAAS;AACZ,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,mBAAmB,oDAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,oDAAS;AACjC;AACA;AACA;AACA,KAAK,4DAAS;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,4DAAS;AACvB;AACA;AACA;AACA,uBAAuB,oDAAS;AAChC;AACA;AACA;AACA;AACA,MAAM,6DAAS;AACf;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,uBAAuB,4DAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,oDAAS;AACnC;AACA;AACA;AACA,KAAK,4DAAS;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oDAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG,oDAAS;AACZ;AACA;AACA;AACA;AACA,EAAE,oDAAS;AACX;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,oDAAS;AACX;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4DAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,oDAAS;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG,oDAAS;AACZ;AACA;AACA;AACA;AACA,EAAE,oDAAS;AACX;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,oDAAS;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,oDAAS;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG,oDAAS;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,oDAAS;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,oDAAS;AACX;AACA;AACA;AACA;AACA;AACA,EAAE,oDAAS;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,oDAAS;AACpC;AACA;AACA,IAAI,4DAAS;AACb;AACA;AACA;AACA;AACA,SAAS,4DAAS;AAClB,MAAM,oDAAS;AACf;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,4DAAS;AACd,SAAS,4DAAS;AAClB,MAAM,oDAAS;AACf;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM,oDAAS;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,oDAAS;AAC9B;AACA;AACA;AACA,SAAS,4DAAS;AAClB,MAAM,4DAAS;AACf,iBAAiB,4DAAS;AAC1B,WAAW,4DAAS;AACpB,QAAQ,4DAAS;AACjB;AACA,iDAAiD,4DAAS;AAC1D,OAAO,6DAAS,YAAY,4DAAS;AACrC;AACA,MAAM,oDAAS;AACf,OAAO;AACP,MAAM,4DAAS,mBAAmB,4DAAS;AAC3C,MAAM,6DAAS;AACf,MAAM,6DAAS;AACf;AACA,MAAM,oDAAS;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,oDAAS;AAC9B;AACA;AACA;AACA;AACA,GAAG,oDAAS;AACZ;AACA;AACA;AACA;AACA,MAAM,4DAAS;AACf,GAAG,oDAAS;AACZ,GAAG,6DAAS;AACZ,GAAG,oDAAS;AACZ;AACA;AACA;AACA;AACA,sBAAsB,oDAAS;AAC/B;AACA;AACA;AACA;AACA,GAAG,oDAAS;AACZ;AACA;AACA;AACA;AACA,EAAE,4DAAS;AACX,EAAE,oDAAS;AACX;AACA,EAAE,oDAAS;AACX;AACA;AACA;AACA;AACA,qBAAqB,oDAAS;AAC9B;AACA;AACA;AACA;AACA;AACA,GAAG,oDAAS;AACZ;AACA;AACA;AACA;AACA,EAAE,4DAAS;AACX,EAAE,oDAAS;AACX,EAAE,oDAAS;AACX;AACA;AACA;AACA,uBAAuB,oDAAS;AAChC;AACA;AACA;AACA;AACA,GAAG,oDAAS;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,oDAAS;AACxC;AACA;AACA;AACA;AACA;AACA,GAAG,oDAAS;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,oDAAS;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA,cAAc,oDAAS;AACvB;AACA,MAAM,mBAAmB;AACzB,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL,sBAAsB,oDAAS;AAC/B;AACA,OAAO,mBAAmB;AAC1B,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,6BAA6B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,oDAAS;AACZ;AACA,IAAI;AACJ;AACA,GAAG,oDAAS;AACZ;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA,EAAE,oDAAS,yBAAyB,4DAAe;AACnD;AACA;AACA;AACA;AACA,8BAA8B,iEAAc;AAC5C;AACA;AACA;AACA;AACA,0BAA0B,oDAAS;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,oDAAS;AACvB;AACA,MAAM,mBAAmB;AACzB,MAAM;AACN;AACA;AACA;AACA,0BAA0B,oDAAS;AACnC,2BAA2B,oDAAS;AACpC;AACA;AACA;AACA,qBAAqB,oEAAc;AACnC;AACA;AACA,IAAI;AACJ;AACA,oBAAoB,oDAAS;AAC7B;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,sBAAsB,oEAAc;AACpC;AACA;AACA,IAAI;AACJ;AACA,qBAAqB,oDAAS;AAC9B;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,oDAAS;AAC3B;AACA;AACA;AACA;AACA,KAAK,oDAAS;AACd,KAAK,oEAAc;AACnB,MAAM;AACN,KAAK,oDAAS;AACd,KAAK,oEAAc;AACnB;AACA,oCAAoC;AACpC;AACA;AACA,MAAM,oEAAc;AACpB,GAAG,oDAAS;AACZ;AACA;AACA;AACA;AACA;AACA,kBAAkB,oDAAS;AAC3B;AACA;AACA;AACA;AACA,KAAK,oDAAS;AACd,KAAK,qEAAc;AACnB,MAAM;AACN,KAAK,oDAAS;AACd,KAAK,qEAAc;AACnB;AACA;AACA;AACA,MAAM,oEAAc;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,oDAAS;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oDAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oDAAS;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oDAAS;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oDAAS;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,oDAAS;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,oDAAS;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA,wCAAwC;AACxC;AACA,cAAc,oDAAS;AACvB;AACA,MAAM,mBAAmB;AACzB,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,IAAI;AACJ,wCAAwC;AACxC;AACA,cAAc,oDAAS;AACvB;AACA,MAAM,mBAAmB;AACzB,MAAM;AACN;AACA;AACA;AACA,qBAAqB,oDAAS;AAC9B;AACA,MAAM,mBAAmB;AACzB,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,MAAM,GAAG,QAAQ,GAAG,QAAQ;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,aAAa,kEAAe;AAC5B;AACA;AACA;AACA;AACA;AACA,EAAE,4DAAS;AACX;AACA;AACA;;;;;;;;;;;;;;;;;;AC3nC+C;AACL;AAC1C;AACO;AACP;AACA;AACA,aAAa,oDAAS;AACtB;AACA;AACA,GAAG,oDAAS;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,oDAAS;AACZ;AACA;AACA;AACA;AACA;AACA,GAAG,oDAAS;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,oDAAS;AACZ;AACA;AACA;AACA,wBAAwB,oDAAS;AACjC;AACA;AACA,yCAAyC,4DAAS;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,oDAAS;AACZ;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjDa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,cAAc,GAAG,cAAc;AAC/B;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,kBAAkB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;;;;;;;;;;;AC7Da;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,qBAAqB,GAAG,wBAAwB,GAAG,0BAA0B;AAC7E;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,CAAC,IAAI;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,qBAAqB;AACrB;;;;;;;;;;;ACjGa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,4BAA4B;AAC5B,sBAAsB,mBAAO,CAAC,0EAAiB;AAC/C;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,4BAA4B;AAC5B;;;;;;;;;;;AChCa;AACb;AACA,6EAA6E,OAAO;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,cAAc;AACd,kBAAkB,mBAAO,CAAC,oDAAW;AACrC,eAAe,mBAAO,CAAC,4DAAU;AACjC,sBAAsB,mBAAO,CAAC,wEAAe;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,0EAA0E,yCAAyC;AACnH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA,aAAa;AACbiEAAiE,oCAAoC,8CAA8C,uBAAuB,oDAAoD,4BAA4B,8DAA8D,sCAAsC;AAC9V;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,6CAA6C,yCAAyC;AACtF;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA,cAAc;AACd;;;;;;;;;;;ACxLa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,cAAc,GAAG,wBAAwB;AACzC,qBAAqB,mBAAO,CAAC,wEAAgB;AAC7C;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,2BAA2B;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,mDAAmD,2BAA2B;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,uBAAuB,OAAO;AACnF;AACA,mCAAmC;AACnC,SAAS;AACT;AACA,mCAAmC;AACnC,SAAS;AACT,iDAAiD,uBAAuB,OAAO;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,CAAC;AACD,cAAc;AACd;;;;;;;;;;;AC/Pa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,kBAAkB;AAClB,uBAAuB,mBAAO,CAAC,4EAAkB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,oCAAoC;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,kBAAkB;AAClB;;;;;;;;;;;ACjGa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,wBAAwB,GAAG,4BAA4B,GAAG,2BAA2B;AACrwBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AClKa;AACb;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA;AACA,cAAc,6BAA6B,0BAA0B,cAAc,qBAAqB;AACxG,iBAAiB,oDAAoD,qEAAqE,cAAc;AACxJ,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,mCAAmC,SAAS;AAC5C,mCAAmC,WAAW,UAAU;AACxD,0CAA0C,cAAc;AACxD;AACA,8GAA8G,OAAO;AACrH,iFAAiF,iBAAiB;AAClG,yDAAyD,gBAAgB,QAAQ;AACjF,+CAA+C,gBAAgB,gBAAgB;AAC/E;AACA,kCAAkC;AAClC;AACA;AACA,UAAU,YAAY,aAAa,SAAS,UAAU;AACtD,oCAAoC,SAAS;AAC7C;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,cAAc,GAAG,aAAa,GAAG,YAAY;AAC7C,kBAAkB,mBAAO,CAAC,oDAAW;AACrC,eAAe,mBAAO,CAAC,4DAAU;AACjC,cAAc,mBAAO,CAAC,0DAAS;AAC/B,eAAe,mBAAO,CAAC,4DAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,oDAAoD;AACzH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,oBAAoB;AAC/E;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,yBAAyB;AACxF;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,wBAAwB;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,YAAY;AACZ,cAAc,mBAAO,CAAC,0DAAS;AAC/B,yCAAwC,EAAE,qCAAqC,yBAAyB,EAAC;AACzG,eAAe,mBAAO,CAAC,4DAAU;AACjC,0CAAyC,EAAE,qCAAqC,2BAA2B,EAAC;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA,yCAAyC,gBAAgB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC/Oa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,EAAE;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,YAAY;AACZ;;;;;;;;;;;AChKa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,iBAAiB;AACjB;;;;;;;;;;;AC1Ca;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,aAAa;AACb,qBAAqB,mBAAO,CAAC,wEAAgB;AAC7C,sBAAsB,mBAAO,CAAC,0EAAiB;AAC/C,uBAAuB,mBAAO,CAAC,4EAAkB;AACjD,kBAAkB,mBAAO,CAAC,kEAAa;AACvC,mBAAmB,mBAAO,CAAC,oEAAc;AACzC,aAAa,mBAAO,CAAC,wDAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,gCAAgC;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,iCAAiC;AAC/F,+DAA+D,kCAAkC;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,qCAAqC;AAC1G;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,iEAAiE,oCAAoC;AACrG;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,2BAA2B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,2BAA2B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,SAAS;AACjC;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,4DAA4D,qBAAqB;AACjF;AACA;AACA,iDAAiD,oBAAoB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,aAAa;AACb;;;;;;;;;;;;;;;ACnPA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,GAAG,IAAsD,EAAE,mBAAmB,KAAK,UAAoO,CAAC,aAAa,0BAA0B,0BAA0B,gBAAgB,UAAU,UAAU,MAAM,SAAmC,CAAC,gBAAgB,OAAC,OAAO,oBAAoB,8CAA8C,qCAAqC,YAAY,YAAY,mCAAmC,iBAAiB,gBAAgB,sBAAsB,oBAAoB,MAAM,SAAmC,CAAC,YAAY,WAAW,YAAY,SAAS,GAAG;AAClzB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA,oCAAoC;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC,mBAAmB,qBAAM,mBAAmB,qBAAM,mFAAmF;AACtI,CAAC,GAAG;AACJ;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA,CAAC,EAAE,MAAM;AACT;AACA;AACA;AACA;AACA;;AAEA,CAAC,mBAAmB,qBAAM,mBAAmB,qBAAM,mFAAmF;AACtI,CAAC,EAAE,MAAM;AACT;;AAEA,qGAAqG,qBAAqB,mBAAmB;;AAE7I,kDAAkD,0CAA0C;;AAE5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;;AAEA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,wBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,YAAY;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,sBAAsB;AACtB,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,qCAAqC,wBAAwB;AAC7D;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,oBAAoB,oBAAoB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,wBAAwB,oBAAoB;AAC5C;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,8BAA8B;AAClD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,wBAAwB,oBAAoB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA,4BAA4B,oBAAoB;AAChD;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gCAAgC,oBAAoB;AACpD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA,iBAAiB;AACjB,mGAAmG;AACnG;AACA,iBAAiB;AACjB,aAAa;AACb,UAAU;AACV;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA,gCAAgC,oBAAoB;AACpD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA,iBAAiB;AACjB,mGAAmG;AACnG;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA,cAAc;AACd;AACA,cAAc;AACd;AACA,cAAc;AACd;AACA,cAAc;AACd;AACA,cAAc;AACd;AACA,cAAc;AACd;AACA,cAAc;AACd;AACA,cAAc;AACd;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;;AAEA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,gBAAgB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,kBAAkB;AAClB;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oCAAoC,YAAY;AAChD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,yBAAyB;AACzB;AACA,yBAAyB;AACzB,qBAAqB;AACrB,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb,SAAS;AACT,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,KAAK;;AAEL;AACA;AACA;;AAEA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,oCAAoC,yBAAyB;AAC7D;AACA;;AAEA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gCAAgC,yBAAyB;AACzD;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,6BAA6B;AAC7B,yBAAyB;AACzB;;AAEA;AACA,2EAA2E,SAAS;AACpF;AACA;;AAEA;AACA;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,8CAA8C,QAAQ;AACtD;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB,YAAY;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB,YAAY;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS;AACT,kDAAkD,QAAQ;AAC1D;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,oBAAoB,sBAAsB;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uCAAuC;AACvC,gCAAgC;AAChC;AACA;AACA;AACA;;AAEA;AACA,mEAAmE;AACnE;;AAEA,8CAA8C;AAC9C;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,8EAA8E;;AAE9E;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4DAA4D,SAAS;AACrE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0EAA0E,WAAW;AACrF;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,kBAAkB;AAClB;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,8CAA8C,SAAS;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qDAAqD,SAAS;AAC9D;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;;;AAGA;;AAEA;;AAEA,CAAC,EAAE,MAAM,EAAE,GAAG;AACd,CAAC;;;;;;;;;;;AC/vFD,+GAAgD;AAChD,+GAAgD;;;;;;;;;;;ACDhD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,kCAAkC;AAClD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACtVA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,YAAY,SAAS;AACrB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;UCvWA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACN8C;AACf;AACqB;AACU;AAC1B;AACe;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,wDAAM;AACpB,UAAU,yCAAE;AACZ,iBAAiB,8DAAc;AAC/B;AACA;AACA;AACA;AACA,CAAC,mDAAQ;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iEAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,6DAAU;AACX,EAAE,4DAAS;AACX;AACA","sources":["webpack://bithovenmain/./js/InputListeners.js","webpack://bithovenmain/./js/MicInputHandler.js","webpack://bithovenmain/./js/MidiInputHandler.js","webpack://bithovenmain/./js/MidiLoader.js","webpack://bithovenmain/./js/Rendering/BackgroundRender.js","webpack://bithovenmain/./js/Rendering/DebugRender.js","webpack://bithovenmain/./js/Rendering/InSongTextRenderer.js","webpack://bithovenmain/./js/Rendering/MarkerRenderer.js","webpack://bithovenmain/./js/Rendering/MeasureLinesRender.js","webpack://bithovenmain/./js/Rendering/NoteParticleRender.js","webpack://bithovenmain/./js/Rendering/NoteRender.js","webpack://bithovenmain/./js/Rendering/OverlayRender.js","webpack://bithovenmain/./js/Rendering/PianoParticleRender.js","webpack://bithovenmain/./js/Rendering/PianoRender.js","webpack://bithovenmain/./js/Rendering/ProgressBarRender.js","webpack://bithovenmain/./js/Rendering/Render.js","webpack://bithovenmain/./js/Rendering/RenderDimensions.js","webpack://bithovenmain/./js/Rendering/SustainRenderer.js","webpack://bithovenmain/./js/Song.js","webpack://bithovenmain/./js/SoundfontLoader.js","webpack://bithovenmain/./js/Util.js","webpack://bithovenmain/./js/audio/AudioNote.js","webpack://bithovenmain/./js/audio/AudioPlayer.js","webpack://bithovenmain/./js/audio/Buffers.js","webpack://bithovenmain/./js/audio/GainNodeController.js","webpack://bithovenmain/./js/data/CONST.js","webpack://bithovenmain/./js/player/FileLoader.js","webpack://bithovenmain/./js/player/Player.js","webpack://bithovenmain/./js/player/Tracks.js","webpack://bithovenmain/./js/recording/midi-recorder.js","webpack://bithovenmain/./js/settings/DefaultSettings.js","webpack://bithovenmain/./js/settings/LocalStorageHandler.js","webpack://bithovenmain/./js/settings/Settings.js","webpack://bithovenmain/./js/ui/DomHelper.js","webpack://bithovenmain/./js/ui/ElementHighlight.js","webpack://bithovenmain/./js/ui/Loader.js","webpack://bithovenmain/./js/ui/Notification.js","webpack://bithovenmain/./js/ui/SettingUI.js","webpack://bithovenmain/./js/ui/SongUI.js","webpack://bithovenmain/./js/ui/TrackUI.js","webpack://bithovenmain/./js/ui/UI.js","webpack://bithovenmain/./js/ui/ZoomUI.js","webpack://bithovenmain/./node_modules/@tonejs/midi/dist/BinarySearch.js","webpack://bithovenmain/./node_modules/@tonejs/midi/dist/ControlChange.js","webpack://bithovenmain/./node_modules/@tonejs/midi/dist/ControlChanges.js","webpack://bithovenmain/./node_modules/@tonejs/midi/dist/Encode.js","webpack://bithovenmain/./node_modules/@tonejs/midi/dist/Header.js","webpack://bithovenmain/./node_modules/@tonejs/midi/dist/Instrument.js","webpack://bithovenmain/./node_modules/@tonejs/midi/dist/InstrumentMaps.js","webpack://bithovenmain/./node_modules/@tonejs/midi/dist/Midi.js","webpack://bithovenmain/./node_modules/@tonejs/midi/dist/Note.js","webpack://bithovenmain/./node_modules/@tonejs/midi/dist/PitchBend.js","webpack://bithovenmain/./node_modules/@tonejs/midi/dist/Track.js","webpack://bithovenmain/./node_modules/array-flatten/dist.es2015/index.js","webpack://bithovenmain/./node_modules/localforage/dist/localforage.js","webpack://bithovenmain/./node_modules/midi-file/index.js","webpack://bithovenmain/./node_modules/midi-file/lib/midi-parser.js","webpack://bithovenmain/./node_modules/midi-file/lib/midi-writer.js","webpack://bithovenmain/webpack/bootstrap","webpack://bithovenmain/webpack/runtime/compat get default export","webpack://bithovenmain/webpack/runtime/define property getters","webpack://bithovenmain/webpack/runtime/global","webpack://bithovenmain/webpack/runtime/hasOwnProperty shorthand","webpack://bithovenmain/webpack/runtime/make namespace object","webpack://bithovenmain/./js/main.js"],"sourcesContent":["import { getPlayer } from \"./player/Player.js\"\r\nimport { getSetting } from \"./settings/Settings.js\"\r\n\r\nexport class InputListeners {\r\n\tconstructor(ui, render) {\r\n\t\tthis.grabSpeed = []\r\n\t\tthis.delay = false\r\n\r\n\t\tthis.addMouseAndTouchListeners(render, ui)\r\n\r\n\t\tdocument.body.addEventListener(\"wheel\", this.onWheel())\r\n\r\n\t\tthis.addProgressBarMouseListeners(render)\r\n\r\n\t\twindow.addEventListener(\"keydown\", this.onKeyDown(ui))\r\n\r\n\t\tui.setOnMenuHeightChange(val => render.onMenuHeightChanged(val))\r\n\r\n\t\tui.fireInitialListeners()\r\n\r\n\t\tlet player = getPlayer()\r\n\t\trender.setPianoInputListeners(\r\n\t\t\tplayer.addInputNoteOn.bind(player),\r\n\t\t\tplayer.addInputNoteOff.bind(player)\r\n\t\t)\r\n\t}\r\n\r\n\taddMouseAndTouchListeners(render, ui) {\r\n\t\twindow.addEventListener(\"mouseup\", ev => this.onMouseUp(ev, render))\r\n\t\tdocument.body.addEventListener(\r\n\t\t\t\"mousedown\",\r\n\t\t\tev => this.onMouseDown(ev, render),\r\n\t\t\t{ passive: false }\r\n\t\t)\r\n\t\tdocument.body.addEventListener(\r\n\t\t\t\"mousemove\",\r\n\t\t\tev => this.onMouseMove(ev, render, ui),\r\n\t\t\t{ passive: false }\r\n\t\t)\r\n\t\twindow.addEventListener(\"touchend\", ev => this.onMouseUp(ev, render), {\r\n\t\t\tpassive: false\r\n\t\t})\r\n\t\tdocument.body.addEventListener(\r\n\t\t\t\"touchstart\",\r\n\t\t\tev => this.onMouseDown(ev, render),\r\n\t\t\t{ passive: false }\r\n\t\t)\r\n\t\tdocument.body.addEventListener(\r\n\t\t\t\"touchmove\",\r\n\t\t\tev => this.onMouseMove(ev, render, ui),\r\n\t\t\t{ passive: false }\r\n\t\t)\r\n\t}\r\n\r\n\taddProgressBarMouseListeners(render) {\r\n\t\trender\r\n\t\t\t.getProgressBarCanvas()\r\n\t\t\t.addEventListener(\"mousemove\", this.onMouseMoveProgressCanvas(render))\r\n\t\trender\r\n\t\t\t.getProgressBarCanvas()\r\n\t\t\t.addEventListener(\"mousedown\", this.onMouseDownProgressCanvas(render))\r\n\t}\r\n\r\n\tonWheel() {\r\n\t\treturn event => {\r\n\t\t\tif (event.target != document.body) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tif (this.delay) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tthis.delay = true\r\n\r\n\t\t\tlet alreadyScrolling = getPlayer().scrolling != 0\r\n\r\n\t\t\t//Because Firefox does not set .wheelDelta\r\n\t\t\tlet wheelDelta = event.wheelDelta ? event.wheelDelta : -1 * event.deltaY\r\n\r\n\t\t\tlet evDel =\r\n\t\t\t\t((wheelDelta + 1) / (Math.abs(wheelDelta) + 1)) *\r\n\t\t\t\tMath.min(500, Math.abs(wheelDelta))\r\n\r\n\t\t\tvar wheel = (evDel / Math.abs(evDel)) * 500\r\n\r\n\t\t\tgetPlayer().scrolling -= 0.001 * wheel\r\n\t\t\tif (!alreadyScrolling) {\r\n\t\t\t\tgetPlayer().handleScroll()\r\n\t\t\t}\r\n\t\t\tthis.delay = false\r\n\t\t}\r\n\t}\r\n\r\n\tonKeyDown(ui) {\r\n\t\treturn e => {\r\n\t\t\tif (!getPlayer().isFreeplay) {\r\n\t\t\t\tif (e.code == \"Space\") {\r\n\t\t\t\t\te.preventDefault()\r\n\t\t\t\t\tif (!getPlayer().paused) {\r\n\t\t\t\t\t\tui.clickPause(e)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tui.clickPlay(e)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (e.code == \"ArrowUp\") {\r\n\t\t\t\t\tgetPlayer().increaseSpeed(0.05)\r\n\t\t\t\t\tui.getSpeedDisplayField().value =\r\n\t\t\t\t\t\tMath.floor(getPlayer().playbackSpeed * 100) + \"%\"\r\n\t\t\t\t} else if (e.code == \"ArrowDown\") {\r\n\t\t\t\t\tgetPlayer().increaseSpeed(-0.05)\r\n\t\t\t\t\tui.getSpeedDisplayField().value =\r\n\t\t\t\t\t\tMath.floor(getPlayer().playbackSpeed * 100) + \"%\"\r\n\t\t\t\t} else if (e.code == \"ArrowLeft\") {\r\n\t\t\t\t\tgetPlayer().setTime(getPlayer().getTime() - 5)\r\n\t\t\t\t} else if (e.code == \"ArrowRight\") {\r\n\t\t\t\t\tgetPlayer().setTime(getPlayer().getTime() + 5)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tonMouseDownProgressCanvas(render) {\r\n\t\treturn ev => {\r\n\t\t\tev.preventDefault()\r\n\t\t\tif (ev.target == render.getProgressBarCanvas()) {\r\n\t\t\t\tthis.grabbedProgressBar = true\r\n\t\t\t\tgetPlayer().wasPaused = getPlayer().paused\r\n\t\t\t\tgetPlayer().pause()\r\n\t\t\t\tlet newTime =\r\n\t\t\t\t\t(ev.clientX / render.renderDimensions.windowWidth) *\r\n\t\t\t\t\t(getPlayer().song.getEnd() / 1000)\r\n\r\n\t\t\t\tgetPlayer().setTime(newTime)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tonMouseMoveProgressCanvas(render) {\r\n\t\treturn ev => {\r\n\t\t\tif (this.grabbedProgressBar && getPlayer().song) {\r\n\t\t\t\tlet newTime =\r\n\t\t\t\t\t(ev.clientX / render.renderDimensions.windowWidth) *\r\n\t\t\t\t\t(getPlayer().song.getEnd() / 1000)\r\n\t\t\t\tgetPlayer().setTime(newTime)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tonMouseMove(ev, render, ui) {\r\n\t\tlet pos = this.getXYFromMouseEvent(ev)\r\n\t\tif (this.grabbedProgressBar && getPlayer().song) {\r\n\t\t\tlet newTime =\r\n\t\t\t\t(ev.clientX / render.renderDimensions.windowWidth) *\r\n\t\t\t\t(getPlayer().song.getEnd() / 1000)\r\n\t\t\tgetPlayer().setTime(newTime)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (this.grabbedMainCanvas && getPlayer().song) {\r\n\t\t\tif (this.lastYGrabbed) {\r\n\t\t\t\tlet alreadyScrolling = getPlayer().scrolling != 0\r\n\t\t\t\tlet yChange =\r\n\t\t\t\t\t(getSetting(\"reverseNoteDirection\") ? -1 : 1) *\r\n\t\t\t\t\t(this.lastYGrabbed - pos.y)\r\n\t\t\t\tif (!alreadyScrolling) {\r\n\t\t\t\t\tgetPlayer().setTime(\r\n\t\t\t\t\t\tgetPlayer().getTime() - render.getTimeFromHeight(yChange)\r\n\t\t\t\t\t)\r\n\t\t\t\t\tthis.grabSpeed.push(yChange)\r\n\t\t\t\t\tif (this.grabSpeed.length > 3) {\r\n\t\t\t\t\t\tthis.grabSpeed.splice(0, 1)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.lastYGrabbed = pos.y\r\n\t\t}\r\n\r\n\t\trender.setMouseCoords(ev.clientX, ev.clientY)\r\n\r\n\t\tui.mouseMoved()\r\n\t}\r\n\r\n\tonMouseDown(ev, render) {\r\n\t\tlet pos = this.getXYFromMouseEvent(ev)\r\n\t\tif (\r\n\t\t\tev.target == document.body &&\r\n\t\t\trender.isOnMainCanvas(pos) &&\r\n\t\t\t!this.grabbedProgressBar\r\n\t\t) {\r\n\t\t\tgetPlayer().wasPaused = getPlayer().paused\r\n\t\t\tev.preventDefault()\r\n\t\t\tthis.grabbedMainCanvas = true\r\n\t\t\tgetPlayer().pause()\r\n\t\t}\r\n\t}\r\n\r\n\tonMouseUp(ev, render) {\r\n\t\tlet pos = this.getXYFromMouseEvent(ev)\r\n\t\tif (ev.target == document.body && render.isOnMainCanvas(pos)) {\r\n\t\t\tev.preventDefault()\r\n\t\t}\r\n\t\tif (this.grabSpeed.length) {\r\n\t\t\tgetPlayer().scrolling = this.grabSpeed[this.grabSpeed.length - 1] / 50\r\n\t\t\tgetPlayer().handleScroll()\r\n\t\t\tthis.grabSpeed = []\r\n\t\t}\r\n\t\tif (this.grabbedProgressBar || this.grabbedMainCanvas) {\r\n\t\t\tif (!getPlayer().wasPaused) {\r\n\t\t\t\tgetPlayer().resume()\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.grabbedProgressBar = false\r\n\t\tthis.grabbedMainCanvas = false\r\n\t\tthis.lastYGrabbed = false\r\n\t}\r\n\r\n\tgetXYFromMouseEvent(ev) {\r\n\t\tif (ev.clientX == undefined) {\r\n\t\t\tif (ev.touches.length) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tx: ev.touches[ev.touches.length - 1].clientX,\r\n\t\t\t\t\ty: ev.touches[ev.touches.length - 1].clientY\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn { x: -1, y: -1 }\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn { x: ev.clientX, y: ev.clientY }\r\n\t}\r\n}\r\n","class MicInputHandler {\r\n\tconstructor() {\r\n\t\tif (navigator.mediaDevices === undefined) {\r\n\t\t\tnavigator.mediaDevices = {}\r\n\t\t}\r\n\r\n\t\tif (navigator.mediaDevices.getUserMedia === undefined) {\r\n\t\t\tnavigator.mediaDevices.getUserMedia = function (constraints) {\r\n\t\t\t\t// First get ahold of the legacy getUserMedia, if present\r\n\t\t\t\tvar getUserMedia =\r\n\t\t\t\t\tnavigator.webkitGetUserMedia ||\r\n\t\t\t\t\tnavigator.mozGetUserMedia ||\r\n\t\t\t\t\tnavigator.msGetUserMedia\r\n\r\n\t\t\t\t// Some browsers just don't implement it - return a rejected promise with an error\r\n\t\t\t\t// to keep a consistent interface\r\n\t\t\t\tif (!getUserMedia) {\r\n\t\t\t\t\treturn Promise.reject(\r\n\t\t\t\t\t\tnew Error(\"getUserMedia is not implemented in this browser\")\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Otherwise, wrap the call to the old navigator.getUserMedia with a Promise\r\n\t\t\t\treturn new Promise(function (resolve, reject) {\r\n\t\t\t\t\tgetUserMedia.call(navigator, constraints, resolve, reject)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.frequencies = {}\r\n\t\tthis.lastStrongestFrequency = 0\r\n\t\tlet audioContext = new (window.AudioContext || window.webkitAudioContext)({\r\n\t\t\tsampleRate: 8000\r\n\t\t})\r\n\t\tvar source\r\n\t\tvar analyser = audioContext.createAnalyser()\r\n\t\tanalyser.minDecibels = -90\r\n\t\tanalyser.maxDecibels = -10\r\n\t\tanalyser.smoothingTimeConstant = 0.5\r\n\t\tthis.audioContext = audioContext\r\n\t\tthis.analyser = analyser\r\n\r\n\t\tif (navigator.mediaDevices.getUserMedia) {\r\n\t\t\tconsole.log(\"getUserMedia supported.\")\r\n\t\t\tvar constraints = { audio: true }\r\n\t\t\tnavigator.mediaDevices\r\n\t\t\t\t.getUserMedia(constraints)\r\n\t\t\t\t.then(\r\n\t\t\t\t\tfunction (stream) {\r\n\t\t\t\t\t\tsource = audioContext.createMediaStreamSource(stream)\r\n\t\t\t\t\t\t// source.connect(audioContext.destination)\r\n\t\t\t\t\t\tsource.connect(analyser)\r\n\r\n\t\t\t\t\t\t// this.getCurrentFrequency()\r\n\t\t\t\t\t}.bind(this)\r\n\t\t\t\t)\r\n\t\t\t\t.catch(function (err) {\r\n\t\t\t\t\tconsole.log(\"The following gUM error occured: \" + err)\r\n\t\t\t\t})\r\n\t\t}\r\n\t}\r\n\tgetCurrentFrequency() {\r\n\t\tthis.analyser.fftSize = 2048\r\n\t\tvar bufferLength = this.analyser.fftSize\r\n\t\tvar dataArray = new Float32Array(bufferLength)\r\n\t\tthis.analyser.getFloatTimeDomainData(dataArray)\r\n\t\treturn this.autoCorrelate(dataArray, this.audioContext.sampleRate)\r\n\r\n\t\t// var dataArray = new Uint8Array(bufferLength)\r\n\t\t// this.analyser.getByteFrequencyData(dataArray)\r\n\t\t// let maxIndex = 0\r\n\t\t// let max = -Infinity\r\n\t\t// let tot = dataArray.reduce((a, b) => a + b, 0)\r\n\t\t// let weightedFrequency = 0\r\n\t\t// let strongestFrequency = 0\r\n\t\t// let sampleRate = this.audioContext.sampleRate\r\n\t\t// dataArray.forEach((value, index) => {\r\n\t\t// \tif (value > max && value > 50) {\r\n\t\t// \t\tmax = value\r\n\t\t// \t\tmaxIndex = index\r\n\r\n\t\t// \t\tstrongestFrequency = (sampleRate / 2) * (index / bufferLength)\r\n\r\n\t\t// \t\tif (index > 0 && index < bufferLength) {\r\n\t\t// \t\t\tlet nextFreq = (sampleRate / 2) * ((index + 1) / bufferLength)\r\n\t\t// \t\t\tlet nextVal = dataArray[index + 1]\r\n\t\t// \t\t\tlet nextDiff = Math.abs(nextVal - value)\r\n\r\n\t\t// \t\t\tlet prevFreq = (sampleRate / 2) * ((index - 1) / bufferLength)\r\n\t\t// \t\t\tlet prevVal = dataArray[index - 1]\r\n\t\t// \t\t\tlet prevDiff = Math.abs(prevVal - value)\r\n\r\n\t\t// \t\t\tlet totVals = value + prevVal + nextVal\r\n\t\t// \t\t\tlet totDiff = nextDiff + prevDiff\r\n\r\n\t\t// \t\t\tstrongestFrequency =\r\n\t\t// \t\t\t\t(strongestFrequency * value) / totVals +\r\n\t\t// \t\t\t\t(nextVal / totVals) * nextFreq +\r\n\t\t// \t\t\t\t(prevVal / totVals) * prevFreq\r\n\t\t// \t\t}\r\n\t\t// \t}\r\n\t\t// \tweightedFrequency +=\r\n\t\t// \t\t(value / tot) * (sampleRate / 2) * (index / bufferLength)\r\n\t\t// })\r\n\t\t// if (max > 0) {\r\n\t\t// \tconsole.log(strongestFrequency)\r\n\t\t// }\r\n\t\t// return strongestFrequency\r\n\t}\r\n\tautoCorrelate(buf, sampleRate) {\r\n\t\t// Implements the ACF2+ algorithm\r\n\t\tvar SIZE = buf.length\r\n\t\tvar rms = 0\r\n\r\n\t\tfor (var i = 0; i < SIZE; i++) {\r\n\t\t\tvar val = buf[i]\r\n\t\t\trms += val * val\r\n\t\t}\r\n\t\trms = Math.sqrt(rms / SIZE)\r\n\t\tif (rms < 0.01)\r\n\t\t\t// not enough signal\r\n\t\t\treturn -1\r\n\r\n\t\tvar r1 = 0,\r\n\t\t\tr2 = SIZE - 1,\r\n\t\t\tthres = 0.2\r\n\t\tfor (var i = 0; i < SIZE / 2; i++)\r\n\t\t\tif (Math.abs(buf[i]) < thres) {\r\n\t\t\t\tr1 = i\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\tfor (var i = 1; i < SIZE / 2; i++)\r\n\t\t\tif (Math.abs(buf[SIZE - i]) < thres) {\r\n\t\t\t\tr2 = SIZE - i\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\r\n\t\tbuf = buf.slice(r1, r2)\r\n\t\tSIZE = buf.length\r\n\r\n\t\tvar c = new Array(SIZE).fill(0)\r\n\t\tfor (var i = 0; i < SIZE; i++)\r\n\t\t\tfor (var j = 0; j < SIZE - i; j++) c[i] = c[i] + buf[j] * buf[j + i]\r\n\r\n\t\tvar d = 0\r\n\t\twhile (c[d] > c[d + 1]) d++\r\n\t\tvar maxval = -1,\r\n\t\t\tmaxpos = -1\r\n\t\tfor (var i = d; i < SIZE; i++) {\r\n\t\t\tif (c[i] > maxval) {\r\n\t\t\t\tmaxval = c[i]\r\n\t\t\t\tmaxpos = i\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar T0 = maxpos\r\n\r\n\t\tvar x1 = c[T0 - 1],\r\n\t\t\tx2 = c[T0],\r\n\t\t\tx3 = c[T0 + 1]\r\n\t\tlet a = (x1 + x3 - 2 * x2) / 2\r\n\t\tlet b = (x3 - x1) / 2\r\n\t\tif (a) T0 = T0 - b / (2 * a)\r\n\r\n\t\treturn sampleRate / T0\r\n\t}\r\n\tfrequencyToNote(frequency) {\r\n\t\tlet note = 12 * (Math.log(frequency / 440) / Math.log(2))\r\n\t\treturn Math.round(note) + 48\r\n\t}\r\n\r\n\tsetupUserMedia() {\r\n\t\tif (navigator.mediaDevices === undefined) {\r\n\t\t\tnavigator.mediaDevices = {}\r\n\t\t}\r\n\r\n\t\tif (navigator.mediaDevices.getUserMedia === undefined) {\r\n\t\t\tnavigator.mediaDevices.getUserMedia = function (constraints) {\r\n\t\t\t\t// First get ahold of the legacy getUserMedia, if present\r\n\t\t\t\tvar getUserMedia =\r\n\t\t\t\t\tnavigator.webkitGetUserMedia ||\r\n\t\t\t\t\tnavigator.mozGetUserMedia ||\r\n\t\t\t\t\tnavigator.msGetUserMedia\r\n\r\n\t\t\t\t// Some browsers just don't implement it - return a rejected promise with an error\r\n\t\t\t\t// to keep a consistent interface\r\n\t\t\t\tif (!getUserMedia) {\r\n\t\t\t\t\treturn Promise.reject(\r\n\t\t\t\t\t\tnew Error(\"getUserMedia is not implemented in this browser\")\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Otherwise, wrap the call to the old navigator.getUserMedia with a Promise\r\n\t\t\t\treturn new Promise(function (resolve, reject) {\r\n\t\t\t\t\tgetUserMedia.call(navigator, constraints, resolve, reject)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nvar theMicInputHandler = null // new MicInputHandler()\r\n\r\nexport const getMicInputHandler = () => {\r\n\treturn theMicInputHandler\r\n}\r\nexport const getCurrentMicFrequency = () => {\r\n\tif (!theMicInputHandler) return -1\r\n\treturn theMicInputHandler.getCurrentFrequency()\r\n}\r\n\r\nexport const getCurrentMicNote = () => {\r\n\tif (!theMicInputHandler) return -1\r\n\treturn theMidInputHandler.frequencyToNote(\r\n\t\ttheMicInputHandler.getCurrentFrequency()\r\n\t)\r\n}\r\n","class MidiInputHandler {\r\n\tconstructor() {\r\n\t\t// patch up prefixes\r\n\t\twindow.AudioContext = window.AudioContext || window.webkitAudioContext\r\n\r\n\t\tthis.noMidiMessage =\r\n\t\t\t\"You will only be able to play Midi-Files. To play along, you need to use a browser with Midi-support, connect a Midi-Device to your computer and reload the page.\"\r\n\t\tthis.init()\r\n\t}\r\n\tinit() {\r\n\t\tif (navigator.requestMIDIAccess)\r\n\t\t\tnavigator\r\n\t\t\t\t.requestMIDIAccess()\r\n\t\t\t\t.then(this.onMIDIInit.bind(this), this.onMIDIReject.bind(this))\r\n\t\telse\r\n\t\t\talert(\r\n\t\t\t\t\"No MIDI support present in your browser.  Check https://developer.mozilla.org/en-US/docs/Web/API/MIDIAccess#Browser_compatibility to see which Browsers support this feature.\"\r\n\t\t\t)\r\n\t}\r\n\tgetAvailableInputDevices() {\r\n\t\ttry {\r\n\t\t\treturn Array.from(this.midiAccess.inputs.values())\r\n\t\t} catch (e) {\r\n\t\t\treturn []\r\n\t\t}\r\n\t}\r\n\tgetAvailableOutputDevices() {\r\n\t\ttry {\r\n\t\t\treturn Array.from(this.midiAccess.outputs.values())\r\n\t\t} catch (e) {\r\n\t\t\treturn []\r\n\t\t}\r\n\t}\r\n\tsetNoteOnCallback(callback) {\r\n\t\tthis.noteOnCallback = callback\r\n\t}\r\n\taddInput(device) {\r\n\t\tdevice.onmidimessage = this.MIDIMessageEventHandler.bind(this)\r\n\t}\r\n\tclearInput(device) {\r\n\t\tdevice.onmidimessage = null\r\n\t}\r\n\taddOutput(device) {\r\n\t\tthis.activeOutput = device\r\n\t}\r\n\tclearOutput(device) {\r\n\t\tif (this.activeOutput == device) {\r\n\t\t\tthis.activeOutput = null\r\n\t\t}\r\n\t}\r\n\tclearInputs() {\r\n\t\tArray.from(this.midiAccess.inputs.values()).forEach(\r\n\t\t\tdevice => (device.onmidimessage = null)\r\n\t\t)\r\n\t}\r\n\tisDeviceActive(device) {\r\n\t\treturn device.onmidimessage != null\r\n\t}\r\n\tisOutputDeviceActive(device) {\r\n\t\treturn this.activeOutput == device\r\n\t}\r\n\tonMIDIInit(midi) {\r\n\t\tthis.midiAccess = midi\r\n\t}\r\n\tsetNoteOffCallback(callback) {\r\n\t\tthis.noteOffCallback = callback\r\n\t}\r\n\tonMIDIReject(err) {\r\n\t\talert(\"The MIDI system failed to start. \" + this.noMidiMessage)\r\n\t}\r\n\r\n\tMIDIMessageEventHandler(event) {\r\n\t\t// Mask off the lower nibble (MIDI channel, which we don't care about)\r\n\t\tswitch (event.data[0] & 0xf0) {\r\n\t\t\tcase 0x90:\r\n\t\t\t\tif (event.data[2] != 0) {\r\n\t\t\t\t\t// if velocity != 0 => note-on\r\n\t\t\t\t\tthis.noteOnCallback(parseInt(event.data[1]) - 21)\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\tcase 0x80:\r\n\t\t\t\tthis.noteOffCallback(parseInt(event.data[1]) - 21)\r\n\t\t\t\treturn\r\n\t\t}\r\n\t}\r\n\tgetActiveMidiOutput() {\r\n\t\treturn this.activeOutput\r\n\t}\r\n\tisOutputActive() {\r\n\t\treturn this.activeOutput ? true : false\r\n\t}\r\n\tisInputActive() {\r\n\t\tlet devices = this.getAvailableInputDevices()\r\n\t\tfor (let i = 0; i < devices.length; i++) {\r\n\t\t\tif (this.isDeviceActive(devices[i])) {\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false\r\n\t}\r\n\tplayNote(noteNumber, velocity, noteOffVelocity, delayOn, delayOff) {\r\n\t\tlet noteOnEvent = [0x90, noteNumber, velocity]\r\n\t\tlet noteOffEvent = [0x80, noteNumber, noteOffVelocity]\r\n\t\tthis.activeOutput.send(noteOnEvent, window.performance.now() + delayOn)\r\n\t\tthis.activeOutput.send(noteOffEvent, window.performance.now() + delayOff)\r\n\t}\r\n\tmidiOutNoteOff() {}\r\n\tnoteOnCallback() {}\r\n\tnoteOffCallback() {}\r\n}\r\nconst theMidiHandler = new MidiInputHandler()\r\nexport const getMidiHandler = () => {\r\n\treturn theMidiHandler\r\n}\r\n","export class MidiLoader {\r\n\t/**\r\n\t *\r\n\t * @param {String} url\r\n\t */\r\n\tstatic async loadFile(url) {\r\n\t\tconst response = await fetch(url)\r\n\t\tif (response.ok) {\r\n\t\t\tlet arrayBuffer = await response.arrayBuffer()\r\n\t\t\tif (arrayBuffer) {\r\n\t\t\t\tarrayBuffer = new Uint8Array(arrayBuffer)\r\n\r\n\t\t\t\treturn parseMidi(arrayBuffer)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthrow new Error(`could not load ${url}`)\r\n\t\t}\r\n\t}\r\n}\r\nfunction parseMidi(data) {\r\n\tvar p = new Parser(data)\r\n\r\n\tvar headerChunk = p.readChunk()\r\n\tif (headerChunk.id != \"MThd\")\r\n\t\tthrow \"Bad MIDI file.  Expected 'MHdr', got: '\" + headerChunk.id + \"'\"\r\n\tvar header = parseHeader(headerChunk.data)\r\n\r\n\tvar tracks = []\r\n\tfor (var i = 0; !p.eof() && i < header.numTracks; i++) {\r\n\t\tvar trackChunk = p.readChunk()\r\n\t\tif (trackChunk.id != \"MTrk\")\r\n\t\t\tthrow \"Bad MIDI file.  Expected 'MTrk', got: '\" + trackChunk.id + \"'\"\r\n\t\tvar track = parseTrack(trackChunk.data)\r\n\t\ttracks.push(track)\r\n\t}\r\n\r\n\tlet midiData = {\r\n\t\theader: header,\r\n\t\ttracks: tracks\r\n\t}\r\n\r\n\tlet temporalData = Parser.setTemporal(midiData)\r\n\treturn {\r\n\t\theader: header,\r\n\t\ttracks: tracks,\r\n\t\ttemporalData: temporalData\r\n\t}\r\n}\r\n\r\nfunction parseHeader(data) {\r\n\tvar p = new Parser(data)\r\n\r\n\tvar format = p.readUInt16()\r\n\tvar numTracks = p.readUInt16()\r\n\r\n\tvar result = {\r\n\t\tformat: format,\r\n\t\tnumTracks: numTracks\r\n\t}\r\n\r\n\tvar timeDivision = p.readUInt16()\r\n\tif (timeDivision & 0x8000) {\r\n\t\tresult.framesPerSecond = 0x100 - (timeDivision >> 8)\r\n\t\tresult.ticksPerFrame = timeDivision & 0xff\r\n\t} else {\r\n\t\tresult.ticksPerBeat = timeDivision\r\n\t}\r\n\r\n\treturn result\r\n}\r\n\r\nfunction parseTrack(data) {\r\n\tlet parser = new Parser(data)\r\n\r\n\tlet events = []\r\n\twhile (!parser.eof()) {\r\n\t\tlet event = readEvent()\r\n\t\tevents.push(event)\r\n\t}\r\n\r\n\treturn events\r\n\r\n\tvar lastEventTypeByte = null\r\n\r\n\tfunction readEvent() {\r\n\t\tvar event = {}\r\n\t\tevent.deltaTime = parser.readVarInt()\r\n\r\n\t\tvar eventTypeByte = parser.readUInt8()\r\n\r\n\t\tif ((eventTypeByte & 0xf0) === 0xf0) {\r\n\t\t\t// system / meta event\r\n\t\t\tif (eventTypeByte === 0xff) {\r\n\t\t\t\t// meta event\r\n\t\t\t\tevent.meta = true\r\n\t\t\t\tvar metatypeByte = parser.readUInt8()\r\n\t\t\t\tvar length = parser.readVarInt()\r\n\t\t\t\tswitch (metatypeByte) {\r\n\t\t\t\t\tcase 0x00:\r\n\t\t\t\t\t\tevent.type = \"sequenceNumber\"\r\n\t\t\t\t\t\tif (length !== 2)\r\n\t\t\t\t\t\t\tthrow (\r\n\t\t\t\t\t\t\t\t\"Expected length for sequenceNumber event is 2, got \" + length\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\tevent.number = parser.readUInt16()\r\n\t\t\t\t\t\treturn event\r\n\t\t\t\t\tcase 0x01:\r\n\t\t\t\t\t\tevent.type = \"text\"\r\n\t\t\t\t\t\tevent.text = parser.readString(length)\r\n\t\t\t\t\t\treturn event\r\n\t\t\t\t\tcase 0x02:\r\n\t\t\t\t\t\tevent.type = \"copyrightNotice\"\r\n\t\t\t\t\t\tevent.text = parser.readString(length)\r\n\t\t\t\t\t\treturn event\r\n\t\t\t\t\tcase 0x03:\r\n\t\t\t\t\t\tevent.type = \"trackName\"\r\n\t\t\t\t\t\tevent.text = parser.readString(length)\r\n\t\t\t\t\t\treturn event\r\n\t\t\t\t\tcase 0x04:\r\n\t\t\t\t\t\tevent.type = \"instrumentName\"\r\n\t\t\t\t\t\tevent.text = parser.readString(length)\r\n\t\t\t\t\t\treturn event\r\n\t\t\t\t\tcase 0x05:\r\n\t\t\t\t\t\tevent.type = \"lyrics\"\r\n\t\t\t\t\t\tevent.text = parser.readString(length)\r\n\t\t\t\t\t\treturn event\r\n\t\t\t\t\tcase 0x06:\r\n\t\t\t\t\t\tevent.type = \"marker\"\r\n\t\t\t\t\t\tevent.text = parser.readString(length)\r\n\t\t\t\t\t\treturn event\r\n\t\t\t\t\tcase 0x07:\r\n\t\t\t\t\t\tevent.type = \"cuePoint\"\r\n\t\t\t\t\t\tevent.text = parser.readString(length)\r\n\t\t\t\t\t\treturn event\r\n\t\t\t\t\tcase 0x20:\r\n\t\t\t\t\t\tevent.type = \"channelPrefix\"\r\n\t\t\t\t\t\tif (length != 1)\r\n\t\t\t\t\t\t\tthrow (\r\n\t\t\t\t\t\t\t\t\"Expected length for channelPrefix event is 1, got \" + length\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\tevent.channel = parser.readUInt8()\r\n\t\t\t\t\t\treturn event\r\n\t\t\t\t\tcase 0x21:\r\n\t\t\t\t\t\tevent.type = \"portPrefix\"\r\n\t\t\t\t\t\tif (length != 1)\r\n\t\t\t\t\t\t\tthrow \"Expected length for portPrefix event is 1, got \" + length\r\n\t\t\t\t\t\tevent.port = parser.readUInt8()\r\n\t\t\t\t\t\treturn event\r\n\t\t\t\t\tcase 0x2f:\r\n\t\t\t\t\t\tevent.type = \"endOfTrack\"\r\n\t\t\t\t\t\tif (length != 0)\r\n\t\t\t\t\t\t\tthrow \"Expected length for endOfTrack event is 0, got \" + length\r\n\t\t\t\t\t\treturn event\r\n\t\t\t\t\tcase 0x51:\r\n\t\t\t\t\t\tevent.type = \"setTempo\"\r\n\t\t\t\t\t\tif (length != 3)\r\n\t\t\t\t\t\t\tthrow \"Expected length for setTempo event is 3, got \" + length\r\n\t\t\t\t\t\tevent.microsecondsPerBeat = parser.readUInt24()\r\n\t\t\t\t\t\treturn event\r\n\t\t\t\t\tcase 0x54:\r\n\t\t\t\t\t\tevent.type = \"smpteOffset\"\r\n\t\t\t\t\t\tif (length != 5)\r\n\t\t\t\t\t\t\tthrow \"Expected length for smpteOffset event is 5, got \" + length\r\n\t\t\t\t\t\tvar hourByte = parser.readUInt8()\r\n\t\t\t\t\t\tvar FRAME_RATES = { 0x00: 24, 0x20: 25, 0x40: 29, 0x60: 30 }\r\n\t\t\t\t\t\tevent.frameRate = FRAME_RATES[hourByte & 0x60]\r\n\t\t\t\t\t\tevent.hour = hourByte & 0x1f\r\n\t\t\t\t\t\tevent.min = parser.readUInt8()\r\n\t\t\t\t\t\tevent.sec = parser.readUInt8()\r\n\t\t\t\t\t\tevent.frame = parser.readUInt8()\r\n\t\t\t\t\t\tevent.subFrame = parser.readUInt8()\r\n\t\t\t\t\t\treturn event\r\n\t\t\t\t\tcase 0x58:\r\n\t\t\t\t\t\tevent.type = \"timeSignature\"\r\n\t\t\t\t\t\tif (length != 4)\r\n\t\t\t\t\t\t\tthrow (\r\n\t\t\t\t\t\t\t\t\"Expected length for timeSignature event is 4, got \" + length\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\tevent.numerator = parser.readUInt8()\r\n\t\t\t\t\t\tevent.denominator = 1 << parser.readUInt8()\r\n\t\t\t\t\t\tevent.metronome = parser.readUInt8()\r\n\t\t\t\t\t\tevent.thirtyseconds = parser.readUInt8()\r\n\t\t\t\t\t\treturn event\r\n\t\t\t\t\tcase 0x59:\r\n\t\t\t\t\t\tevent.type = \"keySignature\"\r\n\t\t\t\t\t\tif (length != 2)\r\n\t\t\t\t\t\t\tthrow \"Expected length for keySignature event is 2, got \" + length\r\n\t\t\t\t\t\tevent.key = parser.readInt8()\r\n\t\t\t\t\t\tevent.scale = parser.readUInt8()\r\n\t\t\t\t\t\treturn event\r\n\t\t\t\t\tcase 0x7f:\r\n\t\t\t\t\t\tevent.type = \"sequencerSpecific\"\r\n\t\t\t\t\t\tevent.data = parser.readBytes(length)\r\n\t\t\t\t\t\treturn event\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tevent.type = \"unknownMeta\"\r\n\t\t\t\t\t\tevent.data = parser.readBytes(length)\r\n\t\t\t\t\t\tevent.metatypeByte = metatypeByte\r\n\t\t\t\t\t\treturn event\r\n\t\t\t\t}\r\n\t\t\t} else if (eventTypeByte == 0xf0) {\r\n\t\t\t\tevent.type = \"sysEx\"\r\n\t\t\t\tvar length = parser.readVarInt()\r\n\t\t\t\tevent.data = parser.readBytes(length)\r\n\t\t\t\treturn event\r\n\t\t\t} else if (eventTypeByte == 0xf7) {\r\n\t\t\t\tevent.type = \"endSysEx\"\r\n\t\t\t\tvar length = parser.readVarInt()\r\n\t\t\t\tevent.data = parser.readBytes(length)\r\n\t\t\t\treturn event\r\n\t\t\t} else {\r\n\t\t\t\tthrow \"Unrecognised MIDI event type byte: \" + eventTypeByte\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// channel event\r\n\t\t\tvar param1\r\n\t\t\tif ((eventTypeByte & 0x80) === 0) {\r\n\t\t\t\t// running status - reuse lastEventTypeByte as the event type.\r\n\t\t\t\t// eventTypeByte is actually the first parameter\r\n\t\t\t\tif (lastEventTypeByte === null)\r\n\t\t\t\t\tthrow \"Running status byte encountered before status byte\"\r\n\t\t\t\tparam1 = eventTypeByte\r\n\t\t\t\teventTypeByte = lastEventTypeByte\r\n\t\t\t\tevent.running = true\r\n\t\t\t} else {\r\n\t\t\t\tparam1 = parser.readUInt8()\r\n\t\t\t\tlastEventTypeByte = eventTypeByte\r\n\t\t\t}\r\n\t\t\tvar eventType = eventTypeByte >> 4\r\n\t\t\tevent.channel = eventTypeByte & 0x0f\r\n\t\t\tswitch (eventType) {\r\n\t\t\t\tcase 0x08:\r\n\t\t\t\t\tevent.type = \"noteOff\"\r\n\t\t\t\t\tevent.midiNoteNumber = param1\r\n\t\t\t\t\tevent.noteNumber = param1 - 21\r\n\t\t\t\t\tevent.velocity = parser.readUInt8()\r\n\t\t\t\t\treturn event\r\n\t\t\t\tcase 0x09:\r\n\t\t\t\t\tvar velocity = parser.readUInt8()\r\n\t\t\t\t\tevent.type = velocity === 0 ? \"noteOff\" : \"noteOn\"\r\n\t\t\t\t\tevent.midiNoteNumber = param1\r\n\t\t\t\t\tevent.noteNumber = param1 - 21\r\n\t\t\t\t\tevent.velocity = velocity\r\n\t\t\t\t\tif (velocity === 0) event.byte9 = true\r\n\t\t\t\t\treturn event\r\n\t\t\t\tcase 0x0a:\r\n\t\t\t\t\tevent.type = \"noteAftertouch\"\r\n\t\t\t\t\tevent.midiNoteNumber = param1\r\n\t\t\t\t\tevent.noteNumber = param1 - 21\r\n\t\t\t\t\tevent.amount = parser.readUInt8()\r\n\t\t\t\t\treturn event\r\n\t\t\t\tcase 0x0b:\r\n\t\t\t\t\tevent.type = \"controller\"\r\n\t\t\t\t\tevent.controllerType = param1\r\n\t\t\t\t\tevent.value = parser.readUInt8()\r\n\t\t\t\t\treturn event\r\n\t\t\t\tcase 0x0c:\r\n\t\t\t\t\tevent.type = \"programChange\"\r\n\t\t\t\t\tevent.programNumber = param1\r\n\t\t\t\t\treturn event\r\n\t\t\t\tcase 0x0d:\r\n\t\t\t\t\tevent.type = \"channelAftertouch\"\r\n\t\t\t\t\tevent.amount = param1\r\n\t\t\t\t\treturn event\r\n\t\t\t\tcase 0x0e:\r\n\t\t\t\t\tevent.type = \"pitchBend\"\r\n\t\t\t\t\tevent.value = param1 + (parser.readUInt8() << 7) - 0x2000\r\n\t\t\t\t\treturn event\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow \"Unrecognised MIDI event type: \" + eventType\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass Parser {\r\n\tconstructor(data) {\r\n\t\tthis.buffer = data\r\n\t\tthis.bufferLen = this.buffer.length\r\n\t\tthis.pos = 0\r\n\t}\r\n\r\n\teof() {\r\n\t\treturn this.pos >= this.bufferLen\r\n\t}\r\n\treadUInt8() {\r\n\t\tlet result = this.buffer[this.pos]\r\n\t\tthis.pos += 1\r\n\t\treturn result\r\n\t}\r\n\treadInt8() {\r\n\t\tlet u = this.readUInt8()\r\n\t\treturn u & 0x80 ? u - 0x100 : u\r\n\t}\r\n\treadUInt16() {\r\n\t\tlet b0 = this.readUInt8()\r\n\t\tlet b1 = this.readUInt8()\r\n\t\treturn (b0 << 8) + b1\r\n\t}\r\n\treadInt16() {\r\n\t\tlet u = this.readUInt16()\r\n\t\treturn u & 0x8000 ? u - 0x10000 : u\r\n\t}\r\n\treadUInt24() {\r\n\t\tlet b0 = this.readUInt8()\r\n\t\tlet b1 = this.readUInt8()\r\n\t\tlet b2 = this.readUInt8()\r\n\t\treturn (b0 << 16) + (b1 << 8) + b2\r\n\t}\r\n\treadInt24() {\r\n\t\tlet u = this.readUInt24()\r\n\t\treturn u & 0x800000 ? u - 0x1000000 : u\r\n\t}\r\n\treadUInt32() {\r\n\t\tlet b0 = this.readUInt8()\r\n\t\tlet b1 = this.readUInt8()\r\n\t\tlet b2 = this.readUInt8()\r\n\t\tlet b3 = this.readUInt8()\r\n\t\treturn (b0 << 24) + (b1 << 16) + (b2 << 8) + b3\r\n\t}\r\n\treadBytes(length) {\r\n\t\tlet bytes = this.buffer.slice(this.pos, this.pos + length)\r\n\t\tthis.pos += length\r\n\t\treturn bytes\r\n\t}\r\n\treadString(length) {\r\n\t\tlet bytes = this.readBytes(length)\r\n\t\treturn String.fromCharCode.apply(null, bytes)\r\n\t}\r\n\treadVarInt() {\r\n\t\tlet result = 0\r\n\t\twhile (!this.eof()) {\r\n\t\t\tlet b = this.readUInt8()\r\n\t\t\tif (b & 0x80) {\r\n\t\t\t\tresult += b & 0x7f\r\n\t\t\t\tresult <<= 7\r\n\t\t\t} else {\r\n\t\t\t\treturn result + b\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result\r\n\t}\r\n\treadChunk() {\r\n\t\tlet id = this.readString(4)\r\n\t\tlet length = this.readUInt32()\r\n\t\tlet data = this.readBytes(length)\r\n\t\treturn {\r\n\t\t\tid: id,\r\n\t\t\tdata: data,\r\n\t\t\tlength: length\r\n\t\t}\r\n\t}\r\n\r\n\t/*********\r\n\t * <ADAPTED FROM JASMID>\r\n\t * Replayer.js\r\n\t *********/\r\n\tstatic setTemporal(midiObj) {\r\n\t\tlet trackStates = []\r\n\t\tlet beatsPerMinute = 120\r\n\t\tlet ticksPerBeat = midiObj.header.ticksPerBeat\r\n\t\tvar totTime = 0\r\n\t\tvar bpms = []\r\n\t\tvar generatedBeats = 0\r\n\t\tvar beatsBySecond = { 0: [0] }\r\n\t\tvar sustainsBySecond = {}\r\n\t\tlet channels = getDefaultChannels()\r\n\t\tfor (let t in midiObj.tracks) {\r\n\t\t\tlet track = midiObj.tracks[t]\r\n\t\t\ttrackStates.push({\r\n\t\t\t\tnextEventIndex: 0,\r\n\t\t\t\tticksToNextEvent: track.length ? track[0].deltaTime : null\r\n\t\t\t})\r\n\t\t}\r\n\t\tvar midiEvent\r\n\r\n\t\tfunction getNextEvent() {\r\n\t\t\tvar ticksToNextEvent = null\r\n\t\t\tvar nextEventTrack = null\r\n\t\t\tvar nextEventIndex = null\r\n\r\n\t\t\t//search all tracks for next event.\r\n\t\t\tfor (var i = 0; i < trackStates.length; i++) {\r\n\t\t\t\tif (\r\n\t\t\t\t\ttrackStates[i].ticksToNextEvent != null &&\r\n\t\t\t\t\t(ticksToNextEvent == null ||\r\n\t\t\t\t\t\ttrackStates[i].ticksToNextEvent < ticksToNextEvent)\r\n\t\t\t\t) {\r\n\t\t\t\t\tticksToNextEvent = trackStates[i].ticksToNextEvent\r\n\t\t\t\t\tnextEventTrack = i\r\n\t\t\t\t\tnextEventIndex = trackStates[i].nextEventIndex\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (nextEventTrack != null) {\r\n\t\t\t\t// get next event from that track and\r\n\t\t\t\tvar nextEvent = midiObj.tracks[nextEventTrack][nextEventIndex]\r\n\t\t\t\tif (midiObj.tracks[nextEventTrack][nextEventIndex + 1]) {\r\n\t\t\t\t\ttrackStates[nextEventTrack].ticksToNextEvent +=\r\n\t\t\t\t\t\tmidiObj.tracks[nextEventTrack][nextEventIndex + 1].deltaTime\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttrackStates[nextEventTrack].ticksToNextEvent = null\r\n\t\t\t\t}\r\n\t\t\t\ttrackStates[nextEventTrack].nextEventIndex += 1\r\n\t\t\t\t// advance timings on all tracks\r\n\t\t\t\tfor (var i = 0; i < trackStates.length; i++) {\r\n\t\t\t\t\tif (trackStates[i].ticksToNextEvent != null) {\r\n\t\t\t\t\t\ttrackStates[i].ticksToNextEvent -= ticksToNextEvent\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn {\r\n\t\t\t\t\tticksToEvent: ticksToNextEvent,\r\n\t\t\t\t\tevent: nextEvent,\r\n\t\t\t\t\ttrack: nextEventTrack\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn null\r\n\t\t\t}\r\n\t\t} //end getNextEvent\r\n\r\n\t\tfunction processNext() {\r\n\t\t\tlet newBPM = false\r\n\t\t\tif (midiEvent.event.type == \"setTempo\") {\r\n\t\t\t\t// tempo change events can occur anywhere in the middle and affect events that follow\r\n\t\t\t\tbeatsPerMinute = 60000000 / midiEvent.event.microsecondsPerBeat\r\n\t\t\t\tnewBPM = true\r\n\t\t\t}\r\n\t\t\tif (\r\n\t\t\t\tmidiEvent.event.type == \"controller\" &&\r\n\t\t\t\tmidiEvent.event.controllerType == 7\r\n\t\t\t) {\r\n\t\t\t\tchannels[midiEvent.event.channel].volume = midiEvent.event.value\r\n\t\t\t}\r\n\r\n\t\t\tvar beatsToGenerate = 0\r\n\t\t\tvar secondsToGenerate = 0\r\n\t\t\tif (midiEvent.ticksToEvent > 0) {\r\n\t\t\t\tbeatsToGenerate = midiEvent.ticksToEvent / ticksPerBeat\r\n\t\t\t\tsecondsToGenerate = beatsToGenerate / (beatsPerMinute / 60)\r\n\t\t\t}\r\n\t\t\tvar time = secondsToGenerate * 1000 || 0\r\n\t\t\tmidiEvent.event.temporalDelta = time\r\n\t\t\ttotTime += time\r\n\t\t\tmidiEvent.event.timestamp = totTime\r\n\r\n\t\t\t//Keep track of sustain on/offs\r\n\t\t\tif (\r\n\t\t\t\tmidiEvent.event.type == \"controller\" &&\r\n\t\t\t\tmidiEvent.event.controllerType == 64\r\n\t\t\t) {\r\n\t\t\t\tlet currentSecond = Math.floor(totTime / 1000)\r\n\t\t\t\tif (!sustainsBySecond.hasOwnProperty(currentSecond)) {\r\n\t\t\t\t\tsustainsBySecond[currentSecond] = []\r\n\t\t\t\t}\r\n\t\t\t\tsustainsBySecond[currentSecond].push({\r\n\t\t\t\t\ttimestamp: totTime,\r\n\t\t\t\t\tisOn: midiEvent.event.value > 64,\r\n\t\t\t\t\tvalue: midiEvent.event.value\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\t//keep track of completed beats to show beatLines\r\n\t\t\tgeneratedBeats +=\r\n\t\t\t\tMath.floor(ticksPerBeat * beatsToGenerate) / ticksPerBeat\r\n\t\t\twhile (generatedBeats >= 1) {\r\n\t\t\t\tgeneratedBeats -= 1\r\n\t\t\t\tlet beatTime = totTime - generatedBeats * secondsToGenerate * 1000\r\n\t\t\t\tlet beatSecond = Math.floor(beatTime / 1000)\r\n\t\t\t\tif (!beatsBySecond.hasOwnProperty(beatSecond)) {\r\n\t\t\t\t\tbeatsBySecond[beatSecond] = []\r\n\t\t\t\t}\r\n\t\t\t\tbeatsBySecond[beatSecond].push(beatTime)\r\n\t\t\t}\r\n\r\n\t\t\tif (midiEvent.event.hasOwnProperty(\"channel\")) {\r\n\t\t\t\tmidiEvent.event.channelVolume = channels[midiEvent.event.channel].volume\r\n\t\t\t}\r\n\t\t\tmidiEvent = getNextEvent()\r\n\t\t\tif (newBPM) {\r\n\t\t\t\tbpms.push({\r\n\t\t\t\t\tbpm: beatsPerMinute,\r\n\t\t\t\t\ttimestamp: totTime\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t} //end processNext\r\n\r\n\t\tif ((midiEvent = getNextEvent())) {\r\n\t\t\twhile (midiEvent) processNext(true)\r\n\t\t}\r\n\t\t/*********\r\n\t\t * </ADAPTED FROM JASMID>\r\n\t\t *********/\r\n\t\treturn { bpms, beatsBySecond, sustainsBySecond: sustainsBySecond }\r\n\t}\r\n}\r\n\r\nfunction getDefaultChannels() {\r\n\tlet channels = {}\r\n\tfor (var i = 0; i <= 15; i++) {\r\n\t\tchannels[i] = {\r\n\t\t\tinstrument: i,\r\n\t\t\tpitchBend: 0,\r\n\t\t\tvolume: 127,\r\n\t\t\tvolumeControl: 50,\r\n\t\t\tmute: false,\r\n\t\t\tmono: false,\r\n\t\t\tomni: false,\r\n\t\t\tsolo: false\r\n\t\t}\r\n\t}\r\n\tchannels[9].instrument = -1\r\n\treturn channels\r\n}\r\n","import { getSetting } from \"../settings/Settings.js\"\r\nimport { isBlack } from \"../Util.js\"\r\n/**\r\n * Class that renders the background of the main canvas\r\n */\r\nexport class BackgroundRender {\r\n\tconstructor(ctx, renderDimensions) {\r\n\t\tthis.ctx = ctx\r\n\t\tthis.renderDimensions = renderDimensions\r\n\t\tthis.renderDimensions.registerResizeCallback(this.render.bind(this))\r\n\t\tthis.render()\r\n\t}\r\n\trenderIfColorsChanged() {\r\n\t\tif (\r\n\t\t\tthis.col1 != getSetting(\"bgCol1\") ||\r\n\t\t\tthis.col2 != getSetting(\"bgCol2\") ||\r\n\t\t\tthis.col3 != getSetting(\"bgCol3\") ||\r\n\t\t\tthis.pianoPosition != getSetting(\"pianoPosition\")\r\n\t\t) {\r\n\t\t\tthis.render()\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\tlet c = this.ctx\r\n\t\tc.clearRect(\r\n\t\t\t0,\r\n\t\t\t0,\r\n\t\t\tthis.renderDimensions.windowWidth,\r\n\t\t\tthis.renderDimensions.windowHeight\r\n\t\t)\r\n\r\n\t\tlet reversed = getSetting(\"reverseNoteDirection\")\r\n\t\tlet bgHeight = reversed\r\n\t\t\t? this.renderDimensions.windowHeight -\r\n\t\t\t  this.renderDimensions.getAbsolutePianoPosition()\r\n\t\t\t: this.renderDimensions.getAbsolutePianoPosition()\r\n\t\tlet bgY = reversed ? this.renderDimensions.getAbsolutePianoPosition() : 0\r\n\t\tconst col1 = getSetting(\"bgCol1\")\r\n\t\tconst col2 = getSetting(\"bgCol2\")\r\n\t\tconst col3 = getSetting(\"bgCol3\")\r\n\t\tc.strokeStyle = col1\r\n\t\tc.fillStyle = col2\r\n\t\tlet whiteKey = 0\r\n\t\tfor (let i = 0; i < 88; i++) {\r\n\t\t\tif (!isBlack(i)) {\r\n\t\t\t\tc.strokeStyle = col3\r\n\t\t\t\tc.fillStyle = (i + 2) % 2 ? col1 : col2\r\n\t\t\t\tc.lineWidth = 1\r\n\r\n\t\t\t\tlet dim = this.renderDimensions.getKeyDimensions(i)\r\n\t\t\t\tc.fillRect(dim.x, bgY, dim.w, bgHeight)\r\n\r\n\t\t\t\tif (1 + (whiteKey % 7) == 3) {\r\n\t\t\t\t\tc.lineWidth = 2\r\n\t\t\t\t\tc.beginPath()\r\n\t\t\t\t\tc.moveTo(dim.x, bgY)\r\n\t\t\t\t\tc.lineTo(dim.x, bgY + bgHeight)\r\n\t\t\t\t\tc.stroke()\r\n\t\t\t\t\tc.closePath()\r\n\t\t\t\t}\r\n\t\t\t\twhiteKey++\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.col1 = col1\r\n\t\tthis.col2 = col2\r\n\t\tthis.col3 = col3\r\n\t\tthis.pianoPosition = getSetting(\"pianoPosition\")\r\n\t}\r\n}\r\n","import { CONST } from \"../data/CONST.js\"\r\nimport { getSetting } from \"../settings/Settings.js\"\r\nimport { formatTime } from \"../Util.js\"\r\n\r\n/**\r\n * Class to render some general debug-info or when mouse is hovered over a note.\r\n */\r\nexport class DebugRender {\r\n\tconstructor(active, ctx, renderDimensions) {\r\n\t\tthis.noteInfoBoxesToDraw = []\r\n\t\tthis.active = active\r\n\t\tthis.ctx = ctx\r\n\t\tthis.renderDimensions = renderDimensions\r\n\r\n\t\tthis.fpsFilterStrength = 5\r\n\t\tthis.frameTime = 0\r\n\t\tthis.lastTimestamp = window.performance.now()\r\n\t}\r\n\taddNote(note) {\r\n\t\tthis.noteInfoBoxesToDraw.push(note)\r\n\t}\r\n\trender(renderInfos, mouseX, mouseY, menuHeight) {\r\n\t\tthis.thisTimestamp = window.performance.now()\r\n\t\tif (getSetting(\"showFps\")) {\r\n\t\t\tlet timePassed = this.thisTimestamp - this.lastTimestamp\r\n\t\t\tthis.frameTime += (timePassed - this.frameTime) / this.fpsFilterStrength\r\n\t\t\tthis.ctx.font = \"20px Arial black\"\r\n\t\t\tthis.ctx.fillStyle = \"rgba(255,255,255,0.8)\"\r\n\t\t\tthis.ctx.fillText(\r\n\t\t\t\t(1000 / this.frameTime).toFixed(0) + \" FPS\",\r\n\t\t\t\t20,\r\n\t\t\t\tmenuHeight + 60\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\tthis.lastTimestamp = this.thisTimestamp\r\n\r\n\t\tthis.renderNoteDebugInfo(renderInfos, mouseX, mouseY)\r\n\t}\r\n\trenderNoteDebugInfo(renderInfos, mouseX, mouseY) {\r\n\t\tif (getSetting(\"showNoteDebugInfo\")) {\r\n\t\t\tlet amountOfNotesDrawn = 0\r\n\t\t\tObject.keys(renderInfos).forEach(trackIndex => {\r\n\t\t\t\trenderInfos[trackIndex].black\r\n\t\t\t\t\t.filter(renderInfo =>\r\n\t\t\t\t\t\tthis.isMouseInRenderInfo(renderInfo, mouseX, mouseY)\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.forEach(renderInfo => {\r\n\t\t\t\t\t\tthis.drawNoteInfoBox(renderInfo, mouseX, mouseY, amountOfNotesDrawn)\r\n\t\t\t\t\t\tamountOfNotesDrawn++\r\n\t\t\t\t\t})\r\n\t\t\t\trenderInfos[trackIndex].white\r\n\t\t\t\t\t.filter(renderInfo =>\r\n\t\t\t\t\t\tthis.isMouseInRenderInfo(renderInfo, mouseX, mouseY)\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.forEach(renderInfo => {\r\n\t\t\t\t\t\tthis.drawNoteInfoBox(renderInfo, mouseX, mouseY, amountOfNotesDrawn)\r\n\t\t\t\t\t\tamountOfNotesDrawn++\r\n\t\t\t\t\t})\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\tisMouseInRenderInfo(renderInfo, mouseX, mouseY) {\r\n\t\treturn (\r\n\t\t\tmouseX > renderInfo.x &&\r\n\t\t\tmouseX < renderInfo.x + renderInfo.w &&\r\n\t\t\tmouseY > renderInfo.y &&\r\n\t\t\tmouseY < renderInfo.y + renderInfo.h\r\n\t\t)\r\n\t}\r\n\r\n\tdrawNoteInfoBox(renderInfo, mouseX, mouseY, amountOfNotesDrawn) {\r\n\t\tlet c = this.ctx\r\n\t\tc.fillStyle = \"white\"\r\n\t\tc.font = \"12px Arial black\"\r\n\t\tc.textBaseline = \"top\"\r\n\t\tc.strokeStyle = renderInfo.fillStyle\r\n\t\tc.lineWidth = 4\r\n\r\n\t\tlet lines = [\r\n\t\t\t\"Note: \" + CONST.MIDI_NOTE_TO_KEY[renderInfo.noteNumber],\r\n\t\t\t\"NoteNumber: \" + renderInfo.noteNumber,\r\n\t\t\t\"MidiNoteNumber: \" + renderInfo.midiNoteNumber,\r\n\t\t\t\"Start: \" + renderInfo.timestamp,\r\n\t\t\t\"End: \" + renderInfo.offTime,\r\n\t\t\t\"Duration: \" + renderInfo.duration,\r\n\t\t\t\"Velocity: \" + renderInfo.velocity,\r\n\t\t\t\"Instrument: \" + renderInfo.instrument,\r\n\t\t\t\"Track: \" + renderInfo.track,\r\n\t\t\t\"Channel: \" + renderInfo.channel\r\n\t\t]\r\n\t\tlet left = mouseX > this.renderDimensions.windowWidth / 2 ? -160 : 60\r\n\t\tlet top =\r\n\t\t\tmouseY > this.renderDimensions.windowHeight / 2\r\n\t\t\t\t? -10 - 14 * lines.length\r\n\t\t\t\t: 10\r\n\r\n\t\ttop += amountOfNotesDrawn * lines.length * 15\r\n\t\tc.beginPath()\r\n\t\tc.moveTo(mouseX + left - 4, mouseY + top)\r\n\t\tc.lineTo(mouseX + left - 4, mouseY + top + lines.length * 14)\r\n\t\tc.stroke()\r\n\t\tfor (let l in lines) {\r\n\t\t\tc.fillText(lines[l], mouseX + left, mouseY + top + 14 * l)\r\n\t\t}\r\n\t}\r\n}\r\n","import { getCurrentSong } from \"../player/Player.js\"\r\nimport { getSetting } from \"../settings/Settings.js\"\r\n\r\n/**\r\n * Class to render the markers in the midi-song\r\n */\r\nexport class InSongTextRenderer {\r\n\tconstructor(ctx, renderDimensions) {\r\n\t\tthis.ctx = ctx\r\n\t\tthis.renderDimensions = renderDimensions\r\n\t}\r\n\trender(time) {\r\n\t\tif (time > -0.7) return\r\n\r\n\t\tlet c = this.ctx\r\n\t\tc.fillStyle = \"rgba(255,255,255,0.8)\"\r\n\t\tc.strokeStyle = \"rgba(255,255,255,0.8)\"\r\n\t\tc.font = \"40px Arial black\"\r\n\t\tc.textBaseline = \"top\"\r\n\t\tc.lineWidth = 1.5\r\n\t\tlet text = getCurrentSong().name\r\n\t\tlet y = this.renderDimensions.getYForTime(-700 - time * 1000)\r\n\t\tlet txtWd = c.measureText(text).width\r\n\t\tc.fillText(text, this.renderDimensions.windowWidth / 2 - txtWd / 2, y + 3)\r\n\t}\r\n}\r\n","import { getSetting } from \"../settings/Settings.js\"\r\n\r\n/**\r\n * Class to render the markers in the midi-song\r\n */\r\nexport class MarkerRenderer {\r\n\tconstructor(ctx, renderDimensions) {\r\n\t\tthis.ctx = ctx\r\n\t\tthis.renderDimensions = renderDimensions\r\n\t}\r\n\trender(time, markers) {\r\n\t\tif (getSetting(\"showMarkersSong\")) {\r\n\t\t\tlet lookAheadTime = Math.ceil(\r\n\t\t\t\ttime + this.renderDimensions.getSecondsDisplayedBefore() + 1\r\n\t\t\t)\r\n\r\n\t\t\tlet c = this.ctx\r\n\t\t\tc.fillStyle = \"rgba(255,255,255,0.8)\"\r\n\t\t\tc.strokeStyle = \"rgba(255,255,255,0.8)\"\r\n\t\t\tc.font = \"25px Arial black\"\r\n\t\t\tc.textBaseline = \"top\"\r\n\t\t\tc.lineWidth = 1.5\r\n\t\t\tmarkers.forEach(marker => {\r\n\t\t\t\tif (\r\n\t\t\t\t\tmarker.timestamp / 1000 >= time &&\r\n\t\t\t\t\tmarker.timestamp / 1000 < lookAheadTime\r\n\t\t\t\t) {\r\n\t\t\t\t\tlet y = this.renderDimensions.getYForTime(\r\n\t\t\t\t\t\tmarker.timestamp - time * 1000\r\n\t\t\t\t\t)\r\n\t\t\t\t\tlet txtWd = c.measureText(marker.text).width\r\n\t\t\t\t\tc.fillText(\r\n\t\t\t\t\t\tmarker.text,\r\n\t\t\t\t\t\tthis.renderDimensions.windowWidth / 2 - txtWd / 2,\r\n\t\t\t\t\t\ty + 3\r\n\t\t\t\t\t)\r\n\t\t\t\t\tc.beginPath()\r\n\t\t\t\t\tc.moveTo(0, y)\r\n\t\t\t\t\tc.lineTo(this.renderDimensions.windowWidth, y)\r\n\t\t\t\t\tc.closePath()\r\n\t\t\t\t\tc.stroke()\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n}\r\n","/**\r\n * Class to render measure lines on the main canvas.\r\n */\r\nexport class MeasureLinesRender {\r\n\tconstructor(ctx, renderDimensions) {\r\n\t\tthis.ctx = ctx\r\n\t\tthis.renderDimensions = renderDimensions\r\n\t}\r\n\trender(time, measureLines) {\r\n\t\tlet ctx = this.ctx\r\n\r\n\t\tctx.strokeStyle = \"rgba(255,255,255,0.3)\"\r\n\r\n\t\tctx.lineWidth = 0.5\r\n\t\tlet currentSecond = Math.floor(time)\r\n\t\tctx.beginPath()\r\n\t\tlet firstSecondShown =\r\n\t\t\tcurrentSecond - this.renderDimensions.getSecondsDisplayedAfter() - 1\r\n\t\tlet lastSecondShown =\r\n\t\t\tcurrentSecond + this.renderDimensions.getSecondsDisplayedBefore() + 1\r\n\t\tfor (let i = firstSecondShown; i < lastSecondShown; i++) {\r\n\t\t\tif (!measureLines[i]) {\r\n\t\t\t\tcontinue\r\n\t\t\t}\r\n\t\t\tmeasureLines[i].forEach(tempoLine => {\r\n\t\t\t\tlet ht = this.renderDimensions.getYForTime(tempoLine - time * 1000)\r\n\r\n\t\t\t\tctx.moveTo(0, ht)\r\n\t\t\t\tctx.lineTo(this.renderDimensions.windowWidth, ht)\r\n\t\t\t})\r\n\t\t}\r\n\t\tctx.closePath()\r\n\t\tctx.stroke()\r\n\t}\r\n}\r\n","import { getSetting } from \"../settings/Settings.js\"\r\n\r\n/**\r\n * Particles handler\r\n */\r\nexport class NoteParticleRender {\r\n\tconstructor(ctx, renderDimensions) {\r\n\t\tthis.ctx = ctx\r\n\t\tthis.renderDimensions = renderDimensions\r\n\t\tthis.particles = new Map()\r\n\t}\r\n\tcreateParticles(x, y, w, h, color, velocity) {\r\n\t\tlet amnt = getSetting(\"particleAmount\")\r\n\t\tif (getSetting(\"showParticlesTop\")) {\r\n\t\t\tfor (let i = 0; i < Math.random() * 0.5 * amnt + 0.5 * amnt; i++) {\r\n\t\t\t\tlet rndX = x + 3 + w * 0.5 + w * 0.5 * (-1 + 2 * Math.random())\r\n\t\t\t\tlet motX =\r\n\t\t\t\t\t(Math.random() - Math.random()) * 0.5 * getSetting(\"particleSpeed\")\r\n\t\t\t\tlet motY =\r\n\t\t\t\t\t(-Math.random() * getSetting(\"particleSpeed\") * velocity) / 127\r\n\t\t\t\tlet radius =\r\n\t\t\t\t\t(0.5 + 0.5 * Math.random()) * getSetting(\"particleSize\") + 0.5\r\n\t\t\t\trndX -= radius / 2\r\n\t\t\t\tlet lifeTime = Math.random() * getSetting(\"particleLife\") + 2\r\n\t\t\t\tthis.createParticle(rndX, y, motX, motY, radius, color, lifeTime)\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (getSetting(\"showParticlesBottom\")) {\r\n\t\t\tfor (let i = 0; i < Math.random() * 0.5 * amnt + 0.5 * amnt; i++) {\r\n\t\t\t\tlet rndX = x + 3 + w * 0.5 + w * 0.5 * (-1 + 2 * Math.random())\r\n\t\t\t\tlet motX =\r\n\t\t\t\t\t(Math.random() - Math.random()) * 0.5 * getSetting(\"particleSpeed\")\r\n\t\t\t\tlet motY =\r\n\t\t\t\t\t(-Math.random() * getSetting(\"particleSpeed\") * velocity) / 127\r\n\t\t\t\tlet radius =\r\n\t\t\t\t\t(0.5 + 0.5 * Math.random()) * getSetting(\"particleSize\") + 0.5\r\n\t\t\t\trndX -= radius / 2\r\n\t\t\t\tlet lifeTime = Math.random() * getSetting(\"particleLife\") + 2\r\n\t\t\t\tthis.createParticle(\r\n\t\t\t\t\trndX,\r\n\t\t\t\t\ty + h,\r\n\t\t\t\t\tmotX,\r\n\t\t\t\t\t-1 * motY * 0.5,\r\n\t\t\t\t\tradius,\r\n\t\t\t\t\tcolor,\r\n\t\t\t\t\tlifeTime\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tcreateParticle(x, y, motX, motY, radius, color, lifeTime) {\r\n\t\tif (!this.particles.has(color)) {\r\n\t\t\tthis.particles.set(color, [])\r\n\t\t}\r\n\t\tthis.particles.get(color).push([x, y, motX, motY, radius, lifeTime, 0])\r\n\t}\r\n\tupdateParticles() {\r\n\t\tthis.particles.forEach(particleArray =>\r\n\t\t\tparticleArray.forEach(particle => this.updateParticle(particle))\r\n\t\t)\r\n\t\tthis.clearDeadParticles()\r\n\t}\r\n\tclearDeadParticles() {\r\n\t\tthis.particles.forEach((particleArray, color) => {\r\n\t\t\tfor (let i = particleArray.length - 1; i >= 0; i--) {\r\n\t\t\t\tif (particleArray[i][6] >= particleArray[i][5]) {\r\n\t\t\t\t\tparticleArray.splice(i, 1)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (particleArray.length == 0) {\r\n\t\t\t\tthis.particles.delete(color)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tupdateParticle(particle) {\r\n\t\tparticle[0] += particle[2]\r\n\t\tparticle[1] += particle[3]\r\n\r\n\t\t// particle[3] *= 1 + (particle[6] / particle[5]) * 0.05\r\n\t\tparticle[3] += (particle[6] / particle[5]) * 0.3\r\n\r\n\t\t//dampen xy-motion\r\n\t\tparticle[2] *= 0.95\r\n\t\t// particle[3] *= 0.92\r\n\r\n\t\t//particle lifetime ticker\r\n\t\tparticle[6] += particle[4] * 0.1\r\n\t}\r\n\trender() {\r\n\t\tlet stroke = getSetting(\"particleStroke\")\r\n\t\tthis.ctx.globalAlpha = 0.5\r\n\t\tif (stroke) {\r\n\t\t\tthis.ctx.strokeStyle = \"rgba(255,255,255,0.8)\"\r\n\t\t\tthis.ctx.lineWidth = 0.5\r\n\t\t}\r\n\t\tthis.particles.forEach((particleArray, color) => {\r\n\t\t\tlet c = this.ctx\r\n\t\t\tc.fillStyle = color\r\n\t\t\tc.beginPath()\r\n\t\t\tparticleArray.forEach(particle => this.renderParticle(particle))\r\n\t\t\tc.fill()\r\n\t\t\tif (stroke) {\r\n\t\t\t\tc.stroke()\r\n\t\t\t}\r\n\t\t\tc.closePath()\r\n\t\t})\r\n\t\tthis.updateParticles()\r\n\t\tthis.ctx.globalAlpha = 1\r\n\t}\r\n\trenderParticle(particle) {\r\n\t\tthis.ctx.moveTo(particle[0], particle[1])\r\n\t\tlet rad = Math.max(0.1, (1 - particle[6] / particle[5]) * particle[4])\r\n\t\tthis.ctx.arc(particle[0], particle[1], rad, 0, Math.PI * 2, 0)\r\n\t}\r\n}\r\n","import { getSetting, setSettingCallback } from \"../settings/Settings.js\"\r\nimport { drawRoundRect } from \"../Util.js\"\r\nimport { NoteParticleRender } from \"./NoteParticleRender.js\"\r\nimport { PianoParticleRender } from \"./PianoParticleRender.js\"\r\n\r\n/**\r\n * Class to render the notes on screen.\r\n */\r\nexport class NoteRender {\r\n\tconstructor(ctx, ctxForeground, renderDimensions, pianoRender) {\r\n\t\tthis.ctx = ctx\r\n\t\tthis.renderDimensions = renderDimensions\r\n\t\tthis.ctxForeground = ctxForeground\r\n\r\n\t\tthis.pianoRender = pianoRender\r\n\t\tthis.lastActiveNotes = {}\r\n\t\tthis.noteParticleRender = new NoteParticleRender(\r\n\t\t\tthis.ctxForeground,\r\n\t\t\tthis.renderDimensions\r\n\t\t)\r\n\t\tthis.pianoParticleRender = new PianoParticleRender(\r\n\t\t\tthis.pianoRender.playedKeysCtxWhite,\r\n\t\t\tthis.pianoRender.playedKeysCtxBlack,\r\n\t\t\tthis.renderDimensions\r\n\t\t)\r\n\t}\r\n\trender(time, renderInfoByTrackMap, inputActiveNotes, inputPlayedNotes) {\r\n\t\tthis.noteParticleRender.render()\r\n\r\n\t\t//sustained note \"tails\"\r\n\t\tif (getSetting(\"showSustainedNotes\")) {\r\n\t\t\tthis.drawSustainedNotes(renderInfoByTrackMap, time)\r\n\t\t}\r\n\r\n\t\tlet activeNotesByTrackMap = this.getActiveNotesByTrackMap(\r\n\t\t\trenderInfoByTrackMap\r\n\t\t)\r\n\t\t//Active notes effect\r\n\t\tObject.keys(activeNotesByTrackMap).forEach(trackIndex => {\r\n\t\t\tthis.renderActiveNotesEffects(activeNotesByTrackMap[trackIndex])\r\n\t\t})\r\n\r\n\t\t//Notes\r\n\t\tObject.keys(renderInfoByTrackMap).forEach(trackIndex => {\r\n\t\t\tthis.drawNotes(\r\n\t\t\t\trenderInfoByTrackMap[trackIndex].white,\r\n\t\t\t\trenderInfoByTrackMap[trackIndex].black\r\n\t\t\t)\r\n\t\t})\r\n\t\tlet currentActiveNotes = {}\r\n\t\t//Active keys on piano + stroking of active notes\r\n\t\tObject.keys(activeNotesByTrackMap).forEach(trackIndex => {\r\n\t\t\tthis.renderActivePianoKeys(\r\n\t\t\t\tactiveNotesByTrackMap[trackIndex],\r\n\t\t\t\tcurrentActiveNotes\r\n\t\t\t)\r\n\r\n\t\t\tthis.createNoteParticles(activeNotesByTrackMap[trackIndex])\r\n\t\t})\r\n\t\tif (getSetting(\"drawPianoKeyHitEffect\")) {\r\n\t\t\tthis.pianoParticleRender.render()\r\n\t\t}\r\n\r\n\t\tthis.lastActiveNotes = currentActiveNotes\r\n\r\n\t\tthis.drawInputNotes(inputActiveNotes, inputPlayedNotes)\r\n\t}\r\n\r\n\tdrawSustainedNotes(renderInfoByTrackMap, time) {\r\n\t\tObject.keys(renderInfoByTrackMap).forEach(trackIndex => {\r\n\t\t\tlet notesRenderInfoBlack = renderInfoByTrackMap[trackIndex].black\r\n\t\t\tlet notesRenderInfoWhite = renderInfoByTrackMap[trackIndex].white\r\n\r\n\t\t\tthis.ctx.globalAlpha = getSetting(\"sustainedNotesOpacity\") / 100\r\n\t\t\tthis.ctx.strokeStyle = \"rgba(0,0,0,1)\"\r\n\t\t\tthis.ctx.lineWidth = 1\r\n\t\t\tif (notesRenderInfoWhite.length > 0) {\r\n\t\t\t\tthis.ctx.fillStyle = notesRenderInfoWhite[0].fillStyle\r\n\t\t\t}\r\n\t\t\tnotesRenderInfoWhite.forEach(renderInfo =>\r\n\t\t\t\tthis.drawSustainedNote(renderInfo)\r\n\t\t\t)\r\n\t\t\tif (notesRenderInfoBlack.length > 0) {\r\n\t\t\t\tthis.ctx.fillStyle = notesRenderInfoBlack[0].fillStyle\r\n\t\t\t}\r\n\t\t\tnotesRenderInfoBlack.forEach(renderInfo =>\r\n\t\t\t\tthis.drawSustainedNote(renderInfo)\r\n\t\t\t)\r\n\t\t})\r\n\t}\r\n\r\n\tdrawSustainedNote(renderInfos) {\r\n\t\tlet ctx = this.ctx\r\n\r\n\t\tlet x = renderInfos.x\r\n\t\tlet w = renderInfos.w / 2\r\n\r\n\t\tif (renderInfos.sustainH && renderInfos.sustainY) {\r\n\t\t\tctx.beginPath()\r\n\t\t\tctx.rect(x + w / 2, renderInfos.sustainY, w, renderInfos.sustainH)\r\n\t\t\tctx.closePath()\r\n\t\t\tctx.fill()\r\n\t\t}\r\n\t}\r\n\r\n\tgetActiveNotesByTrackMap(renderInfoByTrackMap) {\r\n\t\treturn Object.keys(renderInfoByTrackMap).map(trackIndex =>\r\n\t\t\tthis.getActiveNotes(\r\n\t\t\t\trenderInfoByTrackMap[trackIndex].black,\r\n\t\t\t\trenderInfoByTrackMap[trackIndex].white\r\n\t\t\t)\r\n\t\t)\r\n\t}\r\n\tgetActiveNotes(notesRenderInfoBlack, notesRenderInfoWhite) {\r\n\t\tlet activeNotesBlack = notesRenderInfoBlack\r\n\t\t\t.slice(0)\r\n\t\t\t.filter(renderInfo => renderInfo.isOn)\r\n\r\n\t\tlet activeNotesWhite = notesRenderInfoWhite\r\n\t\t\t.slice(0)\r\n\t\t\t.filter(renderInfo => renderInfo.isOn)\r\n\t\treturn { white: activeNotesWhite, black: activeNotesBlack }\r\n\t}\r\n\r\n\trenderActiveNotesEffects(activeNotes) {\r\n\t\tif (getSetting(\"showHitKeys\")) {\r\n\t\t\tif (activeNotes.white.length) {\r\n\t\t\t\tthis.ctx.fillStyle = activeNotes.white[0].fillStyle\r\n\t\t\t}\r\n\t\t\tactiveNotes.white.forEach(note => this.renderActiveNoteEffect(note))\r\n\r\n\t\t\tif (activeNotes.black.length) {\r\n\t\t\t\tthis.ctx.fillStyle = activeNotes.black[0].fillStyle\r\n\t\t\t}\r\n\t\t\tactiveNotes.black.forEach(note => this.renderActiveNoteEffect(note))\r\n\t\t}\r\n\t}\r\n\r\n\trenderActiveNoteEffect(renderInfos) {\r\n\t\tlet ctx = this.ctx\r\n\t\tctx.globalAlpha = Math.max(\r\n\t\t\t0,\r\n\t\t\t0.7 - Math.min(0.7, renderInfos.noteDoneRatio)\r\n\t\t)\r\n\t\tlet wOffset = Math.pow(\r\n\t\t\tthis.renderDimensions.whiteKeyWidth / 2,\r\n\t\t\t1 + Math.min(1, renderInfos.noteDoneRatio) * renderInfos.isOn\r\n\t\t)\r\n\t\tthis.doNotePath(renderInfos, {\r\n\t\t\tx: renderInfos.x - wOffset / 2,\r\n\t\t\tw: renderInfos.w + wOffset,\r\n\t\t\ty:\r\n\t\t\t\trenderInfos.y -\r\n\t\t\t\t(getSetting(\"reverseNoteDirection\")\r\n\t\t\t\t\t? this.renderDimensions.whiteKeyHeight\r\n\t\t\t\t\t: 0),\r\n\t\t\th: renderInfos.h + this.renderDimensions.whiteKeyHeight\r\n\t\t})\r\n\r\n\t\tctx.fill()\r\n\t\tctx.globalAlpha = 1\r\n\t}\r\n\r\n\tdrawNotes(notesRenderInfoWhite, notesRenderInfoBlack) {\r\n\t\tlet {\r\n\t\t\tincomingWhiteNotes,\r\n\t\t\tincomingBlackNotes,\r\n\t\t\tplayedWhiteNotes,\r\n\t\t\tplayedBlackNotes\r\n\t\t} = this.getIncomingAndPlayedNotes(\r\n\t\t\tnotesRenderInfoWhite,\r\n\t\t\tnotesRenderInfoBlack\r\n\t\t)\r\n\r\n\t\tthis.ctx.globalAlpha = 1\r\n\t\tthis.ctx.strokeStyle = getSetting(\"strokeNotesColor\")\r\n\t\tthis.ctx.lineWidth = getSetting(\"strokeNotesWidth\")\r\n\r\n\t\tthis.drawIncomingNotes(incomingWhiteNotes, incomingBlackNotes)\r\n\r\n\t\tthis.drawPlayedNotes(playedWhiteNotes, playedBlackNotes)\r\n\t}\r\n\r\n\trectAbovePiano() {\r\n\t\tthis.ctx.rect(\r\n\t\t\t0,\r\n\t\t\t0,\r\n\t\t\tthis.renderDimensions.windowWidth,\r\n\t\t\tthis.renderDimensions.getAbsolutePianoPosition()\r\n\t\t)\r\n\t}\r\n\trectBelowPiano() {\r\n\t\tthis.ctx.rect(\r\n\t\t\t0,\r\n\t\t\tthis.renderDimensions.getAbsolutePianoPosition() +\r\n\t\t\t\tthis.renderDimensions.whiteKeyHeight,\r\n\t\t\tthis.renderDimensions.windowWidth,\r\n\t\t\tthis.renderDimensions.windowHeight -\r\n\t\t\t\t(this.renderDimensions.getAbsolutePianoPosition() +\r\n\t\t\t\t\tthis.renderDimensions.whiteKeyHeight)\r\n\t\t)\r\n\t}\r\n\tdrawPlayedNotes(playedWhiteNotes, playedBlackNotes) {\r\n\t\tthis.ctx.save()\r\n\t\tthis.ctx.beginPath()\r\n\t\tgetSetting(\"reverseNoteDirection\")\r\n\t\t\t? this.rectAbovePiano()\r\n\t\t\t: this.rectBelowPiano()\r\n\r\n\t\tthis.ctx.clip()\r\n\t\tthis.ctx.closePath()\r\n\t\tthis.ctx.fillStyle = playedWhiteNotes.length\r\n\t\t\t? playedWhiteNotes[0].fillStyle\r\n\t\t\t: \"\"\r\n\r\n\t\tplayedWhiteNotes.forEach(renderInfo => {\r\n\t\t\tthis.drawNoteAfter(renderInfo)\r\n\t\t\tthis.ctx.fill()\r\n\t\t\tthis.strokeActiveAndOthers(renderInfo)\r\n\t\t})\r\n\r\n\t\tthis.ctx.fillStyle = playedBlackNotes.length\r\n\t\t\t? playedBlackNotes[0].fillStyle\r\n\t\t\t: \"\"\r\n\t\tplayedBlackNotes.forEach(renderInfo => {\r\n\t\t\tthis.drawNoteAfter(renderInfo)\r\n\t\t\tthis.ctx.fill()\r\n\t\t\tthis.strokeActiveAndOthers(renderInfo)\r\n\t\t})\r\n\r\n\t\tthis.ctx.restore()\r\n\t}\r\n\r\n\tstrokeActiveAndOthers(renderInfo) {\r\n\t\tif (renderInfo.isOn) {\r\n\t\t\tthis.ctx.strokeStyle = getSetting(\"strokeActiveNotesColor\")\r\n\t\t\tthis.ctx.lineWidth = getSetting(\"strokeActiveNotesWidth\")\r\n\t\t\tthis.ctx.stroke()\r\n\t\t} else if (getSetting(\"strokeNotes\")) {\r\n\t\t\tthis.ctx.strokeStyle = getSetting(\"strokeNotesColor\")\r\n\t\t\tthis.ctx.lineWidth = getSetting(\"strokeNotesWidth\")\r\n\t\t\tthis.ctx.stroke()\r\n\t\t}\r\n\t}\r\n\r\n\tdrawIncomingNotes(incomingWhiteNotes, incomingBlackNotes) {\r\n\t\tthis.ctx.save()\r\n\t\tthis.ctx.beginPath()\r\n\t\tgetSetting(\"reverseNoteDirection\")\r\n\t\t\t? this.rectBelowPiano()\r\n\t\t\t: this.rectAbovePiano()\r\n\t\tthis.ctx.clip()\r\n\t\tthis.ctx.closePath()\r\n\t\tthis.ctx.fillStyle = incomingWhiteNotes.length\r\n\t\t\t? incomingWhiteNotes[0].fillStyle\r\n\t\t\t: \"\"\r\n\t\tincomingWhiteNotes.forEach(renderInfo => {\r\n\t\t\tthis.drawNoteBefore(renderInfo)\r\n\t\t\tthis.ctx.fill()\r\n\t\t\tthis.strokeActiveAndOthers(renderInfo)\r\n\t\t})\r\n\r\n\t\tthis.ctx.fillStyle = incomingBlackNotes.length\r\n\t\t\t? incomingBlackNotes[0].fillStyle\r\n\t\t\t: \"\"\r\n\t\tincomingBlackNotes.forEach(renderInfo => {\r\n\t\t\tthis.drawNoteBefore(renderInfo)\r\n\t\t\tthis.ctx.fill()\r\n\t\t\tthis.strokeActiveAndOthers(renderInfo)\r\n\t\t})\r\n\t\tthis.ctx.restore()\r\n\t}\r\n\r\n\tgetIncomingAndPlayedNotes(notesRenderInfoWhite, notesRenderInfoBlack) {\r\n\t\tlet incomingWhiteNotes = []\r\n\t\tlet playedWhiteNotes = []\r\n\t\tnotesRenderInfoWhite\r\n\t\t\t.filter(renderInfo => renderInfo.w > 0 && renderInfo.h > 0)\r\n\t\t\t.forEach(renderInfo => {\r\n\t\t\t\tif (renderInfo.noteDoneRatio < 1) {\r\n\t\t\t\t\tincomingWhiteNotes.push(renderInfo)\r\n\t\t\t\t}\r\n\t\t\t\tif (getSetting(\"pianoPosition\") != 0 && renderInfo.noteDoneRatio > 0) {\r\n\t\t\t\t\tplayedWhiteNotes.push(renderInfo)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\tlet incomingBlackNotes = []\r\n\t\tlet playedBlackNotes = []\r\n\t\tnotesRenderInfoBlack\r\n\t\t\t.filter(renderInfo => renderInfo.w > 0 && renderInfo.h > 0)\r\n\t\t\t.forEach(renderInfo => {\r\n\t\t\t\tif (renderInfo.noteDoneRatio < 1) {\r\n\t\t\t\t\tincomingBlackNotes.push(renderInfo)\r\n\t\t\t\t}\r\n\t\t\t\tif (getSetting(\"pianoPosition\") != 0 && renderInfo.noteDoneRatio > 0) {\r\n\t\t\t\t\tplayedBlackNotes.push(renderInfo)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\treturn {\r\n\t\t\tincomingWhiteNotes,\r\n\t\t\tincomingBlackNotes,\r\n\t\t\tplayedWhiteNotes,\r\n\t\t\tplayedBlackNotes\r\n\t\t}\r\n\t}\r\n\r\n\tdrawInputNotes(inputActiveNotes, inputPlayedNotes) {\r\n\t\tthis.ctx.globalAlpha = 1\r\n\t\tthis.ctx.strokeStyle = getSetting(\"strokeNotesColor\")\r\n\t\tthis.ctx.lineWidth = getSetting(\"strokeNotesWidth\")\r\n\t\tthis.ctx.fillStyle = getSetting(\"inputNoteColor\")\r\n\t\tlet whiteActive = inputActiveNotes.filter(noteInfo => !noteInfo.isBlack)\r\n\t\tinputActiveNotes.forEach(noteInfo => {\r\n\t\t\tthis.createNoteParticle(noteInfo)\r\n\t\t\tthis.pianoRender.drawActiveInputKey(\r\n\t\t\t\tparseInt(noteInfo.noteNumber),\r\n\t\t\t\tthis.ctx.fillStyle\r\n\t\t\t)\r\n\t\t\tthis.drawNoteAfter(noteInfo)\r\n\t\t\tthis.ctx.fill()\r\n\t\t})\r\n\t\tinputPlayedNotes.forEach(noteInfo => {\r\n\t\t\t// noteInfo.y += this.renderDimensions.whiteKeyHeight\r\n\t\t\tthis.drawNoteAfter(noteInfo)\r\n\t\t\tthis.ctx.fill()\r\n\t\t})\r\n\t}\r\n\tdrawNote(renderInfos) {\r\n\t\tlet ctx = this.ctx\r\n\r\n\t\tif (renderInfos.w <= 0 || renderInfos.h <= 0) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tlet fadeInAlpha = 1\r\n\t\tif (getSetting(\"fadeInNotes\")) {\r\n\t\t\tfadeInAlpha = this.getAlphaFromY(renderInfos.y + renderInfos.h)\r\n\t\t}\r\n\r\n\t\tctx.globalAlpha = fadeInAlpha\r\n\r\n\t\tif (renderInfos.noteDoneRatio < 1) {\r\n\t\t\tthis.drawNoteBefore(renderInfos)\r\n\t\t\tctx.fill()\r\n\t\t\tif (!renderInfos.isOn && getSetting(\"strokeNotes\")) {\r\n\t\t\t\tctx.stroke()\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (getSetting(\"pianoPosition\") != 0 && renderInfos.noteDoneRatio > 0) {\r\n\t\t\tthis.drawNoteAfter(renderInfos)\r\n\t\t\tctx.fill()\r\n\t\t\tif (!renderInfos.isOn && getSetting(\"strokeNotes\")) {\r\n\t\t\t\tctx.stroke()\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tctx.globalAlpha = 1\r\n\t}\r\n\tdrawNoteAfter(renderInfos) {\r\n\t\tlet y =\r\n\t\t\trenderInfos.y +\r\n\t\t\t(getSetting(\"reverseNoteDirection\") ? -1 : 1) *\r\n\t\t\t\tthis.renderDimensions.whiteKeyHeight\r\n\r\n\t\tthis.doNotePath(renderInfos, {\r\n\t\t\ty\r\n\t\t})\r\n\t}\r\n\r\n\tdrawNoteBefore(renderInfos) {\r\n\t\t//Done by .clip() now. Keep in case clipping isn't performant\r\n\t\t// let h = Math.min(\r\n\t\t// \trenderInfos.h,\r\n\t\t// \tthis.renderDimensions.getAbsolutePianoPosition() - renderInfos.y\r\n\t\t// )\r\n\t\tthis.doNotePath(renderInfos /*, { h }*/)\r\n\t}\r\n\r\n\trenderActivePianoKeys(activeNotes, currentActiveNotes) {\r\n\t\tif (getSetting(\"highlightActivePianoKeys\")) {\r\n\t\t\tactiveNotes.white.forEach(noteRenderInfo => {\r\n\t\t\t\tthis.pianoRender.drawActiveKey(noteRenderInfo, noteRenderInfo.fillStyle)\r\n\t\t\t})\r\n\t\t\tactiveNotes.black.forEach(noteRenderInfo => {\r\n\t\t\t\tthis.pianoRender.drawActiveKey(noteRenderInfo, noteRenderInfo.fillStyle)\r\n\t\t\t})\r\n\r\n\t\t\t//stroke newly hit ones\r\n\t\t\t//TODO: Doesn't look very nice.\r\n\t\t\tif (getSetting(\"drawPianoKeyHitEffect\")) {\r\n\t\t\t\tactiveNotes.white.forEach(noteRenderInfo => {\r\n\t\t\t\t\tcurrentActiveNotes[noteRenderInfo.noteId] = true\r\n\t\t\t\t\tif (!this.lastActiveNotes.hasOwnProperty(noteRenderInfo.noteId)) {\r\n\t\t\t\t\t\tthis.pianoParticleRender.add(noteRenderInfo)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tactiveNotes.black.forEach(noteRenderInfo => {\r\n\t\t\t\t\tcurrentActiveNotes[noteRenderInfo.noteId] = true\r\n\t\t\t\t\tif (!this.lastActiveNotes.hasOwnProperty(noteRenderInfo.noteId)) {\r\n\t\t\t\t\t\tthis.pianoParticleRender.add(noteRenderInfo)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tstrokeNote(renderInfo) {\r\n\t\tthis.drawNoteBefore(renderInfo)\r\n\t\tthis.ctx.stroke()\r\n\r\n\t\tif (renderInfo.isOn) {\r\n\t\t\tthis.drawNoteAfter(renderInfo)\r\n\t\t\tthis.ctx.stroke()\r\n\t\t}\r\n\t}\r\n\r\n\tdoNotePath(renderInfo, overWriteParams) {\r\n\t\tif (!overWriteParams) {\r\n\t\t\toverWriteParams = {}\r\n\t\t}\r\n\t\tfor (let key in renderInfo) {\r\n\t\t\tif (!overWriteParams.hasOwnProperty(key)) {\r\n\t\t\t\toverWriteParams[key] = renderInfo[key]\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (getSetting(\"roundedNotes\") || getSetting(\"noteBorderRadius\") > 0) {\r\n\t\t\tdrawRoundRect(\r\n\t\t\t\tthis.ctx,\r\n\t\t\t\toverWriteParams.x,\r\n\t\t\t\toverWriteParams.y,\r\n\t\t\t\toverWriteParams.w,\r\n\t\t\t\toverWriteParams.h,\r\n\t\t\t\toverWriteParams.rad,\r\n\t\t\t\tgetSetting(\"roundedNotes\")\r\n\t\t\t)\r\n\t\t} else {\r\n\t\t\tthis.ctx.beginPath()\r\n\t\t\tthis.ctx.rect(\r\n\t\t\t\toverWriteParams.x,\r\n\t\t\t\toverWriteParams.y,\r\n\t\t\t\toverWriteParams.w,\r\n\t\t\t\toverWriteParams.h\r\n\t\t\t)\r\n\t\t\tthis.ctx.closePath()\r\n\t\t}\r\n\t}\r\n\r\n\tcreateNoteParticles(activeNotes, colWhite, colBlack) {\r\n\t\tif (getSetting(\"showParticlesTop\") || getSetting(\"showParticlesBottom\")) {\r\n\t\t\tactiveNotes.white.forEach(noteRenderInfo =>\r\n\t\t\t\tthis.createNoteParticle(noteRenderInfo)\r\n\t\t\t)\r\n\t\t\tactiveNotes.black.forEach(noteRenderInfo =>\r\n\t\t\t\tthis.createNoteParticle(noteRenderInfo)\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\tcreateNoteParticle(noteRenderInfo) {\r\n\t\tthis.noteParticleRender.createParticles(\r\n\t\t\tnoteRenderInfo.x,\r\n\t\t\tthis.renderDimensions.getAbsolutePianoPosition(),\r\n\t\t\tnoteRenderInfo.w,\r\n\t\t\tthis.renderDimensions.whiteKeyHeight,\r\n\t\t\tnoteRenderInfo.fillStyle,\r\n\t\t\tnoteRenderInfo.velocity\r\n\t\t)\r\n\t}\r\n\r\n\tgetAlphaFromY(y) {\r\n\t\t//TODO broken.\r\n\t\treturn Math.min(\r\n\t\t\t1,\r\n\t\t\tMath.max(\r\n\t\t\t\t0,\r\n\t\t\t\t(y - this.menuHeight - 5) /\r\n\t\t\t\t\t((this.renderDimensions.windowHeight - this.menuHeight) * 0.5)\r\n\t\t\t)\r\n\t\t)\r\n\t}\r\n\t/**\r\n\t * Sets Menu (Navbar) Height.  Required to calculate fadeIn alpha value\r\n\t *\r\n\t * @param {Number} menuHeight\r\n\t */\r\n\tsetMenuHeight(menuHeight) {\r\n\t\tthis.menuHeight = menuHeight\r\n\t}\r\n}\r\n","/**\r\n * Class to display message-overlays on screen\r\n */\r\nexport class OverlayRender {\r\n\tconstructor(ctx, renderDimensions) {\r\n\t\tthis.ctx = ctx\r\n\t\tthis.renderDimensions = renderDimensions\r\n\t\tthis.overlays = []\r\n\t}\r\n\t/**\r\n\t * add a overlay-message to the screen\r\n\t *\r\n\t * @param {String} message\r\n\t * @param {Number} duration\r\n\t */\r\n\taddOverlay(message, duration) {\r\n\t\tlet totalDuration = duration\r\n\t\tthis.overlays.push({ message, totalDuration, duration })\r\n\t}\r\n\t/**\r\n\t * Render / Update the overlays.\r\n\t */\r\n\trender() {\r\n\t\tfor (let i = this.overlays.length - 1; i >= 0; i--) {\r\n\t\t\tlet overlay = this.overlays[i]\r\n\t\t\toverlay.duration--\r\n\t\t\tif (overlay.duration < 0) {\r\n\t\t\t\tthis.overlays.splice(i, 1)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.overlays.length) {\r\n\t\t\tthis.globalAlpha = this.setAlphaForOverlay(\r\n\t\t\t\tthis.overlays[this.overlays.length - 1]\r\n\t\t\t)\r\n\t\t\tthis.ctx.fillStyle = \"rgba(0,0,0,0.9)\"\r\n\t\t\tthis.ctx.fillRect(\r\n\t\t\t\t0,\r\n\t\t\t\t0,\r\n\t\t\t\tthis.renderDimensions.windowWidth,\r\n\t\t\t\tthis.renderDimensions.windowHeight\r\n\t\t\t)\r\n\t\t}\r\n\t\tfor (let i = 0; i < this.overlays.length; i++) {\r\n\t\t\tlet overlay = this.overlays[i]\r\n\r\n\t\t\tthis.setAlphaForOverlay(overlay)\r\n\r\n\t\t\tthis.ctx.font = \"32px 'Source Sans Pro', sans-serif\"\r\n\t\t\tthis.ctx.fillStyle = \"white\"\r\n\r\n\t\t\tlet wd = this.ctx.measureText(overlay.message).width\r\n\t\t\tthis.ctx.fillText(\r\n\t\t\t\toverlay.message,\r\n\t\t\t\tthis.renderDimensions.windowWidth / 2 - wd / 2,\r\n\t\t\t\tthis.renderDimensions.windowHeight / 4 + i * 40\r\n\t\t\t)\r\n\t\t}\r\n\t\tthis.ctx.globalAlpha = 1\r\n\t}\r\n\r\n\tsetAlphaForOverlay(overlay) {\r\n\t\tlet ratio = 1 - overlay.duration / overlay.totalDuration\r\n\t\tif (ratio < 0.1) {\r\n\t\t\tthis.ctx.globalAlpha = ratio / 0.1\r\n\t\t} else {\r\n\t\t\tthis.ctx.globalAlpha = (0.9 - (ratio - 0.1)) / 0.9\r\n\t\t}\r\n\t\treturn ratio\r\n\t}\r\n}\r\n","import { getSetting } from \"../settings/Settings.js\"\r\n\r\nconst PARTICLE_LIFE_TIME = 22\r\n\r\nexport class PianoParticleRender {\r\n\tconstructor(ctxWhite, ctxBlack, renderDimensions) {\r\n\t\tthis.ctxWhite = ctxWhite\r\n\t\tthis.ctxBlack = ctxBlack\r\n\t\tthis.renderDimensions = renderDimensions\r\n\t\tthis.particles = {\r\n\t\t\twhite: new Map(),\r\n\t\t\tblack: new Map()\r\n\t\t}\r\n\t}\r\n\tadd(noteRenderinfo, isWhite) {\r\n\t\tlet keyDims = this.renderDimensions.getKeyDimensions(\r\n\t\t\tnoteRenderinfo.noteNumber\r\n\t\t)\r\n\r\n\t\tlet color = noteRenderinfo.fillStyle\r\n\r\n\t\tlet keyColor = noteRenderinfo.isBlack ? \"black\" : \"white\"\r\n\r\n\t\tif (!this.particles[keyColor].has(color)) {\r\n\t\t\tthis.particles[keyColor].set(color, [])\r\n\t\t}\r\n\t\tthis.particles[keyColor]\r\n\t\t\t.get(color)\r\n\t\t\t.push([\r\n\t\t\t\tkeyDims.x,\r\n\t\t\t\t0,\r\n\t\t\t\tkeyDims.w,\r\n\t\t\t\tkeyDims.h,\r\n\t\t\t\t(PARTICLE_LIFE_TIME * noteRenderinfo.velocity) / 127\r\n\t\t\t])\r\n\t\treturn\r\n\t}\r\n\r\n\tupdateParticles() {\r\n\t\tthis.particles.white.forEach(particleArray =>\r\n\t\t\tparticleArray.forEach(particle => this.updateParticle(particle))\r\n\t\t)\r\n\t\tthis.particles.black.forEach(particleArray =>\r\n\t\t\tparticleArray.forEach(particle => this.updateParticle(particle))\r\n\t\t)\r\n\t\tthis.clearDeadParticles()\r\n\t}\r\n\tclearDeadParticles() {\r\n\t\tthis.particles.white.forEach((particleArray, color) => {\r\n\t\t\tfor (let i = particleArray.length - 1; i >= 0; i--) {\r\n\t\t\t\tif (particleArray[i][4] < 0) {\r\n\t\t\t\t\tparticleArray.splice(i, 1)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (particleArray.length == 0) {\r\n\t\t\t\tthis.particles.white.delete(color)\r\n\t\t\t}\r\n\t\t})\r\n\t\tthis.particles.black.forEach((particleArray, color) => {\r\n\t\t\tfor (let i = particleArray.length - 1; i >= 0; i--) {\r\n\t\t\t\tif (particleArray[i][4] < 0) {\r\n\t\t\t\t\tparticleArray.splice(i, 1)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (particleArray.length == 0) {\r\n\t\t\t\tthis.particles.black.delete(color)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tupdateParticle(particle) {\r\n\t\tparticle[4]--\r\n\t}\r\n\trender() {\r\n\t\tthis.particles.white.forEach((particleArray, color) => {\r\n\t\t\tlet c = this.ctxWhite\r\n\t\t\tc.strokeStyle = \"rgba(255,255,255,0.4)\"\r\n\t\t\tc.lineWidth = 2\r\n\t\t\tc.beginPath()\r\n\t\t\tparticleArray.forEach(particle => this.renderParticle(particle, c))\r\n\t\t\tc.stroke()\r\n\t\t\tc.closePath()\r\n\t\t})\r\n\t\tthis.particles.black.forEach((particleArray, color) => {\r\n\t\t\tlet c = this.ctxBlack\r\n\t\t\tc.strokeStyle = \"rgba(255,255,255,0.4)\"\r\n\t\t\tc.lineWidth = 2\r\n\t\t\tc.beginPath()\r\n\t\t\tparticleArray.forEach(particle => this.renderParticle(particle, c))\r\n\t\t\tc.stroke()\r\n\t\t\tc.closePath()\r\n\t\t})\r\n\t\tthis.updateParticles()\r\n\t}\r\n\trenderParticle(particle, ctx) {\r\n\t\tlet doneRat = 1 - particle[4] / PARTICLE_LIFE_TIME\r\n\t\tlet wdRatio = (doneRat - 0.1) * particle[2] * 0.3\r\n\t\tctx.moveTo(particle[0] - wdRatio / 2, 5)\r\n\t\tctx.lineTo(particle[0] - wdRatio / 2, particle[3])\r\n\r\n\t\tctx.moveTo(particle[0] - wdRatio / 2 + particle[2] + wdRatio, 5)\r\n\t\tctx.lineTo(particle[0] - wdRatio / 2 + particle[2] + wdRatio, particle[3])\r\n\r\n\t\t// ctx.rect(\r\n\t\t// \tparticle[0] + doneRat / 2,\r\n\t\t// \tparticle[1],\r\n\t\t// \tparticle[2] - doneRat,\r\n\t\t// \tparticle[3]\r\n\t\t// )\r\n\t}\r\n}\r\n","import { CONST } from \"../data/CONST.js\"\r\nimport { DomHelper } from \"../ui/DomHelper.js\"\r\nimport { getSetting } from \"../settings/Settings.js\"\r\nimport { isBlack, replaceAllString } from \"../Util.js\"\r\n/**\r\n * Class to render the piano (and the colored keys played on the piano)\r\n */\r\nexport class PianoRender {\r\n\tconstructor(renderDimensions) {\r\n\t\tthis.renderDimensions = renderDimensions\r\n\t\tthis.renderDimensions.registerResizeCallback(this.resize.bind(this))\r\n\t\tthis.clickCallback = null\r\n\t\tthis.blackKeyImg = new Image()\r\n\t\tthis.blackKeyImg.src = \"../../blackKey.svg\"\r\n\t\tthis.blackKeyImg.onload\r\n\t\tthis.positionY = 50 //from bottom\r\n\r\n\t\tthis.resize()\r\n\t}\r\n\t/**\r\n\t * Resize canvases and redraw piano.\r\n\t */\r\n\tresize() {\r\n\t\tthis.resizeCanvases()\r\n\t\tthis.drawPiano(this.ctxWhite, this.ctxBlack)\r\n\t}\r\n\t/**\r\n\t * pass listeners that are called with the note number as argument when piano canvas is clicked.\r\n\t * @param {Function} onNoteOn\r\n\t * @param {Function} onNoteOff\r\n\t */\r\n\tsetPianoInputListeners(onNoteOn, onNoteOff) {\r\n\t\tthis.onNoteOn = onNoteOn\r\n\t\tthis.onNoteOff = onNoteOff\r\n\t}\r\n\t/**\r\n\t * Register a callback to trigger when user clicks the piano Canvas. Callback is called with\r\n\t */\r\n\tsetClickCallback(callback) {\r\n\t\tthis.clickCallback = callback\r\n\t}\r\n\tgetAllCanvases() {\r\n\t\treturn [\r\n\t\t\tthis.getPianoCanvasWhite(),\r\n\t\t\tthis.getPlayedKeysWhite(),\r\n\t\t\tthis.getPianoCanvasBlack(),\r\n\t\t\tthis.getPlayedKeysBlack()\r\n\t\t]\r\n\t}\r\n\r\n\t/**\r\n\t * Resizes all piano canvases.\r\n\t */\r\n\tresizeCanvases() {\r\n\t\tthis.getAllCanvases().forEach(canvas => {\r\n\t\t\tDomHelper.setCanvasSize(\r\n\t\t\t\tcanvas,\r\n\t\t\t\tthis.renderDimensions.windowWidth,\r\n\t\t\t\tMath.max(\r\n\t\t\t\t\tthis.renderDimensions.whiteKeyHeight,\r\n\t\t\t\t\tthis.renderDimensions.blackKeyHeight\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t})\r\n\t\tthis.repositionCanvases()\r\n\t}\r\n\r\n\trepositionCanvases() {\r\n\t\tthis.getAllCanvases().forEach(canvas => {\r\n\t\t\tcanvas.style.top = this.renderDimensions.getAbsolutePianoPosition() + \"px\"\r\n\t\t})\r\n\t}\r\n\t/**\r\n\t *\r\n\t * @param {Integer} noteNumber\r\n\t */\r\n\tdrawActiveInputKey(noteNumber, color) {\r\n\t\tlet dim = this.renderDimensions.getKeyDimensions(noteNumber)\r\n\t\tlet isKeyBlack = isBlack(noteNumber)\r\n\t\tlet ctx = isKeyBlack ? this.playedKeysCtxBlack : this.playedKeysCtxWhite\r\n\r\n\t\tif (isKeyBlack) {\r\n\t\t\tthis.drawBlackKey(ctx, dim, color, true)\r\n\t\t} else {\r\n\t\t\tthis.drawWhiteKey(ctx, dim, color, true)\r\n\t\t}\r\n\t}\r\n\r\n\tdrawActiveKey(renderInfo, color) {\r\n\t\tlet dim = this.renderDimensions.getKeyDimensions(renderInfo.noteNumber)\r\n\t\tlet isKeyBlack = renderInfo.isBlack\r\n\t\tlet ctx = isKeyBlack ? this.playedKeysCtxBlack : this.playedKeysCtxWhite\r\n\r\n\t\tctx.fillStyle = color\r\n\t\tif (isKeyBlack) {\r\n\t\t\tthis.drawBlackKey(ctx, dim, color)\r\n\t\t} else {\r\n\t\t\tthis.drawWhiteKey(ctx, dim, color)\r\n\t\t}\r\n\t}\r\n\r\n\tclearPlayedKeysCanvases() {\r\n\t\tthis.playedKeysCtxWhite.clearRect(\r\n\t\t\t0,\r\n\t\t\t0,\r\n\t\t\tthis.renderDimensions.windowWidth,\r\n\t\t\tMath.max(\r\n\t\t\t\tthis.renderDimensions.whiteKeyHeight,\r\n\t\t\t\tthis.renderDimensions.blackKeyHeight\r\n\t\t\t)\r\n\t\t)\r\n\t\tthis.playedKeysCtxBlack.clearRect(\r\n\t\t\t0,\r\n\t\t\t0,\r\n\t\t\tthis.renderDimensions.windowWidth,\r\n\t\t\tMath.max(\r\n\t\t\t\tthis.renderDimensions.whiteKeyHeight,\r\n\t\t\t\tthis.renderDimensions.blackKeyHeight\r\n\t\t\t)\r\n\t\t)\r\n\t}\r\n\r\n\tdrawPiano(ctxWhite, ctxBlack) {\r\n\t\tctxWhite.clearRect(\r\n\t\t\t0,\r\n\t\t\t0,\r\n\t\t\tthis.renderDimensions.windowWidth,\r\n\t\t\tMath.max(\r\n\t\t\t\tthis.renderDimensions.whiteKeyHeight,\r\n\t\t\t\tthis.renderDimensions.blackKeyHeight\r\n\t\t\t)\r\n\t\t)\r\n\t\tctxBlack.clearRect(\r\n\t\t\t0,\r\n\t\t\t0,\r\n\t\t\tthis.renderDimensions.windowWidth,\r\n\t\t\tMath.max(\r\n\t\t\t\tthis.renderDimensions.whiteKeyHeight,\r\n\t\t\t\tthis.renderDimensions.blackKeyHeight\r\n\t\t\t)\r\n\t\t)\r\n\t\t//Background\r\n\t\tctxWhite.fillStyle = \"rgba(0,0,0,1)\"\r\n\t\tctxWhite.fillRect(\r\n\t\t\t0,\r\n\t\t\t5,\r\n\t\t\tthis.renderDimensions.windowWidth,\r\n\t\t\tthis.renderDimensions.whiteKeyHeight\r\n\t\t)\r\n\r\n\t\tthis.drawWhiteKeys(ctxWhite)\r\n\t\tif (getSetting(\"showKeyNamesOnPianoWhite\")) {\r\n\t\t\tthis.drawWhiteKeyNames(ctxWhite)\r\n\t\t}\r\n\t\t// var img = new Image()\r\n\t\t// img.src = \"../../blackKey.svg\"\r\n\t\t// img.onload = function () {\r\n\t\tthis.drawBlackKeys(ctxBlack)\r\n\t\tif (getSetting(\"showKeyNamesOnPianoBlack\")) {\r\n\t\t\tthis.drawBlackKeyNames(ctxBlack)\r\n\t\t}\r\n\t\t// }.bind(this)\r\n\r\n\t\t//velvet\r\n\t\tctxWhite.strokeStyle = \"rgba(155,50,50,1)\"\r\n\t\tctxWhite.shadowColor = \"rgba(155,50,50,1)\"\r\n\t\tctxWhite.shadowOffsetY = 2\r\n\t\tctxWhite.shadowBlur = 2\r\n\t\tctxWhite.lineWidth = 4\r\n\t\tctxWhite.beginPath()\r\n\t\tctxWhite.moveTo(this.renderDimensions.windowWidth, 2)\r\n\t\tctxWhite.lineTo(0, 2)\r\n\t\tctxWhite.closePath()\r\n\t\tctxWhite.stroke()\r\n\t\tctxWhite.shadowColor = \"rgba(0,0,0,0)\"\r\n\t\tctxWhite.shadowBlur = 0\r\n\t}\r\n\r\n\tdrawWhiteKeys(ctxWhite) {\r\n\t\tfor (\r\n\t\t\tlet i = Math.max(0, this.renderDimensions.minNoteNumber);\r\n\t\t\ti <= this.renderDimensions.maxNoteNumber;\r\n\t\t\ti++\r\n\t\t) {\r\n\t\t\tlet dims = this.renderDimensions.getKeyDimensions(i)\r\n\t\t\tif (!isBlack(i)) {\r\n\t\t\t\tthis.drawWhiteKey(ctxWhite, dims, \"rgba(255,255,255,1)\")\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tdrawBlackKeys(ctxBlack) {\r\n\t\tfor (\r\n\t\t\tlet i = Math.max(0, this.renderDimensions.minNoteNumber);\r\n\t\t\ti <= this.renderDimensions.maxNoteNumber;\r\n\t\t\ti++\r\n\t\t) {\r\n\t\t\tlet dims = this.renderDimensions.getKeyDimensions(i)\r\n\t\t\tif (isBlack(i)) {\r\n\t\t\t\tthis.drawBlackKey(ctxBlack, dims, \"black\", true)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tdrawWhiteKeyNames(ctx) {\r\n\t\tctx.fillStyle = \"black\"\r\n\t\tconst fontSize = this.renderDimensions.whiteKeyWidth / 2.2\r\n\t\tctx.font = fontSize + \"px Arial black\"\r\n\t\tfor (\r\n\t\t\tlet i = Math.max(0, this.renderDimensions.minNoteNumber);\r\n\t\t\ti <= this.renderDimensions.maxNoteNumber;\r\n\t\t\ti++\r\n\t\t) {\r\n\t\t\tlet dims = this.renderDimensions.getKeyDimensions(i)\r\n\t\t\tif (!isBlack(i)) {\r\n\t\t\t\tlet txt = this.getDisplayKey(CONST.MIDI_NOTE_TO_KEY[i + 21] || \"\")\r\n\t\t\t\tlet txtWd = ctx.measureText(txt).width\r\n\t\t\t\tctx.fillText(\r\n\t\t\t\t\ttxt,\r\n\t\t\t\t\tdims.x + dims.w / 2 - txtWd / 2,\r\n\t\t\t\t\tthis.renderDimensions.whiteKeyHeight - fontSize / 3\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tdrawBlackKeyNames(ctx) {\r\n\t\tctx.fillStyle = \"white\"\r\n\t\tconst fontSize = this.renderDimensions.blackKeyWidth / 2.1\r\n\t\tctx.font = Math.ceil(fontSize) + \"px Arial black\"\r\n\t\tfor (\r\n\t\t\tlet i = Math.max(0, this.renderDimensions.minNoteNumber);\r\n\t\t\ti <= this.renderDimensions.maxNoteNumber;\r\n\t\t\ti++\r\n\t\t) {\r\n\t\t\tlet dims = this.renderDimensions.getKeyDimensions(i)\r\n\t\t\tif (isBlack(i)) {\r\n\t\t\t\tlet txt = this.getDisplayKey(CONST.MIDI_NOTE_TO_KEY[i + 21] || \"\")\r\n\t\t\t\tlet txtWd = ctx.measureText(txt).width\r\n\t\t\t\tctx.fillText(\r\n\t\t\t\t\ttxt,\r\n\t\t\t\t\tdims.x + dims.w / 2 - txtWd / 2,\r\n\t\t\t\t\tthis.renderDimensions.blackKeyHeight - 2\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tgetDisplayKey(key) {\r\n\t\tlet blackToHash = replaceAllString(key, \"b\", \"#\")\r\n\t\treturn blackToHash.replace(/[0-9]/g, \"\")\r\n\t}\r\n\t/**\r\n\t *\r\n\t * @param {CanvasRenderingContext2D} ctx\r\n\t * @param {Dimensions} dims\r\n\t */\r\n\tdrawWhiteKey(ctx, dims, color) {\r\n\t\tlet radius = Math.ceil(this.renderDimensions.whiteKeyWidth / 20)\r\n\t\tlet x = dims.x\r\n\t\tlet y = Math.floor(dims.y) + 6\r\n\t\tlet height = Math.floor(dims.h) - 8\r\n\t\tlet width = dims.w\r\n\r\n\t\tthis.getWhiteKeyPath(ctx, x, y, width, height, radius)\r\n\r\n\t\tctx.fillStyle = color\r\n\t\tctx.fill()\r\n\r\n\t\tctx.fillStyle = this.getKeyGradient(ctx)\r\n\t\tctx.fill()\r\n\r\n\t\tctx.closePath()\r\n\t}\r\n\tgetKeyGradient(ctx) {\r\n\t\tif (this.keyGradient == null) {\r\n\t\t\tthis.keyGradient = ctx.createLinearGradient(\r\n\t\t\t\tthis.renderDimensions.windowWidth / 2,\r\n\t\t\t\t0,\r\n\t\t\t\tthis.renderDimensions.windowWidth / 2,\r\n\t\t\t\tthis.renderDimensions.whiteKeyHeight\r\n\t\t\t)\r\n\t\t\tthis.keyGradient.addColorStop(0, \"rgba(0,0,0,1)\")\r\n\t\t\tthis.keyGradient.addColorStop(1, \"rgba(255,255,255,0.5)\")\r\n\t\t}\r\n\t\treturn this.keyGradient\r\n\t}\r\n\tgetWhiteKeyPath(ctx, x, y, width, height, radius) {\r\n\t\tctx.beginPath()\r\n\t\tctx.moveTo(x + 1, y)\r\n\t\tctx.lineTo(x - 1 + width, y)\r\n\t\tctx.lineTo(x - 1 + width, y + height - radius)\r\n\t\tctx.lineTo(x - 1 + width - radius, y + height)\r\n\t\tctx.lineTo(x + 1 + radius, y + height)\r\n\t\tctx.lineTo(x + 1, y + height - radius)\r\n\t\tctx.lineTo(x + 1, y)\r\n\t}\r\n\r\n\tstrokeWhiteKey(dims, color) {\r\n\t\tlet radius = Math.ceil(this.renderDimensions.whiteKeyWidth / 20)\r\n\t\tlet x = dims.x\r\n\t\tlet y = Math.floor(dims.y) + 6\r\n\t\tlet height = Math.floor(dims.h) - 8\r\n\t\tlet width = dims.w\r\n\t\tlet ctx = this.playedKeysCtxWhite\r\n\r\n\t\tthis.getWhiteKeyPath(ctx, x, y, width, height, radius)\r\n\t\tctx.strokeStyle = \"black\"\r\n\t\tctx.lineWidth = 50\r\n\t\tctx.fill()\r\n\t\tctx.closePath()\r\n\t}\r\n\tdrawBlackKeySvg(ctx, dims, color) {\r\n\t\tlet radiusTop = this.renderDimensions.blackKeyWidth / 15\r\n\t\tlet radiusBottom = this.renderDimensions.blackKeyWidth / 8\r\n\t\tlet x = dims.x\r\n\t\tlet y = dims.y + 5\r\n\t\tlet height = dims.h\r\n\t\tlet width = dims.w\r\n\r\n\t\tctx.drawImage(this.blackKeyImg, x, y, width, height)\r\n\t}\r\n\t/**\r\n\t *\r\n\t * @param {CanvasRenderingContext2D} ctx\r\n\t * @param {Dimensions} dims\r\n\t */\r\n\tdrawBlackKey(ctx, dims, color, noShadow) {\r\n\t\tlet radiusTop = 0 //this.renderDimensions.blackKeyWidth / 15\r\n\t\tlet radiusBottom = this.renderDimensions.blackKeyWidth / 8\r\n\t\tlet x = dims.x\r\n\t\tlet y = dims.y + 6\r\n\t\tlet height = dims.h\r\n\t\tlet width = dims.w\r\n\t\tcolor = color || \"black\"\r\n\r\n\t\tthis.getBlackKeyPath(ctx, x, y, radiusTop, width, height, radiusBottom)\r\n\r\n\t\tctx.fillStyle = color\r\n\t\tctx.fill()\r\n\t\tif (!noShadow) {\r\n\t\t\tctx.fillStyle = this.getKeyGradient()\r\n\t\t\tctx.fill()\r\n\t\t}\r\n\t\tctx.closePath()\r\n\t}\r\n\tstrokeBlackKey(dims, color) {\r\n\t\tlet radiusTop = 0 //this.renderDimensions.blackKeyWidth / 15\r\n\t\tlet radiusBottom = this.renderDimensions.blackKeyWidth / 8\r\n\t\tlet x = dims.x\r\n\t\tlet y = dims.y + 6\r\n\t\tlet height = dims.h\r\n\t\tlet width = dims.w\r\n\t\tlet ctx = this.playedKeysCtxBlack\r\n\t\tcolor = color || \"white\"\r\n\r\n\t\tthis.getBlackKeyPath(ctx, x, y, radiusTop, width, height, radiusBottom)\r\n\r\n\t\tctx.strokeStyle = color\r\n\t\tctx.stroke()\r\n\t\tctx.closePath()\r\n\t}\r\n\r\n\tgetBlackKeyPath(ctx, x, y, radiusTop, width, height, radiusBottom) {\r\n\t\tctx.beginPath()\r\n\t\tctx.moveTo(x + 1, y + radiusTop)\r\n\t\tctx.lineTo(x + 1 + radiusTop, y)\r\n\t\tctx.lineTo(x - 1 - radiusTop + width, y)\r\n\t\tctx.lineTo(x - 1 + width, y + radiusTop)\r\n\t\tctx.lineTo(x - 1 + width, y + height - radiusBottom)\r\n\t\tctx.lineTo(x - 1 + width - radiusBottom, y + height)\r\n\t\tctx.lineTo(x + 1 + radiusBottom, y + height)\r\n\t\tctx.lineTo(x + 1, y + height - radiusBottom)\r\n\t\tctx.lineTo(x + 1, y)\r\n\t}\r\n\r\n\tgetPianoCanvasWhite() {\r\n\t\tif (!this.pianoCanvasWhite) {\r\n\t\t\tthis.pianoCanvasWhite = DomHelper.createCanvas(\r\n\t\t\t\tthis.renderDimensions.windowWidth,\r\n\t\t\t\tMath.max(\r\n\t\t\t\t\tthis.renderDimensions.whiteKeyHeight,\r\n\t\t\t\t\tthis.renderDimensions.blackKeyHeight\r\n\t\t\t\t),\r\n\t\t\t\t{\r\n\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\tleft: \"0px\",\r\n\t\t\t\t\tzIndex: 99\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\tthis.pianoCanvasWhite.className = \"pianoCanvas\"\r\n\t\t\tdocument.body.appendChild(this.pianoCanvasWhite)\r\n\t\t\tthis.ctxWhite = this.pianoCanvasWhite.getContext(\"2d\")\r\n\t\t}\r\n\t\treturn this.pianoCanvasWhite\r\n\t}\r\n\tgetPlayedKeysWhite() {\r\n\t\tif (!this.playedKeysCanvasWhite) {\r\n\t\t\tthis.playedKeysCanvasWhite = DomHelper.createCanvas(\r\n\t\t\t\tthis.renderDimensions.windowWidth,\r\n\t\t\t\tMath.max(\r\n\t\t\t\t\tthis.renderDimensions.whiteKeyHeight,\r\n\t\t\t\t\tthis.renderDimensions.blackKeyHeight\r\n\t\t\t\t),\r\n\t\t\t\t{\r\n\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\tleft: \"0px\",\r\n\t\t\t\t\tzIndex: 99\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\tthis.playedKeysCanvasWhite.className = \"pianoCanvas\"\r\n\t\t\tdocument.body.appendChild(this.playedKeysCanvasWhite)\r\n\t\t\tthis.playedKeysCtxWhite = this.playedKeysCanvasWhite.getContext(\"2d\")\r\n\t\t}\r\n\t\treturn this.playedKeysCanvasWhite\r\n\t}\r\n\tgetPianoCanvasBlack() {\r\n\t\tif (!this.pianoCanvasBlack) {\r\n\t\t\tthis.pianoCanvasBlack = DomHelper.createCanvas(\r\n\t\t\t\tthis.renderDimensions.windowWidth,\r\n\t\t\t\tMath.max(\r\n\t\t\t\t\tthis.renderDimensions.whiteKeyHeight,\r\n\t\t\t\t\tthis.renderDimensions.blackKeyHeight\r\n\t\t\t\t),\r\n\t\t\t\t{\r\n\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\tleft: \"0px\",\r\n\t\t\t\t\tzIndex: 99,\r\n\t\t\t\t\tboxShadow: \"0px 0px 15px 15px rgba(0,0,0,0.4)\"\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\tthis.pianoCanvasBlack.className = \"pianoCanvas\"\r\n\t\t\tdocument.body.appendChild(this.pianoCanvasBlack)\r\n\t\t\tthis.ctxBlack = this.pianoCanvasBlack.getContext(\"2d\")\r\n\t\t}\r\n\t\treturn this.pianoCanvasBlack\r\n\t}\r\n\tgetPlayedKeysBlack() {\r\n\t\tif (!this.playedKeysCanvasBlack) {\r\n\t\t\tthis.playedKeysCanvasBlack = DomHelper.createCanvas(\r\n\t\t\t\tthis.renderDimensions.windowWidth,\r\n\t\t\t\tMath.max(\r\n\t\t\t\t\tthis.renderDimensions.whiteKeyHeight,\r\n\t\t\t\t\tthis.renderDimensions.blackKeyHeight\r\n\t\t\t\t),\r\n\t\t\t\t{\r\n\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\tleft: \"0px\",\r\n\t\t\t\t\tzIndex: 99\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\tthis.playedKeysCanvasBlack.className = \"pianoCanvas\"\r\n\t\t\tdocument.body.appendChild(this.playedKeysCanvasBlack)\r\n\t\t\tthis.playedKeysCtxBlack = this.playedKeysCanvasBlack.getContext(\"2d\")\r\n\r\n\t\t\tthis.playedKeysCanvasBlack.addEventListener(\r\n\t\t\t\t\"mousedown\",\r\n\t\t\t\tthis.onPianoMousedown.bind(this)\r\n\t\t\t)\r\n\t\t\tthis.playedKeysCanvasBlack.addEventListener(\r\n\t\t\t\t\"mouseup\",\r\n\t\t\t\tthis.onPianoMouseup.bind(this)\r\n\t\t\t)\r\n\t\t\tthis.playedKeysCanvasBlack.addEventListener(\r\n\t\t\t\t\"mousemove\",\r\n\t\t\t\tthis.onPianoMousemove.bind(this)\r\n\t\t\t)\r\n\t\t\tthis.playedKeysCanvasBlack.addEventListener(\r\n\t\t\t\t\"mouseleave\",\r\n\t\t\t\tthis.onPianoMouseleave.bind(this)\r\n\t\t\t)\r\n\t\t}\r\n\t\treturn this.playedKeysCanvasBlack\r\n\t}\r\n\tonPianoMousedown(ev) {\r\n\t\tif (getSetting(\"clickablePiano\")) {\r\n\t\t\tlet { x, y } = this.getCanvasPosFromMouseEvent(ev)\r\n\t\t\tlet keyUnderMouse = this.getKeyAtPos(x, y)\r\n\t\t\tif (keyUnderMouse >= 0) {\r\n\t\t\t\tthis.currentKeyUnderMouse = keyUnderMouse\r\n\t\t\t\tthis.isMouseDown = true\r\n\t\t\t\tthis.onNoteOn(keyUnderMouse)\r\n\t\t\t} else {\r\n\t\t\t\tthis.clearCurrentKeyUnderMouse()\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tonPianoMouseup(ev) {\r\n\t\tthis.isMouseDown = false\r\n\t\tthis.clearCurrentKeyUnderMouse()\r\n\t}\r\n\tonPianoMouseleave(ev) {\r\n\t\tthis.isMouseDown = false\r\n\t\tthis.clearCurrentKeyUnderMouse()\r\n\t}\r\n\r\n\tonPianoMousemove(ev) {\r\n\t\tif (getSetting(\"clickablePiano\")) {\r\n\t\t\tlet { x, y } = this.getCanvasPosFromMouseEvent(ev)\r\n\t\t\tlet keyUnderMouse = this.getKeyAtPos(x, y)\r\n\t\t\tif (this.isMouseDown && keyUnderMouse >= 0) {\r\n\t\t\t\tif (this.currentKeyUnderMouse != keyUnderMouse) {\r\n\t\t\t\t\tthis.onNoteOff(this.currentKeyUnderMouse)\r\n\t\t\t\t\tthis.onNoteOn(keyUnderMouse)\r\n\t\t\t\t\tthis.currentKeyUnderMouse = keyUnderMouse\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.clearCurrentKeyUnderMouse()\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tclearCurrentKeyUnderMouse() {\r\n\t\tif (this.currentKeyUnderMouse >= 0) {\r\n\t\t\tthis.onNoteOff(this.currentKeyUnderMouse)\r\n\t\t}\r\n\t\tthis.currentKeyUnderMouse = -1\r\n\t}\r\n\tgetKeyAtPos(x, y) {\r\n\t\tlet clickedKey = -1\r\n\t\tfor (let i = 0; i <= 87; i++) {\r\n\t\t\tlet dims = this.renderDimensions.getKeyDimensions(i)\r\n\t\t\tif (x > dims.x && x < dims.x + dims.w) {\r\n\t\t\t\tif (y > dims.y && y < dims.y + dims.h) {\r\n\t\t\t\t\tif (clickedKey == -1) {\r\n\t\t\t\t\t\tclickedKey = i\r\n\t\t\t\t\t} else if (isBlack(i) && !isBlack(clickedKey)) {\r\n\t\t\t\t\t\tclickedKey = i\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn clickedKey\r\n\t}\r\n\tgetCanvasPosFromMouseEvent(ev) {\r\n\t\tlet canvHt = Math.max(\r\n\t\t\tthis.renderDimensions.whiteKeyHeight,\r\n\t\t\tthis.renderDimensions.blackKeyHeight\r\n\t\t)\r\n\t\tlet x = ev.clientX\r\n\t\tlet y =\r\n\t\t\tev.clientY -\r\n\t\t\t(this.renderDimensions.windowHeight -\r\n\t\t\t\tcanvHt -\r\n\t\t\t\t(this.renderDimensions.windowHeight -\r\n\t\t\t\t\tcanvHt -\r\n\t\t\t\t\tthis.renderDimensions.getAbsolutePianoPosition()))\r\n\t\treturn { x, y }\r\n\t}\r\n}\r\n","import { getSetting } from \"../settings/Settings.js\"\r\nimport { formatTime } from \"../Util.js\"\r\n/**\r\n * Renders the progress bar of the song\r\n */\r\nexport class ProgressBarRender {\r\n\tconstructor(ctx, renderDimensions) {\r\n\t\tthis.ctx = ctx\r\n\t\tthis.ctx.canvas.addEventListener(\r\n\t\t\t\"mousemove\",\r\n\t\t\tfunction (ev) {\r\n\t\t\t\tthis.mouseX = ev.clientX\r\n\t\t\t}.bind(this)\r\n\t\t)\r\n\t\tthis.ctx.canvas.addEventListener(\r\n\t\t\t\"mouseleave\",\r\n\t\t\tfunction (ev) {\r\n\t\t\t\tthis.mouseX = -1000\r\n\t\t\t}.bind(this)\r\n\t\t)\r\n\t\tthis.renderDimensions = renderDimensions\r\n\t}\r\n\trender(time, end, markers) {\r\n\t\tthis.ctx.clearRect(\r\n\t\t\t0,\r\n\t\t\t0,\r\n\t\t\tthis.renderDimensions.windowWidth,\r\n\t\t\tthis.renderDimensions.windowHeight\r\n\t\t)\r\n\t\tlet ctx = this.ctx\r\n\t\tlet progressPercent = time / (end / 1000)\r\n\t\tctx.fillStyle = \"rgba(80,80,80,0.8)\"\r\n\t\tctx.fillRect(this.renderDimensions.windowWidth * progressPercent, 0, 2, 20)\r\n\t\tctx.fillStyle = \"rgba(50,150,50,0.8)\"\r\n\t\tctx.fillRect(0, 0, this.renderDimensions.windowWidth * progressPercent, 20)\r\n\r\n\t\tlet isShowingAMarker = false\r\n\r\n\t\tif (getSetting(\"showMarkersTimeline\")) {\r\n\t\t\tmarkers.forEach(marker => {\r\n\t\t\t\tlet xPos = (marker.timestamp / end) * this.renderDimensions.windowWidth\r\n\t\t\t\tif (Math.abs(xPos - this.mouseX) < 10) {\r\n\t\t\t\t\tisShowingAMarker = true\r\n\t\t\t\t\tlet txtWd = ctx.measureText(marker.text).width\r\n\t\t\t\t\tctx.fillStyle = \"black\"\r\n\t\t\t\t\tctx.fillText(\r\n\t\t\t\t\t\tmarker.text,\r\n\t\t\t\t\t\tMath.max(\r\n\t\t\t\t\t\t\t5,\r\n\t\t\t\t\t\t\tMath.min(\r\n\t\t\t\t\t\t\t\tthis.renderDimensions.windowWidth - txtWd - 5,\r\n\t\t\t\t\t\t\t\txPos - txtWd / 2\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\t15\r\n\t\t\t\t\t)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tctx.strokeStyle = \"black\"\r\n\t\t\t\t\tctx.lineWidth = 2\r\n\t\t\t\t\tctx.beginPath()\r\n\t\t\t\t\tctx.moveTo(xPos, 0)\r\n\t\t\t\t\tctx.lineTo(xPos, 25)\r\n\r\n\t\t\t\t\tctx.closePath()\r\n\t\t\t\t\tctx.stroke()\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tif (!isShowingAMarker) {\r\n\t\t\tctx.fillStyle = \"rgba(0,0,0,1)\"\r\n\t\t\tlet showMilis = getSetting(\"showMiliseconds\")\r\n\t\t\tlet text =\r\n\t\t\t\tformatTime(Math.min(time, end), showMilis) +\r\n\t\t\t\t\" / \" +\r\n\t\t\t\tformatTime(end / 1000, showMilis)\r\n\t\t\tlet wd = ctx.measureText(text).width\r\n\t\t\tctx.font = \"14px Arial black\"\r\n\t\t\tctx.fillText(text, this.renderDimensions.windowWidth / 2 - wd / 2, 15)\r\n\t\t}\r\n\t}\r\n}\r\n","import { DomHelper } from \"../ui/DomHelper.js\"\r\nimport { PianoRender } from \"./PianoRender.js\"\r\nimport { DebugRender } from \"./DebugRender.js\"\r\nimport { OverlayRender } from \"./OverlayRender.js\"\r\nimport { NoteRender } from \"./NoteRender.js\"\r\nimport { SustainRender } from \"./SustainRenderer.js\"\r\nimport { MarkerRenderer } from \"./MarkerRenderer.js\"\r\nimport { RenderDimensions } from \"./RenderDimensions.js\"\r\nimport { BackgroundRender } from \"./BackgroundRender.js\"\r\nimport { MeasureLinesRender } from \"./MeasureLinesRender.js\"\r\nimport { ProgressBarRender } from \"./ProgressBarRender.js\"\r\nimport { getSetting, setSettingCallback } from \"../settings/Settings.js\"\r\nimport { isBlack } from \"../Util.js\"\r\nimport { getTrackColor, isTrackDrawn } from \"../player/Tracks.js\"\r\nimport { getPlayerState } from \"../player/Player.js\"\r\nimport { InSongTextRenderer } from \"./InSongTextRenderer.js\"\r\n\r\nconst DEBUG = true\r\n\r\nconst DEFAULT_LOOK_BACK_TIME = 4\r\nconst LOOK_AHEAD_TIME = 10\r\n\r\nconst PROGRESS_BAR_CANVAS_HEIGHT = 20\r\n\r\n/**\r\n * Class that handles all rendering\r\n */\r\nexport class Render {\r\n\tconstructor() {\r\n\t\tthis.renderDimensions = new RenderDimensions()\r\n\t\tthis.renderDimensions.registerResizeCallback(this.setupCanvases.bind(this))\r\n\r\n\t\tsetSettingCallback(\"particleBlur\", this.setCtxBlur.bind(this))\r\n\r\n\t\tthis.setupCanvases()\r\n\r\n\t\tthis.pianoRender = new PianoRender(this.renderDimensions)\r\n\r\n\t\tthis.overlayRender = new OverlayRender(this.ctx, this.renderDimensions)\r\n\t\t// this.addStartingOverlayMessage()\r\n\r\n\t\tthis.debugRender = new DebugRender(DEBUG, this.ctx, this.renderDimensions)\r\n\t\tthis.noteRender = new NoteRender(\r\n\t\t\tthis.ctx,\r\n\t\t\tthis.ctxForeground,\r\n\t\t\tthis.renderDimensions,\r\n\t\t\tthis.pianoRender\r\n\t\t)\r\n\t\tthis.sustainRender = new SustainRender(this.ctx, this.renderDimensions)\r\n\t\tthis.markerRender = new MarkerRenderer(this.ctx, this.renderDimensions)\r\n\t\tthis.inSongTextRender = new InSongTextRenderer(\r\n\t\t\tthis.ctx,\r\n\t\t\tthis.renderDimensions\r\n\t\t)\r\n\r\n\t\tthis.measureLinesRender = new MeasureLinesRender(\r\n\t\t\tthis.ctx,\r\n\t\t\tthis.renderDimensions\r\n\t\t)\r\n\r\n\t\tthis.progressBarRender = new ProgressBarRender(\r\n\t\t\tthis.progressBarCtx,\r\n\t\t\tthis.renderDimensions\r\n\t\t)\r\n\r\n\t\tthis.backgroundRender = new BackgroundRender(\r\n\t\t\tthis.ctxBG,\r\n\t\t\tthis.renderDimensions\r\n\t\t)\r\n\r\n\t\tthis.mouseX = 0\r\n\t\tthis.mouseY = 0\r\n\r\n\t\tthis.playerState = getPlayerState()\r\n\r\n\t\tthis.showKeyNamesOnPianoWhite = getSetting(\"showKeyNamesOnPianoWhite\")\r\n\t\tthis.showKeyNamesOnPianoBlack = getSetting(\"showKeyNamesOnPianoBlack\")\r\n\t}\r\n\r\n\tsetCtxBlur() {\r\n\t\tlet blurPx = parseInt(getSetting(\"particleBlur\"))\r\n\t\tif (blurPx == 0) {\r\n\t\t\tthis.ctxForeground.filter = \"none\"\r\n\t\t} else {\r\n\t\t\tthis.ctxForeground.filter = \"blur(\" + blurPx + \"px)\"\r\n\t\t}\r\n\t}\r\n\tsetPianoInputListeners(onNoteOn, onNoteOff) {\r\n\t\tthis.pianoRender.setPianoInputListeners(onNoteOn, onNoteOff)\r\n\t}\r\n\r\n\t/**\r\n\t * Main rendering function\r\n\t */\r\n\trender(playerState) {\r\n\t\tthis.playerState = playerState\r\n\t\tthis.ctx.clearRect(\r\n\t\t\t0,\r\n\t\t\t0,\r\n\t\t\tthis.renderDimensions.windowWidth,\r\n\t\t\tthis.renderDimensions.windowHeight\r\n\t\t)\r\n\t\tthis.ctxForeground.clearRect(\r\n\t\t\t0,\r\n\t\t\t0,\r\n\t\t\tthis.renderDimensions.windowWidth,\r\n\t\t\tthis.renderDimensions.windowHeight\r\n\t\t)\r\n\r\n\t\tthis.pianoRender.clearPlayedKeysCanvases()\r\n\t\tif (\r\n\t\t\tthis.showKeyNamesOnPianoWhite != getSetting(\"showKeyNamesOnPianoWhite\") ||\r\n\t\t\tthis.showKeyNamesOnPianoBlack != getSetting(\"showKeyNamesOnPianoBlack\")\r\n\t\t) {\r\n\t\t\tthis.showKeyNamesOnPianoWhite = getSetting(\"showKeyNamesOnPianoWhite\")\r\n\t\t\tthis.showKeyNamesOnPianoBlack = getSetting(\"showKeyNamesOnPianoBlack\")\r\n\t\t\tthis.pianoRender.resize()\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\tthis.renderDimensions.pianoPositionY !=\r\n\t\t\tparseInt(getSetting(\"pianoPosition\"))\r\n\t\t) {\r\n\t\t\tthis.renderDimensions.pianoPositionY = parseInt(\r\n\t\t\t\tgetSetting(\"pianoPosition\")\r\n\t\t\t)\r\n\t\t\tthis.pianoRender.repositionCanvases()\r\n\t\t}\r\n\t\tthis.backgroundRender.renderIfColorsChanged()\r\n\r\n\t\tlet renderInfosByTrackMap = this.getRenderInfoByTrackMap(playerState)\r\n\t\tlet inputActiveRenderInfos = this.getInputActiveRenderInfos(playerState)\r\n\t\tlet inputPlayedRenderInfos = this.getInputPlayedRenderInfos(playerState)\r\n\t\tconst time = this.getRenderTime(playerState)\r\n\t\tconst end = playerState.end\r\n\t\tif (!playerState.loading && playerState.song) {\r\n\t\t\tconst measureLines = playerState.song\r\n\t\t\t\t? playerState.song.getMeasureLines()\r\n\t\t\t\t: []\r\n\r\n\t\t\tthis.progressBarRender.render(time, end, playerState.song.markers)\r\n\t\t\tthis.measureLinesRender.render(time, measureLines)\r\n\t\t\tthis.sustainRender.render(\r\n\t\t\t\ttime,\r\n\t\t\t\tplayerState.song.sustainsBySecond,\r\n\t\t\t\tplayerState.song.sustainPeriods\r\n\t\t\t)\r\n\r\n\t\t\tthis.noteRender.render(\r\n\t\t\t\ttime,\r\n\t\t\t\trenderInfosByTrackMap,\r\n\t\t\t\tinputActiveRenderInfos,\r\n\t\t\t\tinputPlayedRenderInfos\r\n\t\t\t)\r\n\t\t\tthis.markerRender.render(time, playerState.song.markers)\r\n\t\t\tthis.inSongTextRender.render(time, playerState.song.markers)\r\n\t\t}\r\n\r\n\t\tthis.overlayRender.render()\r\n\r\n\t\tthis.debugRender.render(\r\n\t\t\trenderInfosByTrackMap,\r\n\t\t\tthis.mouseX,\r\n\t\t\tthis.mouseY,\r\n\t\t\tthis.renderDimensions.menuHeight\r\n\t\t)\r\n\r\n\t\tif (getSetting(\"showBPM\")) {\r\n\t\t\tthis.drawBPM(playerState)\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * Returns current time adjusted for the render-offset from the settings\r\n\t * @param {Object} playerState\r\n\t */\r\n\tgetRenderTime(playerState) {\r\n\t\treturn playerState.time + getSetting(\"renderOffset\") / 1000\r\n\t}\r\n\tgetRenderInfoByTrackMap(playerState) {\r\n\t\tlet renderInfoByTrackMap = {}\r\n\t\tif (playerState)\r\n\t\t\tif (playerState.song) {\r\n\t\t\t\tplayerState.song.activeTracks.forEach((track, trackIndex) => {\r\n\t\t\t\t\tif (isTrackDrawn(trackIndex)) {\r\n\t\t\t\t\t\trenderInfoByTrackMap[trackIndex] = { black: [], white: [] }\r\n\r\n\t\t\t\t\t\tlet time = this.getRenderTime(playerState)\r\n\t\t\t\t\t\tlet firstSecondShown = Math.floor(\r\n\t\t\t\t\t\t\ttime - this.renderDimensions.getSecondsDisplayedAfter() - 4\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\tlet lastSecondShown = Math.ceil(\r\n\t\t\t\t\t\t\ttime + this.renderDimensions.getSecondsDisplayedBefore()\r\n\t\t\t\t\t\t)\r\n\r\n\t\t\t\t\t\tfor (let i = firstSecondShown; i < lastSecondShown; i++) {\r\n\t\t\t\t\t\t\tif (track.notesBySeconds[i]) {\r\n\t\t\t\t\t\t\t\ttrack.notesBySeconds[i]\r\n\t\t\t\t\t\t\t\t\t// .filter(note => note.instrument != \"percussion\")\r\n\t\t\t\t\t\t\t\t\t.map(note => this.getNoteRenderInfo(note, time))\r\n\t\t\t\t\t\t\t\t\t.forEach(renderInfo =>\r\n\t\t\t\t\t\t\t\t\t\trenderInfo.isBlack\r\n\t\t\t\t\t\t\t\t\t\t\t? renderInfoByTrackMap[trackIndex].black.push(renderInfo)\r\n\t\t\t\t\t\t\t\t\t\t\t: renderInfoByTrackMap[trackIndex].white.push(renderInfo)\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\treturn renderInfoByTrackMap\r\n\t}\r\n\tgetInputActiveRenderInfos(playerState) {\r\n\t\tlet inputRenderInfos = []\r\n\t\tfor (let key in playerState.inputActiveNotes) {\r\n\t\t\tlet activeInputNote = playerState.inputActiveNotes[key]\r\n\t\t\tinputRenderInfos.push(\r\n\t\t\t\tthis.getNoteRenderInfo(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttimestamp: activeInputNote.timestamp,\r\n\t\t\t\t\t\tnoteNumber: activeInputNote.noteNumber,\r\n\t\t\t\t\t\toffTime: playerState.ctxTime * 1000 + 0,\r\n\t\t\t\t\t\tduration: playerState.ctxTime * 1000 - activeInputNote.timestamp,\r\n\t\t\t\t\t\tvelocity: 127,\r\n\t\t\t\t\t\tfillStyle: getSetting(\"inputNoteColor\")\r\n\t\t\t\t\t},\r\n\t\t\t\t\tplayerState.ctxTime\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t}\r\n\t\treturn inputRenderInfos\r\n\t}\r\n\tgetInputPlayedRenderInfos(playerState) {\r\n\t\tlet inputRenderInfos = []\r\n\t\tfor (let key in playerState.inputPlayedNotes) {\r\n\t\t\tlet playedInputNote = playerState.inputPlayedNotes[key]\r\n\t\t\tinputRenderInfos.push(\r\n\t\t\t\tthis.getNoteRenderInfo(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttimestamp: playedInputNote.timestamp,\r\n\t\t\t\t\t\tnoteNumber: playedInputNote.noteNumber,\r\n\t\t\t\t\t\toffTime: playedInputNote.offTime,\r\n\t\t\t\t\t\tduration: playerState.ctxTime * 1000 - playedInputNote.timestamp,\r\n\t\t\t\t\t\tvelocity: 127,\r\n\t\t\t\t\t\tfillStyle: getSetting(\"inputNoteColor\")\r\n\t\t\t\t\t},\r\n\t\t\t\t\tplayerState.ctxTime\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t}\r\n\t\treturn inputRenderInfos\r\n\t}\r\n\tgetNoteRenderInfo(note, time) {\r\n\t\ttime *= 1000\r\n\t\tlet noteDims = this.renderDimensions.getNoteDimensions(\r\n\t\t\tnote.noteNumber,\r\n\t\t\ttime,\r\n\t\t\tnote.timestamp,\r\n\t\t\tnote.offTime,\r\n\t\t\tnote.sustainOffTime\r\n\t\t)\r\n\t\tlet isOn = note.timestamp < time && note.offTime > time ? 1 : 0\r\n\t\tlet elapsedTime = Math.max(0, time - note.timestamp)\r\n\t\tlet noteDoneRatio = elapsedTime / note.duration\r\n\r\n\t\tlet isKeyBlack = isBlack(note.noteNumber)\r\n\t\t//TODO Clean up. Right now it returns more info than necessary to use in DebugRender..\r\n\t\treturn {\r\n\t\t\tnoteNumber: note.noteNumber,\r\n\t\t\ttimestamp: note.timestamp,\r\n\t\t\toffTime: note.offTime,\r\n\t\t\tduration: note.duration,\r\n\t\t\tinstrument: note.instrument,\r\n\t\t\ttrack: note.track,\r\n\t\t\tchannel: note.channel,\r\n\t\t\tfillStyle: note.fillStyle\r\n\t\t\t\t? note.fillStyle\r\n\t\t\t\t: isKeyBlack\r\n\t\t\t\t? getTrackColor(note.track).black\r\n\t\t\t\t: getTrackColor(note.track).white,\r\n\t\t\tcurrentTime: time,\r\n\t\t\tisBlack: isKeyBlack,\r\n\t\t\tnoteDims: noteDims,\r\n\t\t\tisOn: isOn,\r\n\t\t\tnoteDoneRatio: noteDoneRatio,\r\n\t\t\trad: noteDims.rad,\r\n\t\t\tx: noteDims.x + 1,\r\n\t\t\ty: noteDims.y,\r\n\t\t\tw: noteDims.w - 2,\r\n\t\t\th: noteDims.h,\r\n\t\t\tsustainH: noteDims.sustainH,\r\n\t\t\tsustainY: noteDims.sustainY,\r\n\t\t\tvelocity: note.velocity,\r\n\t\t\tnoteId: note.id\r\n\t\t}\r\n\t}\r\n\r\n\tdrawBPM(playerState) {\r\n\t\tthis.ctx.font = \"20px Arial black\"\r\n\t\tthis.ctx.fillStyle = \"rgba(255,255,255,0.8)\"\r\n\t\tthis.ctx.textBaseline = \"top\"\r\n\t\tthis.ctx.fillText(\r\n\t\t\tMath.round(playerState.bpm) + \" BPM\",\r\n\t\t\t20,\r\n\t\t\tthis.renderDimensions.menuHeight + PROGRESS_BAR_CANVAS_HEIGHT + 12\r\n\t\t)\r\n\t}\r\n\r\n\taddStartingOverlayMessage() {\r\n\t\tthis.overlayRender.addOverlay(\"MIDiano\", 150)\r\n\t\tthis.overlayRender.addOverlay(\"A Javascript MIDI-Player\", 150)\r\n\t\tthis.overlayRender.addOverlay(\r\n\t\t\t\"Example song by Bernd Krueger from piano-midi.de\",\r\n\t\t\t150\r\n\t\t)\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tsetupCanvases() {\r\n\t\tDomHelper.setCanvasSize(\r\n\t\t\tthis.getBgCanvas(),\r\n\t\t\tthis.renderDimensions.windowWidth,\r\n\t\t\tthis.renderDimensions.windowHeight\r\n\t\t)\r\n\r\n\t\tDomHelper.setCanvasSize(\r\n\t\t\tthis.getMainCanvas(),\r\n\t\t\tthis.renderDimensions.windowWidth,\r\n\t\t\tthis.renderDimensions.windowHeight\r\n\t\t)\r\n\r\n\t\tDomHelper.setCanvasSize(\r\n\t\t\tthis.getProgressBarCanvas(),\r\n\t\t\tthis.renderDimensions.windowWidth,\r\n\t\t\t20\r\n\t\t)\r\n\r\n\t\tDomHelper.setCanvasSize(\r\n\t\t\tthis.getForegroundCanvas(),\r\n\t\t\tthis.renderDimensions.windowWidth,\r\n\t\t\tthis.renderDimensions.windowHeight\r\n\t\t)\r\n\t\tthis.setCtxBlur()\r\n\t}\r\n\tgetBgCanvas() {\r\n\t\tif (!this.cnvBG) {\r\n\t\t\tthis.cnvBG = DomHelper.createCanvas(\r\n\t\t\t\tthis.renderDimensions.windowWidth,\r\n\t\t\t\tthis.renderDimensions.windowHeight,\r\n\t\t\t\t{\r\n\t\t\t\t\tbackgroundColor: \"black\",\r\n\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\ttop: \"0px\",\r\n\t\t\t\t\tleft: \"0px\"\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\tdocument.body.appendChild(this.cnvBG)\r\n\t\t\tthis.ctxBG = this.cnvBG.getContext(\"2d\")\r\n\t\t}\r\n\t\treturn this.cnvBG\r\n\t}\r\n\tgetMainCanvas() {\r\n\t\tif (!this.cnv) {\r\n\t\t\tthis.cnv = DomHelper.createCanvas(\r\n\t\t\t\tthis.renderDimensions.windowWidth,\r\n\t\t\t\tthis.renderDimensions.windowHeight,\r\n\t\t\t\t{\r\n\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\ttop: \"0px\",\r\n\t\t\t\t\tleft: \"0px\"\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\tdocument.body.appendChild(this.cnv)\r\n\t\t\tthis.ctx = this.cnv.getContext(\"2d\")\r\n\t\t}\r\n\t\treturn this.cnv\r\n\t}\r\n\tgetForegroundCanvas() {\r\n\t\tif (!this.cnvForeground) {\r\n\t\t\tthis.cnvForeground = DomHelper.createCanvas(\r\n\t\t\t\tthis.renderDimensions.windowWidth,\r\n\t\t\t\tthis.renderDimensions.windowHeight,\r\n\t\t\t\t{\r\n\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\ttop: \"0px\",\r\n\t\t\t\t\tleft: \"0px\"\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\tthis.cnvForeground.style.pointerEvents = \"none\"\r\n\t\t\tthis.cnvForeground.style.zIndex = \"101\"\r\n\t\t\tdocument.body.appendChild(this.cnvForeground)\r\n\t\t\tthis.ctxForeground = this.cnvForeground.getContext(\"2d\")\r\n\t\t}\r\n\t\treturn this.cnvForeground\r\n\t}\r\n\r\n\tgetProgressBarCanvas() {\r\n\t\tif (!this.progressBarCanvas) {\r\n\t\t\tthis.progressBarCanvas = DomHelper.createCanvas(\r\n\t\t\t\tthis.renderDimensions.windowWidth,\r\n\t\t\t\tPROGRESS_BAR_CANVAS_HEIGHT,\r\n\t\t\t\t{}\r\n\t\t\t)\r\n\t\t\tthis.progressBarCanvas.id = \"progressBarCanvas\"\r\n\t\t\tdocument.body.appendChild(this.progressBarCanvas)\r\n\t\t\tthis.progressBarCtx = this.progressBarCanvas.getContext(\"2d\")\r\n\t\t}\r\n\t\treturn this.progressBarCanvas\r\n\t}\r\n\r\n\tisNoteDrawn(note, tracks) {\r\n\t\treturn !tracks[note.track] || !tracks[note.track].draw\r\n\t}\r\n\r\n\tisOnMainCanvas(position) {\r\n\t\treturn (\r\n\t\t\t(position.x > this.renderDimensions.menuHeight &&\r\n\t\t\t\tposition.y < this.renderDimensions.getAbsolutePianoPosition()) ||\r\n\t\t\tposition.y >\r\n\t\t\t\tthis.renderDimensions.getAbsolutePianoPosition() +\r\n\t\t\t\t\tthis.renderDimensions.whiteKeyHeight\r\n\t\t)\r\n\t}\r\n\tsetMouseCoords(x, y) {\r\n\t\tthis.mouseX = x\r\n\t\tthis.mouseY = y\r\n\t}\r\n\tgetTimeFromHeight(height) {\r\n\t\treturn (\r\n\t\t\t(height * this.renderDimensions.getNoteToHeightConst()) /\r\n\t\t\t(this.renderDimensions.windowHeight -\r\n\t\t\t\tthis.renderDimensions.whiteKeyHeight) /\r\n\t\t\t1000\r\n\t\t)\r\n\t}\r\n\tonMenuHeightChanged(menuHeight) {\r\n\t\tthis.renderDimensions.menuHeight = menuHeight\r\n\t\tthis.pianoRender.repositionCanvases()\r\n\t\tthis.getProgressBarCanvas().style.top = menuHeight + \"px\"\r\n\t\tthis.noteRender.setMenuHeight(menuHeight)\r\n\t}\r\n}\r\n","import { isBlack } from \"../Util.js\"\r\nimport { getSetting, setSettingCallback } from \"../settings/Settings.js\"\r\n\r\nconst MAX_NOTE_NUMBER = 87\r\nconst MIN_NOTE_NUMBER = 0\r\n\r\nconst MIN_WIDTH = 1040\r\nconst MIN_HEIGHT = 560\r\n\r\n/**\r\n * Class to handle all the calculation of dimensions of the Notes & Keys on Screen-\r\n */\r\nexport class RenderDimensions {\r\n\tconstructor() {\r\n\t\twindow.addEventListener(\"resize\", this.resize.bind(this))\r\n\t\tthis.resizeCallbacks = []\r\n\t\tthis.numberOfWhiteKeysShown = 52\r\n\t\tthis.minNoteNumber = MIN_NOTE_NUMBER\r\n\t\tthis.maxNoteNumber = MAX_NOTE_NUMBER\r\n\t\tthis.menuHeight = 200\r\n\t\tsetSettingCallback(\"blackKeyHeight\", this.resize.bind(this))\r\n\t\tsetSettingCallback(\"whiteKeyHeight\", this.resize.bind(this))\r\n\t\tthis.resize()\r\n\t}\r\n\t/**\r\n\t * Recompute all dimensions dependent on Screen Size\r\n\t */\r\n\tresize() {\r\n\t\tthis.windowWidth = Math.max(MIN_WIDTH, Math.floor(window.innerWidth))\r\n\t\tthis.windowHeight = Math.floor(window.innerHeight)\r\n\r\n\t\tthis.keyDimensions = {}\r\n\t\tthis.computeKeyDimensions()\r\n\t\tthis.resizeCallbacks.forEach(func => func())\r\n\t}\r\n\tregisterResizeCallback(callback) {\r\n\t\tthis.resizeCallbacks.push(callback)\r\n\t}\r\n\r\n\t/**\r\n\t * Computes the key dimensions. Should be called on resize.\r\n\t */\r\n\tcomputeKeyDimensions() {\r\n\t\tthis.pianoPositionY = getSetting(\"pianoPosition\")\r\n\t\tthis.whiteKeyWidth =\r\n\t\t\t// Math.max(\r\n\t\t\t// \t20,\r\n\t\t\tthis.windowWidth / this.numberOfWhiteKeysShown\r\n\t\t// )\r\n\r\n\t\tthis.whiteKeyHeight = Math.min(\r\n\t\t\tMath.floor(this.windowHeight * 0.2),\r\n\t\t\tthis.whiteKeyWidth * 4.5\r\n\t\t)\r\n\t\tthis.blackKeyWidth = Math.floor(this.whiteKeyWidth * 0.5829787234)\r\n\t\tthis.blackKeyHeight =\r\n\t\t\tMath.floor((this.whiteKeyHeight * 2) / 3) *\r\n\t\t\t(getSetting(\"blackKeyHeight\") / 100)\r\n\r\n\t\t//Do this after computing blackKey, as its dependent on the white key size ( without adjusting for the setting )\r\n\t\tthis.whiteKeyHeight *= getSetting(\"whiteKeyHeight\") / 100\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the dimensions for the piano-key of the given note\r\n\t *\r\n\t * @param {Number} noteNumber\r\n\t */\r\n\tgetKeyDimensions(noteNumber) {\r\n\t\tif (!this.keyDimensions.hasOwnProperty(noteNumber)) {\r\n\t\t\tlet isNoteBlack = isBlack(noteNumber)\r\n\t\t\tlet x = this.getKeyX(noteNumber)\r\n\r\n\t\t\tthis.keyDimensions[noteNumber] = {\r\n\t\t\t\tx: x,\r\n\t\t\t\ty: 0,\r\n\t\t\t\tw: isNoteBlack ? this.blackKeyWidth : this.whiteKeyWidth,\r\n\t\t\t\th: isNoteBlack ? this.blackKeyHeight : this.whiteKeyHeight,\r\n\t\t\t\tblack: isNoteBlack\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.keyDimensions[noteNumber]\r\n\t}\r\n\tgetAbsolutePianoPosition() {\r\n\t\tlet pianoSettingsRatio = getSetting(\"reverseNoteDirection\")\r\n\t\t\t? 1 - parseInt(this.pianoPositionY) / 100\r\n\t\t\t: parseInt(this.pianoPositionY) / 100\r\n\t\tlet y =\r\n\t\t\tthis.windowHeight -\r\n\t\t\tthis.whiteKeyHeight -\r\n\t\t\tMath.ceil(\r\n\t\t\t\tpianoSettingsRatio *\r\n\t\t\t\t\t(this.windowHeight - this.whiteKeyHeight - this.menuHeight - 24)\r\n\t\t\t)\r\n\r\n\t\treturn y\r\n\t}\r\n\r\n\t/**\r\n\t * Returns x-value  of the given Notenumber\r\n\t *\r\n\t * @param {Integer} noteNumber\r\n\t */\r\n\tgetKeyX(noteNumber) {\r\n\t\treturn (\r\n\t\t\t(this.getWhiteKeyNumber(noteNumber) -\r\n\t\t\t\tthis.getWhiteKeyNumber(this.minNoteNumber)) *\r\n\t\t\t\tthis.whiteKeyWidth +\r\n\t\t\t(this.whiteKeyWidth - this.blackKeyWidth / 2) * isBlack(noteNumber)\r\n\t\t)\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the \"white key index\" of the note number. Ignores if the key itself is black\r\n\t * @param {Number} noteNumber\r\n\t */\r\n\tgetWhiteKeyNumber(noteNumber) {\r\n\t\treturn (\r\n\t\t\tnoteNumber -\r\n\t\t\tMath.floor(Math.max(0, noteNumber + 11) / 12) -\r\n\t\t\tMath.floor(Math.max(0, noteNumber + 8) / 12) -\r\n\t\t\tMath.floor(Math.max(0, noteNumber + 6) / 12) -\r\n\t\t\tMath.floor(Math.max(0, noteNumber + 3) / 12) -\r\n\t\t\tMath.floor(Math.max(0, noteNumber + 1) / 12)\r\n\t\t)\r\n\t}\r\n\r\n\t/**\r\n\t * Returns y value corresponding to the given time\r\n\t *\r\n\t * @param {Number} time\r\n\t */\r\n\tgetYForTime(time) {\r\n\t\tconst height = this.windowHeight - this.whiteKeyHeight\r\n\t\tlet noteToHeightConst = this.getNoteToHeightConst()\r\n\t\tif (time < 0) {\r\n\t\t\tnoteToHeightConst /= getSetting(\"playedNoteFalloffSpeed\")\r\n\t\t}\r\n\r\n\t\tif (getSetting(\"reverseNoteDirection\")) {\r\n\t\t\treturn (\r\n\t\t\t\t(time / noteToHeightConst) * height +\r\n\t\t\t\tthis.getAbsolutePianoPosition() +\r\n\t\t\t\tthis.whiteKeyHeight\r\n\t\t\t)\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\theight -\r\n\t\t\t\t(time / noteToHeightConst) * height -\r\n\t\t\t\t(height - this.getAbsolutePianoPosition())\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n     *Returns rendering x/y-location & size for the given note & time-info\r\n     \r\n\t * @param {Integer} noteNumber \r\n\t * @param {Number} currentTime\r\n\t * @param {Number} noteStartTime\r\n\t * @param {Number} noteEndTime\r\n\t * @param {Number} sustainOffTime\r\n\t */\r\n\tgetNoteDimensions(\r\n\t\tnoteNumber,\r\n\t\tcurrentTime,\r\n\t\tnoteStartTime,\r\n\t\tnoteEndTime,\r\n\t\tsustainOffTime\r\n\t) {\r\n\t\tconst dur = noteEndTime - noteStartTime\r\n\t\tconst isKeyBlack = isBlack(noteNumber)\r\n\t\tlet x = this.getKeyX(noteNumber)\r\n\t\tlet w = isKeyBlack ? this.blackKeyWidth : this.whiteKeyWidth\r\n\t\tlet h =\r\n\t\t\t(dur / this.getNoteToHeightConst()) *\r\n\t\t\t(this.windowHeight - this.whiteKeyHeight)\r\n\r\n\t\tlet hCorrection = 0\r\n\t\tlet minNoteHeight = parseFloat(getSetting(\"minNoteHeight\"))\r\n\t\tif (h < minNoteHeight + 2) {\r\n\t\t\thCorrection = minNoteHeight + 2 - h\r\n\t\t\th = minNoteHeight + 2\r\n\t\t}\r\n\r\n\t\tlet rad = (getSetting(\"noteBorderRadius\") / 100) * w\r\n\t\tif (h < rad * 2) {\r\n\t\t\trad = h / 2\r\n\t\t}\r\n\t\tlet y = this.getYForTime(noteEndTime - currentTime)\r\n\t\tlet reversed = getSetting(\"reverseNoteDirection\")\r\n\t\tif (reversed) {\r\n\t\t\ty -= h\r\n\t\t}\r\n\r\n\t\tlet sustainY = 0\r\n\t\tlet sustainH = 0\r\n\t\tif (sustainOffTime > noteEndTime) {\r\n\t\t\tsustainH =\r\n\t\t\t\t((sustainOffTime - noteEndTime) / this.getNoteToHeightConst()) *\r\n\t\t\t\t(this.windowHeight - this.whiteKeyHeight)\r\n\t\t\tsustainY = this.getYForTime(sustainOffTime - currentTime)\r\n\t\t\tif (reversed) {\r\n\t\t\t\tsustainY -= sustainH\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//adjust height/y for notes that have passed the piano / have been played\r\n\t\tlet showSustainedNotes = getSetting(\"showSustainedNotes\")\r\n\t\tlet endTime = showSustainedNotes\r\n\t\t\t? Math.max(isNaN(sustainOffTime) ? 0 : sustainOffTime, noteEndTime)\r\n\t\t\t: noteEndTime\r\n\r\n\t\tif (showSustainedNotes) {\r\n\t\t\tif (!isNaN(sustainOffTime) && sustainOffTime < currentTime) {\r\n\t\t\t\tsustainY += (reversed ? -1 : 1) * this.whiteKeyHeight\r\n\t\t\t}\r\n\t\t\tif (\r\n\t\t\t\t!isNaN(sustainOffTime) &&\r\n\t\t\t\tsustainOffTime > currentTime &&\r\n\t\t\t\tnoteEndTime < currentTime\r\n\t\t\t) {\r\n\t\t\t\tsustainH += this.whiteKeyHeight\r\n\t\t\t\tif (reversed) {\r\n\t\t\t\t\tsustainY -= this.whiteKeyHeight\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (endTime < currentTime) {\r\n\t\t\tlet endRatio =\r\n\t\t\t\t(currentTime - endTime) / this.getMilisecondsDisplayedAfter()\r\n\r\n\t\t\tendRatio = Math.max(0, 1 - getSetting(\"noteEndedShrink\") * endRatio)\r\n\r\n\t\t\tx = x + (w - w * endRatio) / 2\r\n\t\t\tw *= endRatio\r\n\r\n\t\t\tlet tmpH = h\r\n\t\t\th *= endRatio\r\n\t\t\ty += (reversed ? -1 : 1) * (tmpH - h)\r\n\r\n\t\t\tlet tmpSustainH = sustainH\r\n\t\t\tsustainH *= endRatio\r\n\t\t\tsustainY +=\r\n\t\t\t\t(reversed ? -1 : 1) * (tmpSustainH - sustainH) +\r\n\t\t\t\t(reversed ? -1 : 1) * (tmpH - h)\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tx: x + 1,\r\n\t\t\ty: y + 1 - hCorrection,\r\n\t\t\tw: w - 2,\r\n\t\t\th: h - 2,\r\n\t\t\trad: rad,\r\n\t\t\tsustainH: sustainH,\r\n\t\t\tsustainY: sustainY,\r\n\t\t\tisBlack: isKeyBlack\r\n\t\t}\r\n\t}\r\n\r\n\tgetNoteToHeightConst() {\r\n\t\treturn getSetting(\"noteToHeightConst\") * this.windowHeight\r\n\t}\r\n\r\n\tgetSecondsDisplayedBefore() {\r\n\t\tlet pianoPos = getSetting(\"pianoPosition\") / 100\r\n\t\treturn Math.ceil(((1 - pianoPos) * this.getNoteToHeightConst()) / 1000)\r\n\t}\r\n\tgetSecondsDisplayedAfter() {\r\n\t\treturn Math.ceil(this.getMilisecondsDisplayedAfter() / 1000)\r\n\t}\r\n\tgetMilisecondsDisplayedAfter() {\r\n\t\tlet pianoPos = getSetting(\"pianoPosition\") / 100\r\n\t\treturn (\r\n\t\t\tpianoPos *\r\n\t\t\t(this.getNoteToHeightConst() / getSetting(\"playedNoteFalloffSpeed\"))\r\n\t\t)\r\n\t}\r\n\r\n\t//ZOOM\r\n\tshowAll() {\r\n\t\tthis.setZoom(MIN_NOTE_NUMBER, MAX_NOTE_NUMBER)\r\n\t}\r\n\tfitSong(range) {\r\n\t\trange.min = Math.max(range.min, MIN_NOTE_NUMBER)\r\n\t\trange.max = Math.min(range.max, MAX_NOTE_NUMBER)\r\n\t\twhile (\r\n\t\t\tisBlack(range.min - MIN_NOTE_NUMBER) &&\r\n\t\t\trange.min > MIN_NOTE_NUMBER\r\n\t\t) {\r\n\t\t\trange.min--\r\n\t\t}\r\n\t\twhile (\r\n\t\t\tisBlack(range.max - MIN_NOTE_NUMBER) &&\r\n\t\t\trange.max < MAX_NOTE_NUMBER\r\n\t\t) {\r\n\t\t\trange.max++\r\n\t\t}\r\n\t\tthis.setZoom(range.min, range.max)\r\n\t}\r\n\tzoomIn() {\r\n\t\tthis.minNoteNumber++\r\n\t\tthis.maxNoteNumber--\r\n\t\twhile (\r\n\t\t\tisBlack(this.minNoteNumber - MIN_NOTE_NUMBER) &&\r\n\t\t\tthis.minNoteNumber < this.maxNoteNumber\r\n\t\t) {\r\n\t\t\tthis.minNoteNumber++\r\n\t\t}\r\n\t\twhile (\r\n\t\t\tisBlack(this.maxNoteNumber - MIN_NOTE_NUMBER) &&\r\n\t\t\tthis.maxNoteNumber > this.minNoteNumber\r\n\t\t) {\r\n\t\t\tthis.maxNoteNumber--\r\n\t\t}\r\n\t\tthis.setZoom(this.minNoteNumber, this.maxNoteNumber)\r\n\t}\r\n\tzoomOut() {\r\n\t\tthis.minNoteNumber--\r\n\t\tthis.maxNoteNumber++\r\n\t\twhile (\r\n\t\t\tisBlack(this.minNoteNumber - MIN_NOTE_NUMBER) &&\r\n\t\t\tthis.minNoteNumber > MIN_NOTE_NUMBER\r\n\t\t) {\r\n\t\t\tthis.minNoteNumber--\r\n\t\t}\r\n\t\twhile (\r\n\t\t\tisBlack(this.maxNoteNumber - MIN_NOTE_NUMBER) &&\r\n\t\t\tthis.maxNoteNumber < MAX_NOTE_NUMBER\r\n\t\t) {\r\n\t\t\tthis.maxNoteNumber++\r\n\t\t}\r\n\t\tthis.setZoom(\r\n\t\t\tMath.max(MIN_NOTE_NUMBER, this.minNoteNumber),\r\n\t\t\tMath.min(MAX_NOTE_NUMBER, this.maxNoteNumber)\r\n\t\t)\r\n\t}\r\n\tmoveViewLeft() {\r\n\t\tif (this.minNoteNumber == MIN_NOTE_NUMBER) return\r\n\t\tthis.minNoteNumber--\r\n\t\tthis.maxNoteNumber--\r\n\t\twhile (\r\n\t\t\tisBlack(this.minNoteNumber - MIN_NOTE_NUMBER) &&\r\n\t\t\tthis.minNoteNumber > MIN_NOTE_NUMBER\r\n\t\t) {\r\n\t\t\tthis.minNoteNumber--\r\n\t\t}\r\n\t\twhile (isBlack(this.maxNoteNumber - MIN_NOTE_NUMBER)) {\r\n\t\t\tthis.maxNoteNumber--\r\n\t\t}\r\n\t\tthis.setZoom(\r\n\t\t\tMath.max(MIN_NOTE_NUMBER, this.minNoteNumber),\r\n\t\t\tthis.maxNoteNumber\r\n\t\t)\r\n\t}\r\n\tmoveViewRight() {\r\n\t\tif (this.maxNoteNumber == MAX_NOTE_NUMBER) return\r\n\t\tthis.minNoteNumber++\r\n\t\tthis.maxNoteNumber++\r\n\t\twhile (isBlack(this.minNoteNumber - MIN_NOTE_NUMBER)) {\r\n\t\t\tthis.minNoteNumber++\r\n\t\t}\r\n\t\twhile (\r\n\t\t\tisBlack(this.maxNoteNumber - MIN_NOTE_NUMBER) &&\r\n\t\t\tthis.maxNoteNumber < MAX_NOTE_NUMBER\r\n\t\t) {\r\n\t\t\tthis.maxNoteNumber++\r\n\t\t}\r\n\r\n\t\tthis.setZoom(\r\n\t\t\tthis.minNoteNumber,\r\n\t\t\tMath.min(MAX_NOTE_NUMBER, this.maxNoteNumber)\r\n\t\t)\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param {Number} minNoteNumber\r\n\t * @param {Number} maxNoteNumber\r\n\t */\r\n\tsetZoom(minNoteNumber, maxNoteNumber) {\r\n\t\tlet numOfWhiteKeysInRange = 0\r\n\t\tfor (let i = minNoteNumber; i <= maxNoteNumber; i++) {\r\n\t\t\tnumOfWhiteKeysInRange += isBlack(i - MIN_NOTE_NUMBER) ? 0 : 1\r\n\t\t}\r\n\t\tthis.minNoteNumber = minNoteNumber\r\n\t\tthis.maxNoteNumber = maxNoteNumber\r\n\t\tthis.numberOfWhiteKeysShown = numOfWhiteKeysInRange\r\n\r\n\t\tthis.resize()\r\n\t}\r\n}\r\n","import { getSetting } from \"../settings/Settings.js\"\r\n\r\n/**\r\n * Class to render the sustain events in the midi-song. Can fill the sustain periods or draw lines for the individual control-events.\r\n */\r\nexport class SustainRender {\r\n\tconstructor(ctx, renderDimensions, lookBackTime, lookAheadTime) {\r\n\t\tthis.ctx = ctx\r\n\t\tthis.renderDimensions = renderDimensions\r\n\r\n\t\tthis.sustainPeriodFillStyle = \"rgba(0,0,0,0.4)\"\r\n\t\tthis.sustainOnStrokeStyle = \"rgba(55,155,55,0.6)\"\r\n\t\tthis.sustainOffStrokeStyle = \"rgba(155,55,55,0.6)\"\r\n\t\tthis.sustainOnOffFont = \"12px Arial black\"\r\n\t}\r\n\trender(time, sustainsBySecond, sustainPeriods) {\r\n\t\tif (getSetting(\"showSustainOnOffs\")) {\r\n\t\t\tthis.renderSustainOnOffs(time, sustainsBySecond)\r\n\t\t}\r\n\t\tif (getSetting(\"showSustainPeriods\")) {\r\n\t\t\tthis.renderSustainPeriods(time, sustainPeriods)\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * Renders On/Off Sustain Control-Events as lines on screen.\r\n\t *\r\n\t * @param {Number} time\r\n\t * @param {Object} sustainsBySecond\r\n\t */\r\n\trenderSustainOnOffs(time, sustainsBySecond) {\r\n\t\tlet lookBackTime = Math.floor(\r\n\t\t\ttime - this.renderDimensions.getSecondsDisplayedAfter() - 4\r\n\t\t)\r\n\t\tlet lookAheadTime = Math.ceil(\r\n\t\t\ttime + this.renderDimensions.getSecondsDisplayedBefore() + 1\r\n\t\t)\r\n\r\n\t\tfor (\r\n\t\t\tlet lookUpTime = lookBackTime;\r\n\t\t\tlookUpTime < lookAheadTime;\r\n\t\t\tlookUpTime++\r\n\t\t) {\r\n\t\t\tif (sustainsBySecond.hasOwnProperty(lookUpTime)) {\r\n\t\t\t\tsustainsBySecond[lookUpTime].forEach(sustain => {\r\n\t\t\t\t\tthis.ctx.lineWidth = \"1\"\r\n\t\t\t\t\tlet text = \"\"\r\n\t\t\t\t\tthis.ctx.fillStyle = \"rgba(0,0,0,0.8)\"\r\n\t\t\t\t\tif (sustain.isOn) {\r\n\t\t\t\t\t\tthis.ctx.strokeStyle = this.sustainOnStrokeStyle\r\n\t\t\t\t\t\ttext = \"Sustain On\"\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.ctx.strokeStyle = this.sustainOffStrokeStyle\r\n\t\t\t\t\t\ttext = \"Sustain Off\"\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet y = this.renderDimensions.getYForTime(\r\n\t\t\t\t\t\tsustain.timestamp - time * 1000\r\n\t\t\t\t\t)\r\n\t\t\t\t\tthis.ctx.beginPath()\r\n\t\t\t\t\tthis.ctx.moveTo(0, y)\r\n\t\t\t\t\tthis.ctx.lineTo(this.renderDimensions.windowWidth, y)\r\n\t\t\t\t\tthis.ctx.closePath()\r\n\t\t\t\t\tthis.ctx.stroke()\r\n\r\n\t\t\t\t\tthis.ctx.fillStyle = \"rgba(200,200,200,0.9)\"\r\n\t\t\t\t\tthis.ctx.font = this.sustainOnOffFont\r\n\t\t\t\t\tthis.ctx.fillText(text, 10, y - 12)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * Renders Sustain Periods as rectangles on screen.\r\n\t * @param {Number} time\r\n\t * @param {Array} sustainPeriods\r\n\t */\r\n\trenderSustainPeriods(time, sustainPeriods) {\r\n\t\tlet firstSecondShown = Math.floor(\r\n\t\t\ttime - this.renderDimensions.getSecondsDisplayedAfter() - 4\r\n\t\t)\r\n\t\tlet lastSecondShown = Math.ceil(\r\n\t\t\ttime + this.renderDimensions.getSecondsDisplayedBefore() + 1\r\n\t\t)\r\n\t\tthis.ctx.fillStyle = this.sustainPeriodFillStyle\r\n\r\n\t\tsustainPeriods\r\n\t\t\t.filter(\r\n\t\t\t\tperiod =>\r\n\t\t\t\t\t(period.start < lastSecondShown * 1000 &&\r\n\t\t\t\t\t\tperiod.start > firstSecondShown * 1000) ||\r\n\t\t\t\t\t(period.start < firstSecondShown * 1000 &&\r\n\t\t\t\t\t\tperiod.end > firstSecondShown * 1000)\r\n\t\t\t)\r\n\t\t\t.forEach(period => {\r\n\t\t\t\tlet yStart = this.renderDimensions.getYForTime(\r\n\t\t\t\t\tperiod.start - time * 1000\r\n\t\t\t\t)\r\n\t\t\t\tlet yEnd = this.renderDimensions.getYForTime(period.end - time * 1000)\r\n\r\n\t\t\t\tthis.ctx.fillRect(\r\n\t\t\t\t\t0,\r\n\t\t\t\t\tyEnd,\r\n\t\t\t\t\tthis.renderDimensions.windowWidth,\r\n\t\t\t\t\tyStart - yEnd\r\n\t\t\t\t)\r\n\t\t\t})\r\n\t}\r\n}\r\n","import { CONST } from \"./data/CONST.js\"\r\nexport class Song {\r\n\tconstructor(midiData, fileName, name) {\r\n\t\tthis.fileName = fileName\r\n\t\tthis.name = name || fileName\r\n\t\tthis.text = []\r\n\t\tthis.timeSignature\r\n\t\tthis.keySignarture\r\n\t\tthis.duration = 0\r\n\t\tthis.speed = 1\r\n\t\tthis.notesBySeconds = {}\r\n\t\tthis.controlEvents = []\r\n\t\tthis.temporalData = midiData.temporalData\r\n\t\tthis.sustainsBySecond = midiData.temporalData.sustainsBySecond\r\n\r\n\t\tthis.header = midiData.header\r\n\t\tthis.tracks = midiData.tracks\r\n\t\tthis.markers = []\r\n\t\tthis.otherTracks = []\r\n\t\tthis.activeTracks = []\r\n\t\tthis.microSecondsPerBeat = 10\r\n\t\tthis.channels = this.getDefaultChannels()\r\n\t\tthis.idCounter = 0\r\n\r\n\t\tthis.processEvents(midiData)\r\n\t\tconsole.log(this)\r\n\t}\r\n\tgetStart() {\r\n\t\treturn this.getNoteSequence()[0].timestamp\r\n\t}\r\n\tgetEnd() {\r\n\t\tif (!this.end) {\r\n\t\t\tlet noteSequence = this.getNoteSequence().sort(\r\n\t\t\t\t(a, b) => a.offTime - b.offTime\r\n\t\t\t)\r\n\t\t\tlet lastNote = noteSequence[noteSequence.length - 1]\r\n\t\t\tthis.end = lastNote.offTime\r\n\t\t}\r\n\t\treturn this.end\r\n\t}\r\n\tgetOffset() {\r\n\t\tif (!this.smpteOffset) {\r\n\t\t\treturn 0 //\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t((this.smpteOffset.hour * 60 + this.smpteOffset.min) * 60 +\r\n\t\t\t\t\tthis.smpteOffset.sec) *\r\n\t\t\t\t1000\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\tgetMeasureLines() {\r\n\t\tif (!this.measureLines) {\r\n\t\t\tthis.setMeasureLines()\r\n\t\t}\r\n\t\treturn this.measureLines\r\n\t}\r\n\tsetMeasureLines() {\r\n\t\tlet timeSignature = this.timeSignature || {\r\n\t\t\tnumerator: 4,\r\n\t\t\tdenominator: 4,\r\n\t\t\tthirtySeconds: 8\r\n\t\t}\r\n\t\tlet numerator = timeSignature.numerator || 4\r\n\t\tlet denominator = timeSignature.denominator || 4\r\n\t\tlet thirtySeconds = timeSignature.thirtyseconds || 8\r\n\r\n\t\tlet beatsPerMeasure = numerator / (denominator * (thirtySeconds / 32))\r\n\t\tlet skippedBeats = beatsPerMeasure - 1\r\n\t\tthis.measureLines = {}\r\n\t\tObject.keys(this.temporalData.beatsBySecond).forEach(second => {\r\n\t\t\tthis.temporalData.beatsBySecond[second].forEach(beat => {\r\n\t\t\t\tif (skippedBeats < beatsPerMeasure - 1) {\r\n\t\t\t\t\tskippedBeats++\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\tskippedBeats = 0\r\n\t\t\t\tif (!this.measureLines.hasOwnProperty(second)) {\r\n\t\t\t\t\tthis.measureLines[second] = []\r\n\t\t\t\t}\r\n\t\t\t\tthis.measureLines[second].push(beat)\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\tsetSustainPeriods() {\r\n\t\tthis.sustainPeriods = []\r\n\t\tlet isOn = false\r\n\t\tfor (let second in this.sustainsBySecond) {\r\n\t\t\tthis.sustainsBySecond[second].forEach(sustain => {\r\n\t\t\t\tif (isOn) {\r\n\t\t\t\t\tif (!sustain.isOn) {\r\n\t\t\t\t\t\tisOn = false\r\n\t\t\t\t\t\tthis.sustainPeriods[this.sustainPeriods.length - 1].end =\r\n\t\t\t\t\t\t\tsustain.timestamp\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (sustain.isOn) {\r\n\t\t\t\t\t\tisOn = true\r\n\t\t\t\t\t\tthis.sustainPeriods.push({\r\n\t\t\t\t\t\t\tstart: sustain.timestamp,\r\n\t\t\t\t\t\t\tvalue: sustain.value\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\tgetMicrosecondsPerBeat() {\r\n\t\treturn this.microSecondsPerBeat\r\n\t}\r\n\tgetBPM(time) {\r\n\t\tfor (let i = this.temporalData.bpms.length - 1; i >= 0; i--) {\r\n\t\t\tif (this.temporalData.bpms[i].timestamp < time) {\r\n\t\t\t\treturn this.temporalData.bpms[i].bpm\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgetNotes(from, to) {\r\n\t\tlet secondStart = Math.floor(from)\r\n\t\tlet secondEnd = Math.floor(to)\r\n\t\tlet notes = []\r\n\t\tfor (let i = secondStart; i < secondEnd; i++) {\r\n\t\t\tfor (let track in this.activeTracks) {\r\n\t\t\t\tif (this.activeTracks[track].notesBySeconds.hasOwnProperty(i)) {\r\n\t\t\t\t\tfor (let n in this.activeTracks[track].notesBySeconds[i]) {\r\n\t\t\t\t\t\tlet note = this.activeTracks[track].notesBySeconds[i][n]\r\n\t\t\t\t\t\tif (note.timestamp > from) {\r\n\t\t\t\t\t\t\tnotes.push(note)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn notes\r\n\t}\r\n\tgetAllInstruments() {\r\n\t\tlet instruments = {}\r\n\t\tlet programs = {}\r\n\t\tthis.controlEvents = {}\r\n\t\tthis.tracks.forEach(track => {\r\n\t\t\ttrack.forEach(event => {\r\n\t\t\t\tlet channel = event.channel\r\n\r\n\t\t\t\tif (event.type == \"programChange\") {\r\n\t\t\t\t\tprograms[channel] = event.programNumber\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (event.type == \"controller\" && event.controllerType == 7) {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\t!this.controlEvents.hasOwnProperty(\r\n\t\t\t\t\t\t\tMath.floor(event.timestamp / 1000)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tthis.controlEvents[Math.floor(event.timestamp / 1000)] = []\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.controlEvents[Math.floor(event.timestamp / 1000)].push(event)\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (event.type == \"noteOn\") {\r\n\t\t\t\t\tif (channel != 9) {\r\n\t\t\t\t\t\tlet program = programs[channel]\r\n\t\t\t\t\t\tlet instrument =\r\n\t\t\t\t\t\t\tCONST.INSTRUMENTS.BY_ID[isFinite(program) ? program : channel]\r\n\t\t\t\t\t\tinstruments[instrument.id] = true\r\n\t\t\t\t\t\tevent.instrument = instrument.id\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tinstruments[\"percussion\"] = true\r\n\t\t\t\t\t\tevent.instrument = \"percussion\"\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t\treturn Object.keys(instruments)\r\n\t}\r\n\tprocessEvents(midiData) {\r\n\t\tthis.setSustainPeriods()\r\n\t\tmidiData.tracks.forEach(midiTrack => {\r\n\t\t\tlet newTrack = {\r\n\t\t\t\tnotes: [],\r\n\t\t\t\tmeta: [],\r\n\t\t\t\ttempoChanges: []\r\n\t\t\t}\r\n\r\n\t\t\tthis.distributeEvents(midiTrack, newTrack)\r\n\r\n\t\t\tif (newTrack.notes.length) {\r\n\t\t\t\tthis.activeTracks.push(newTrack)\r\n\t\t\t} else {\r\n\t\t\t\tthis.otherTracks.push(newTrack)\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tthis.activeTracks.forEach((track, trackIndex) => {\r\n\t\t\ttrack.notesBySeconds = {}\r\n\t\t\tthis.setNoteOffTimestamps(track.notes)\r\n\t\t\tthis.setNoteSustainTimestamps(track.notes)\r\n\t\t\ttrack.notes = track.notes.slice(0).filter(note => note.type == \"noteOn\")\r\n\t\t\ttrack.notes.forEach(note => (note.track = trackIndex))\r\n\t\t\tthis.setNotesBySecond(track)\r\n\t\t})\r\n\t}\r\n\tdistributeEvents(track, newTrack) {\r\n\t\ttrack.forEach(event => {\r\n\t\t\tevent.id = this.idCounter++\r\n\t\t\tif (event.type == \"noteOn\" || event.type == \"noteOff\") {\r\n\t\t\t\tnewTrack.notes.push(event)\r\n\t\t\t} else if (event.type == \"setTempo\") {\r\n\t\t\t\tnewTrack.tempoChanges.push(event)\r\n\t\t\t} else if (event.type == \"trackName\") {\r\n\t\t\t\tnewTrack.name = event.text\r\n\t\t\t} else if (event.type == \"text\") {\r\n\t\t\t\tthis.text.push(event.text)\r\n\t\t\t} else if (event.type == \"timeSignature\") {\r\n\t\t\t\tthis.timeSignature = event\r\n\t\t\t} else if (event.type == \"keySignature\") {\r\n\t\t\t\tnewTrack.keySignature = event\r\n\t\t\t} else if (event.type == \"smpteOffset\") {\r\n\t\t\t\tthis.smpteOffset = event\r\n\t\t\t} else if (event.type == \"marker\") {\r\n\t\t\t\tthis.markers.push(event)\r\n\t\t\t} else {\r\n\t\t\t\tnewTrack.meta.push(event)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tsetNotesBySecond(track) {\r\n\t\ttrack.notes.forEach(note => {\r\n\t\t\tlet second = Math.floor(note.timestamp / 1000)\r\n\t\t\tif (track.notesBySeconds.hasOwnProperty(second)) {\r\n\t\t\t\ttrack.notesBySeconds[second].push(note)\r\n\t\t\t} else {\r\n\t\t\t\ttrack.notesBySeconds[second] = [note]\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\tgetNoteSequence() {\r\n\t\tif (!this.notesSequence) {\r\n\t\t\tlet tracks = []\r\n\t\t\tfor (let t in this.activeTracks) [tracks.push(this.activeTracks[t].notes)]\r\n\r\n\t\t\tthis.noteSequence = [].concat\r\n\t\t\t\t.apply([], tracks)\r\n\t\t\t\t.sort((a, b) => a.timestamp - b.timestamp)\r\n\t\t}\r\n\t\treturn this.noteSequence.slice(0)\r\n\t}\r\n\tgetNoteRange() {\r\n\t\tlet seq = this.getNoteSequence()\r\n\t\tlet min = 87\r\n\t\tlet max = 0\r\n\t\tseq.forEach(note => {\r\n\t\t\tif (note.noteNumber > max) {\r\n\t\t\t\tmax = note.noteNumber\r\n\t\t\t}\r\n\t\t\tif (note.noteNumber < min) {\r\n\t\t\t\tmin = note.noteNumber\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn { min, max }\r\n\t}\r\n\tsetNoteSustainTimestamps(notes) {\r\n\t\tfor (let i = 0; i < notes.length; i++) {\r\n\t\t\tlet note = notes[i]\r\n\t\t\tlet currentSustains = this.sustainPeriods.filter(\r\n\t\t\t\tperiod =>\r\n\t\t\t\t\t(period.start < note.timestamp && period.end > note.timestamp) ||\r\n\t\t\t\t\t(period.start < note.offTime && period.end > note.offTime)\r\n\t\t\t)\r\n\t\t\tif (currentSustains.length) {\r\n\t\t\t\tnote.sustainOnTime = currentSustains[0].start\r\n\t\t\t\tlet end = Math.max.apply(\r\n\t\t\t\t\tnull,\r\n\t\t\t\t\tcurrentSustains.map(sustain => sustain.end)\r\n\t\t\t\t)\r\n\t\t\t\tnote.sustainOffTime = end\r\n\t\t\t\tnote.sustainDuration = note.sustainOffTime - note.timestamp\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tsetNoteOffTimestamps(notes) {\r\n\t\tfor (let i = 0; i < notes.length; i++) {\r\n\t\t\tlet note = notes[i]\r\n\t\t\tif (note.type == \"noteOn\") {\r\n\t\t\t\tSong.findOffNote(i, notes.slice(0))\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tstatic findOffNote(index, notes) {\r\n\t\tlet onNote = notes[index]\r\n\t\tfor (let i = index + 1; i < notes.length; i++) {\r\n\t\t\tif (\r\n\t\t\t\tnotes[i].type == \"noteOff\" &&\r\n\t\t\t\tonNote.noteNumber == notes[i].noteNumber\r\n\t\t\t) {\r\n\t\t\t\tonNote.offTime = notes[i].timestamp\r\n\t\t\t\tonNote.offVelocity = notes[i].velocity\r\n\t\t\t\tonNote.duration = onNote.offTime - onNote.timestamp\r\n\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgetDefaultChannels() {\r\n\t\tlet channels = {}\r\n\t\tfor (var i = 0; i <= 15; i++) {\r\n\t\t\tchannels[i] = {\r\n\t\t\t\tinstrument: i,\r\n\t\t\t\tpitchBend: 0,\r\n\t\t\t\tvolume: 127,\r\n\t\t\t\tvolumeControl: 50,\r\n\t\t\t\tmute: false,\r\n\t\t\t\tmono: false,\r\n\t\t\t\tomni: false,\r\n\t\t\t\tsolo: false\r\n\t\t\t}\r\n\t\t}\r\n\t\tchannels[9].instrument = -1\r\n\t\treturn channels\r\n\t}\r\n\tgetSongFilename() {\r\n\t\treturn this.fileName;\r\n\t}\r\n}\r\n","import { hasBuffer, setBuffer } from \"./audio/Buffers.js\"\r\nimport { getLoader } from \"./ui/Loader.js\"\r\nimport { replaceAllString, iOS } from \"./Util.js\"\r\nexport class SoundfontLoader {\r\n\t/**\r\n\t *\r\n\t * @param {String} instrument\r\n\t */\r\n\tstatic async loadInstrument(instrument, soundfontName) {\r\n\t\tlet baseUrl = \"https://gleitz.github.io/midi-js-soundfonts/\"\r\n\t\tif (instrument == \"percussion\") {\r\n\t\t\tsoundfontName = \"FluidR3_GM\"\r\n\t\t\tbaseUrl = \"\"\r\n\t\t}\r\n\t\tlet fileType = iOS ? \"mp3\" : \"ogg\"\r\n\t\treturn fetch(\r\n\t\t\tbaseUrl + soundfontName + \"/\" + instrument + \"-\" + fileType + \".js\"\r\n\t\t)\r\n\t\t\t.then(response => {\r\n\t\t\t\tif (response.ok) {\r\n\t\t\t\t\tgetLoader().setLoadMessage(\r\n\t\t\t\t\t\t\"Loaded \" + instrument + \" from \" + soundfontName + \" soundfont.\"\r\n\t\t\t\t\t)\r\n\t\t\t\t\treturn response.text()\r\n\t\t\t\t}\r\n\t\t\t\tthrow Error(response.statusText)\r\n\t\t\t})\r\n\t\t\t.then(data => {\r\n\t\t\t\tlet scr = document.createElement(\"script\")\r\n\t\t\t\tscr.language = \"javascript\"\r\n\t\t\t\tscr.type = \"text/javascript\"\r\n\t\t\t\tlet newData = replaceAllString(data, \"Soundfont\", soundfontName)\r\n\t\t\t\tscr.text = newData\r\n\t\t\t\tdocument.body.appendChild(scr)\r\n\t\t\t})\r\n\t\t\t.catch(function (error) {\r\n\t\t\t\tconsole.error(\"Error fetching soundfont: \\n\", error)\r\n\t\t\t})\r\n\t}\r\n\tstatic async loadInstruments(instruments) {\r\n\t\treturn await Promise.all(\r\n\t\t\tinstruments\r\n\t\t\t\t.slice(0)\r\n\t\t\t\t.map(instrument => SoundfontLoader.loadInstrument(instrument))\r\n\t\t)\r\n\t}\r\n\tstatic async getBuffers(ctx) {\r\n\t\tlet sortedBuffers = null\r\n\t\tawait SoundfontLoader.createBuffers(ctx).then(\r\n\t\t\tunsortedBuffers => {\r\n\t\t\t\tunsortedBuffers.forEach(noteBuffer => {\r\n\t\t\t\t\tsetBuffer(\r\n\t\t\t\t\t\tnoteBuffer.soundfontName,\r\n\t\t\t\t\t\tnoteBuffer.instrument,\r\n\t\t\t\t\t\tnoteBuffer.noteKey,\r\n\t\t\t\t\t\tnoteBuffer.buffer\r\n\t\t\t\t\t)\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\terror => console.error(error)\r\n\t\t)\r\n\t\treturn sortedBuffers\r\n\t}\r\n\tstatic async createBuffers(ctx) {\r\n\t\tlet promises = []\r\n\t\tfor (let soundfontName in MIDI) {\r\n\t\t\tfor (let instrument in MIDI[soundfontName]) {\r\n\t\t\t\tif (!hasBuffer(soundfontName, instrument)) {\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\"Loaded '\" + soundfontName + \"' instrument : \" + instrument\r\n\t\t\t\t\t)\r\n\t\t\t\t\tfor (let noteKey in MIDI[soundfontName][instrument]) {\r\n\t\t\t\t\t\tlet base64Buffer = SoundfontLoader.getBase64Buffer(\r\n\t\t\t\t\t\t\tMIDI[soundfontName][instrument][noteKey]\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\tpromises.push(\r\n\t\t\t\t\t\t\tSoundfontLoader.getNoteBuffer(\r\n\t\t\t\t\t\t\t\tctx,\r\n\t\t\t\t\t\t\t\tbase64Buffer,\r\n\t\t\t\t\t\t\t\tsoundfontName,\r\n\t\t\t\t\t\t\t\tnoteKey,\r\n\t\t\t\t\t\t\t\tinstrument\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn await Promise.all(promises)\r\n\t}\r\n\tstatic async getNoteBuffer(\r\n\t\tctx,\r\n\t\tbase64Buffer,\r\n\t\tsoundfontName,\r\n\t\tnoteKey,\r\n\t\tinstrument\r\n\t) {\r\n\t\tlet promise = new Promise((resolve, reject) => {\r\n\t\t\tctx.decodeAudioData(\r\n\t\t\t\tbase64Buffer,\r\n\t\t\t\tdecodedBuffer => {\r\n\t\t\t\t\tresolve({\r\n\t\t\t\t\t\tbuffer: decodedBuffer,\r\n\t\t\t\t\t\tnoteKey: noteKey,\r\n\t\t\t\t\t\tinstrument: instrument,\r\n\t\t\t\t\t\tsoundfontName: soundfontName\r\n\t\t\t\t\t})\r\n\t\t\t\t},\r\n\t\t\t\terror => reject(error)\r\n\t\t\t)\r\n\t\t})\r\n\t\treturn await promise\r\n\r\n\t\t//ios can't handle the promise based decodeAudioData\r\n\t\t// return await ctx\r\n\t\t// \t.decodeAudioData(base64Buffer, function (decodedBuffer) {\r\n\t\t// \t\taudioBuffer = decodedBuffer\r\n\t\t// \t})\r\n\t\t// \t.then(\r\n\t\t// \t\t() => {\r\n\t\t// \t\t\treturn {\r\n\t\t// \t\t\t\tbuffer: audioBuffer,\r\n\t\t// \t\t\t\tnoteKey: noteKey,\r\n\t\t// \t\t\t\tinstrument: instrument,\r\n\t\t// \t\t\t\tsoundfontName: soundfontName\r\n\t\t// \t\t\t}\r\n\t\t// \t\t},\r\n\t\t// \t\te => {\r\n\t\t// \t\t\tconsole.log(e)\r\n\t\t// \t\t}\r\n\t\t// \t)\r\n\t}\r\n\tstatic getBase64Buffer(str) {\r\n\t\tlet base64 = str.split(\",\")[1]\r\n\t\treturn Base64Binary.decodeArrayBuffer(base64)\r\n\t}\r\n}\r\n","function formatTime(seconds, showMilis) {\r\n\tseconds = Math.max(seconds, 0)\r\n\tlet date = new Date(seconds * 1000)\r\n\tlet timeStrLength = showMilis ? 11 : 8\r\n\ttry {\r\n\t\tlet timeStr = date.toISOString().substr(11, timeStrLength)\r\n\t\tif (timeStr.substr(0, 2) == \"00\") {\r\n\t\t\ttimeStr = timeStr.substr(3)\r\n\t\t}\r\n\t\treturn timeStr\r\n\t} catch (e) {\r\n\t\tconsole.error(e)\r\n\t\t//ignore this. only seems to happend when messing with breakpoints in devtools\r\n\t}\r\n}\r\n/**\r\n *  Checks whether a note Number corresponds to a black piano key\r\n * @param {Number} noteNumber\r\n */\r\nfunction isBlack(noteNumber) {\r\n\treturn (noteNumber + 11) % 12 == 0 ||\r\n\t\t(noteNumber + 8) % 12 == 0 ||\r\n\t\t(noteNumber + 6) % 12 == 0 ||\r\n\t\t(noteNumber + 3) % 12 == 0 ||\r\n\t\t(noteNumber + 1) % 12 == 0\r\n\t\t? 1\r\n\t\t: 0\r\n}\r\nfunction sum(arr) {\r\n\treturn arr.reduce((previousVal, currentVal) => previousVal + currentVal)\r\n}\r\n\r\n/**\r\n *\r\n * @param {CanvasRenderingContext2D} ctx\r\n * @param {Number} x\r\n * @param {Number} y\r\n * @param {Number} width\r\n * @param {Number} height\r\n * @param {Number} radius\r\n */\r\nfunction drawRoundRect(ctx, x, y, width, height, radius, isRounded) {\r\n\t// radius = radius * 2 < ( Math.min( height, width ) ) ? radius : ( Math.min( height, width ) ) / 2\r\n\tif (typeof radius === \"undefined\") {\r\n\t\tradius = 0\r\n\t}\r\n\tif (typeof radius === \"number\") {\r\n\t\tradius = Math.min(radius, Math.min(width / 2, height / 2))\r\n\t\tradius = {\r\n\t\t\ttl: radius,\r\n\t\t\ttr: radius,\r\n\t\t\tbr: radius,\r\n\t\t\tbl: radius\r\n\t\t}\r\n\t} else {\r\n\t\tvar defaultRadius = {\r\n\t\t\ttl: 0,\r\n\t\t\ttr: 0,\r\n\t\t\tbr: 0,\r\n\t\t\tbl: 0\r\n\t\t}\r\n\t\tfor (var side in defaultRadius) {\r\n\t\t\tradius[side] = radius[side] || defaultRadius[side]\r\n\t\t}\r\n\t}\r\n\r\n\tctx.beginPath()\r\n\tif (!isRounded) {\r\n\t\tctx.moveTo(x + radius.tl, y)\r\n\t\tctx.lineTo(x + width - radius.tr, y)\r\n\t\tctx.lineTo(x + width, y + radius.tr)\r\n\t\tctx.lineTo(x + width, y + height - radius.br)\r\n\t\tctx.lineTo(x + width - radius.br, y + height)\r\n\t\tctx.lineTo(x + radius.bl, y + height)\r\n\t\tctx.lineTo(x, y + height - radius.bl)\r\n\t\tctx.lineTo(x, y + radius.tl)\r\n\t\tctx.lineTo(x + radius.tl, y)\r\n\t} else {\r\n\t\tctx.moveTo(x + radius.tl, y)\r\n\t\tctx.lineTo(x + width - radius.tr, y)\r\n\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius.tr)\r\n\t\tctx.lineTo(x + width, y + height - radius.br)\r\n\t\tctx.quadraticCurveTo(\r\n\t\t\tx + width,\r\n\t\t\ty + height,\r\n\t\t\tx + width - radius.br,\r\n\t\t\ty + height\r\n\t\t)\r\n\t\tctx.lineTo(x + radius.bl, y + height)\r\n\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius.bl)\r\n\t\tctx.lineTo(x, y + radius.tl)\r\n\t\tctx.quadraticCurveTo(x, y, x + radius.tl, y)\r\n\t}\r\n\tctx.closePath()\r\n}\r\n\r\nfunction replaceAllString(text, replaceThis, withThat) {\r\n\treturn text.replace(new RegExp(replaceThis, \"g\"), withThat)\r\n}\r\n\r\nfunction groupArrayBy(arr, keyFunc) {\r\n\tlet keys = {}\r\n\tarr.forEach(el => (keys[keyFunc(el)] = []))\r\n\tObject.keys(keys).forEach(key => {\r\n\t\tarr.forEach(el => (keyFunc(el) == key ? keys[keyFunc(el)].push(el) : null))\r\n\t})\r\n\treturn keys\r\n}\r\nfunction loadJson(url, callback) {\r\n\tlet request = new XMLHttpRequest()\r\n\trequest.overrideMimeType(\"application/json\")\r\n\trequest.open(\"GET\", url, true)\r\n\trequest.onreadystatechange = function () {\r\n\t\tif (request.readyState == 4 && request.status == \"200\") {\r\n\t\t\tcallback(request.responseText)\r\n\t\t}\r\n\t}\r\n\trequest.send(null)\r\n}\r\n\r\nfunction iOS() {\r\n\treturn (\r\n\t\t[\r\n\t\t\t\"iPad Simulator\",\r\n\t\t\t\"iPhone Simulator\",\r\n\t\t\t\"iPod Simulator\",\r\n\t\t\t\"iPad\",\r\n\t\t\t\"iPhone\",\r\n\t\t\t\"iPod\"\r\n\t\t].includes(navigator.platform) ||\r\n\t\t// iPad on iOS 13 detection\r\n\t\t(navigator.userAgent.includes(\"Mac\") && \"ontouchend\" in document)\r\n\t)\r\n}\r\n\r\nexport {\r\n\tformatTime,\r\n\tisBlack,\r\n\tsum,\r\n\tdrawRoundRect,\r\n\treplaceAllString,\r\n\tgroupArrayBy,\r\n\tloadJson,\r\n\tiOS\r\n}\r\n","import { getSetting } from \"../settings/Settings.js\"\r\nimport {\r\n\tcreateCompleteGainNode,\r\n\tcreateContinuousGainNode\r\n} from \"./GainNodeController.js\"\r\n\r\nclass AudioNote {\r\n\tconstructor(context, buffer) {\r\n\t\tthis.source = context.createBufferSource()\r\n\t\tthis.source.buffer = buffer\r\n\t}\r\n\r\n\tconnectSource(context, gainNode) {\r\n\t\tthis.source.connect(gainNode)\r\n\t\tthis.getGainNode().connect(context.destination)\r\n\t}\r\n\tgetGainNode() {\r\n\t\treturn this.gainNodeController.gainNode\r\n\t}\r\n\tsuspend() {\r\n\t\tthis.source.stop(0)\r\n\t}\r\n\tplay(time) {\r\n\t\tthis.source.start(time)\r\n\t}\r\n\tendAt(time, isSustained) {\r\n\t\tlet endTime = this.gainNodeController.endAt(time, isSustained)\r\n\t\tthis.endSourceAt(endTime + 0.5)\r\n\t}\r\n\tendSourceAt(time) {\r\n\t\tthis.source.stop(time)\r\n\t}\r\n}\r\n\r\nexport const createContinuousAudioNote = (context, buffer, volume) => {\r\n\tlet audioNote = new AudioNote(context, buffer)\r\n\r\n\taudioNote.gainNodeController = createContinuousGainNode(\r\n\t\tcontext,\r\n\t\tcontext.currentTime,\r\n\t\tvolume\r\n\t)\r\n\r\n\taudioNote.connectSource(context, audioNote.gainNodeController.gainNode)\r\n\taudioNote.play(context.currentTime)\r\n\treturn audioNote\r\n}\r\n\r\nexport const createCompleteAudioNote = (\r\n\tnote,\r\n\tcurrentSongTime,\r\n\tplaybackSpeed,\r\n\tvolume,\r\n\tisPlayalong,\r\n\tcontext,\r\n\tbuffer\r\n) => {\r\n\tlet audioNote = new AudioNote(context, buffer)\r\n\tconst gainValue = getNoteGain(note, volume)\r\n\tif (gainValue == 0) {\r\n\t\treturn audioNote\r\n\t}\r\n\r\n\tlet contextTimes = getContextTimesForNote(\r\n\t\tcontext,\r\n\t\tnote,\r\n\t\tcurrentSongTime,\r\n\t\tplaybackSpeed,\r\n\t\tisPlayalong\r\n\t)\r\n\tconst isSustained = contextTimes.end < contextTimes.sustainOff\r\n\r\n\taudioNote.gainNodeController = createCompleteGainNode(\r\n\t\tcontext,\r\n\t\tgainValue,\r\n\t\tcontextTimes,\r\n\t\tisSustained\r\n\t)\r\n\r\n\taudioNote.connectSource(context, audioNote.getGainNode())\r\n\r\n\taudioNote.play(contextTimes.start)\r\n\taudioNote.endAt(\r\n\t\tisSustained ? contextTimes.sustainOff : contextTimes.end,\r\n\t\tisSustained\r\n\t)\r\n\r\n\treturn audioNote\r\n}\r\n\r\nfunction getContextTimesForNote(\r\n\tcontext,\r\n\tnote,\r\n\tcurrentSongTime,\r\n\tplaybackSpeed,\r\n\tisPlayAlong\r\n) {\r\n\tlet delayUntilNote = (note.timestamp / 1000 - currentSongTime) / playbackSpeed\r\n\tlet delayCorrection = 0\r\n\tif (isPlayAlong) {\r\n\t\tdelayCorrection = getPlayalongDelayCorrection(delayUntilNote)\r\n\t\tdelayUntilNote = Math.max(0, delayUntilNote)\r\n\t}\r\n\tlet start = context.currentTime + delayUntilNote\r\n\r\n\tlet end = start + note.duration / 1000 / playbackSpeed + delayCorrection\r\n\r\n\tlet sustainOff = start + note.sustainDuration / 1000 / playbackSpeed\r\n\treturn { start, end, sustainOff }\r\n}\r\n\r\nfunction getPlayalongDelayCorrection(delayUntilNote) {\r\n\tlet delayCorrection = 0\r\n\tif (delayUntilNote < 0) {\r\n\t\tconsole.log(\"negative delay\")\r\n\t\tdelayCorrection = -1 * (delayUntilNote - 0.1)\r\n\t\tdelayUntilNote = 0.1\r\n\t}\r\n\r\n\treturn delayCorrection\r\n}\r\n\r\nfunction getNoteGain(note, volume) {\r\n\tlet gain = 2 * (note.velocity / 127) * volume\r\n\r\n\tlet clampedGain = Math.min(10.0, Math.max(-1.0, gain))\r\n\treturn clampedGain\r\n}\r\n","import { getSetting } from \"../settings/Settings.js\"\r\nimport { SoundfontLoader } from \"../SoundfontLoader.js\"\r\nimport { getLoader } from \"../ui/Loader.js\"\r\nimport {\r\n\tcreateContinuousAudioNote,\r\n\tcreateCompleteAudioNote\r\n} from \"./AudioNote.js\"\r\nimport { getBufferForNote } from \"./Buffers.js\"\r\n\r\nexport class AudioPlayer {\r\n\tconstructor() {\r\n\t\twindow.AudioContext = window.AudioContext || window.webkitAudioContext\r\n\r\n\t\tthis.context = new AudioContext()\r\n\t\tthis.buffers = {}\r\n\t\tthis.audioNotes = []\r\n\t\tthis.soundfontName = \"MusyngKite\"\r\n\r\n\t\tthis.loadMetronomeSounds()\r\n\t}\r\n\r\n\tgetContextTime() {\r\n\t\treturn this.context.currentTime\r\n\t}\r\n\tgetContext() {\r\n\t\treturn this.context\r\n\t}\r\n\tisRunning() {\r\n\t\treturn this.context.state == \"running\"\r\n\t}\r\n\tresume() {\r\n\t\tthis.context.resume()\r\n\t}\r\n\tsuspend() {\r\n\t\tthis.context.suspend()\r\n\t}\r\n\tstopAllSources() {\r\n\t\tthis.audioNotes.forEach(audioNote => {\r\n\t\t\ttry {\r\n\t\t\t\taudioNote.source.stop(0)\r\n\t\t\t} catch (error) {\r\n\t\t\t\t//Lets ignore this. Happens when notes are created while jumping on timeline\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\tcreateContinuousNote(noteNumber, volume, instrument) {\r\n\t\tif (this.context.state === \"suspended\") {\r\n\t\t\tthis.wasSuspended = true\r\n\t\t\tthis.context.resume()\r\n\t\t}\r\n\t\tlet audioNote = createContinuousAudioNote(\r\n\t\t\tthis.context,\r\n\t\t\tgetBufferForNote(this.soundfontName, instrument, noteNumber),\r\n\t\t\tvolume / 100\r\n\t\t)\r\n\r\n\t\treturn audioNote\r\n\t}\r\n\tnoteOffContinuous(audioNote) {\r\n\t\taudioNote.endAt(this.context.currentTime + 0.1, false)\r\n\t}\r\n\r\n\tplayCompleteNote(currentTime, note, playbackSpeed, volume, isPlayAlong) {\r\n\t\tconst buffer = getBufferForNote(\r\n\t\t\tthis.soundfontName,\r\n\t\t\tnote.instrument,\r\n\t\t\tnote.noteNumber\r\n\t\t)\r\n\r\n\t\tlet audioNote = createCompleteAudioNote(\r\n\t\t\tnote,\r\n\t\t\tcurrentTime,\r\n\t\t\tplaybackSpeed,\r\n\t\t\tvolume,\r\n\t\t\tisPlayAlong,\r\n\t\t\tthis.context,\r\n\t\t\tbuffer\r\n\t\t)\r\n\t\tthis.audioNotes.push(audioNote)\r\n\t}\r\n\r\n\tplayBeat(time, newMeasure) {\r\n\t\tif (time < 0) return\r\n\t\tthis.context.resume()\r\n\t\tlet ctxTime = this.context.currentTime\r\n\r\n\t\tconst source = this.context.createBufferSource()\r\n\t\tconst gainNode = this.context.createGain()\r\n\t\tgainNode.gain.value = getSetting(\"metronomeVolume\")\r\n\t\tsource.buffer = newMeasure ? this.metronomSound1 : this.metronomSound2\r\n\t\tsource.connect(gainNode)\r\n\t\tgainNode.connect(this.context.destination)\r\n\t\tsource.start(ctxTime + time)\r\n\t\tsource.stop(ctxTime + time + 0.2)\r\n\t}\r\n\r\n\tasync switchSoundfont(soundfontName, currentSong) {\r\n\t\tthis.soundfontName = soundfontName\r\n\t\tgetLoader().setLoadMessage(\"Loading Instruments\")\r\n\t\tawait this.loadInstrumentsForSong(currentSong)\r\n\t\tgetLoader().setLoadMessage(\"Loading Buffers\")\r\n\t\treturn await this.loadBuffers()\r\n\t}\r\n\tloadMetronomeSounds() {\r\n\t\tlet audioPl = this\r\n\r\n\t\tconst request = new XMLHttpRequest()\r\n\t\trequest.open(\"GET\", \"../../metronome/1.wav\")\r\n\t\trequest.responseType = \"arraybuffer\"\r\n\t\trequest.onload = function () {\r\n\t\t\tlet undecodedAudio = request.response\r\n\t\t\taudioPl.context.decodeAudioData(\r\n\t\t\t\tundecodedAudio,\r\n\t\t\t\tdata => (audioPl.metronomSound1 = data)\r\n\t\t\t)\r\n\t\t}\r\n\t\trequest.send()\r\n\r\n\t\tconst request2 = new XMLHttpRequest()\r\n\t\trequest2.open(\"GET\", \"../../metronome/2.wav\")\r\n\t\trequest2.responseType = \"arraybuffer\"\r\n\t\trequest2.onload = function () {\r\n\t\t\tlet undecodedAudio = request2.response\r\n\t\t\taudioPl.context.decodeAudioData(\r\n\t\t\t\tundecodedAudio,\r\n\t\t\t\tdata => (audioPl.metronomSound2 = data)\r\n\t\t\t)\r\n\t\t}\r\n\t\trequest2.send()\r\n\t}\r\n\tasync loadInstrumentsForSong(currentSong) {\r\n\t\tif (!this.buffers.hasOwnProperty(this.soundfontName)) {\r\n\t\t\tthis.buffers[this.soundfontName] = {}\r\n\t\t}\r\n\r\n\t\tlet instrumentsOfSong = currentSong.getAllInstruments()\r\n\r\n\t\t//filter instruments we've loaded already and directly map onto promise\r\n\t\tlet neededInstruments = instrumentsOfSong\r\n\t\t\t.filter(\r\n\t\t\t\tinstrument =>\r\n\t\t\t\t\t!this.buffers[this.soundfontName].hasOwnProperty(instrument)\r\n\t\t\t)\r\n\t\t\t.map(instrument =>\r\n\t\t\t\tSoundfontLoader.loadInstrument(instrument, this.soundfontName)\r\n\t\t\t)\r\n\t\tif (instrumentsOfSong.includes(\"percussion\")) {\r\n\t\t\tneededInstruments.push(\r\n\t\t\t\tSoundfontLoader.loadInstrument(\"percussion\", \"FluidR3_GM\")\r\n\t\t\t)\r\n\t\t}\r\n\t\tif (neededInstruments.length == 0) {\r\n\t\t\treturn Promise.resolve()\r\n\t\t}\r\n\t\tawait Promise.all(neededInstruments)\r\n\t}\r\n\r\n\tasync loadBuffers() {\r\n\t\treturn await SoundfontLoader.getBuffers(this.context).then(buffers => {\r\n\t\t\tconsole.log(\"Buffers loaded\")\r\n\t\t\tthis.loading = false\r\n\t\t})\r\n\t}\r\n}\r\n","import { CONST } from \"../data/CONST.js\"\r\n\r\nconst buffers = {}\r\nexport const getBuffers = () => {\r\n\treturn buffers\r\n}\r\nexport const getBufferForNote = (soundfontName, instrument, noteNumber) => {\r\n\tlet noteKey = CONST.MIDI_NOTE_TO_KEY[noteNumber + 21]\r\n\tlet buffer\r\n\tif (instrument == \"percussion\") {\r\n\t\tsoundfontName = \"FluidR3_GM\"\r\n\t}\r\n\ttry {\r\n\t\tbuffer = buffers[soundfontName][instrument][noteKey]\r\n\t} catch (e) {\r\n\t\tconsole.error(e)\r\n\t}\r\n\treturn buffer\r\n}\r\nexport const hasBuffer = (soundfontName, instrument) =>\r\n\tbuffers.hasOwnProperty(soundfontName) &&\r\n\tbuffers[soundfontName].hasOwnProperty(instrument)\r\n\r\nexport const setBuffer = (soundfontName, instrument, noteKey, buffer) => {\r\n\tif (!buffers.hasOwnProperty(soundfontName)) {\r\n\t\tbuffers[soundfontName] = {}\r\n\t}\r\n\tif (!buffers[soundfontName].hasOwnProperty(instrument)) {\r\n\t\tbuffers[soundfontName][instrument] = {}\r\n\t}\r\n\tbuffers[soundfontName][instrument][noteKey] = buffer\r\n}\r\n","import { getSetting } from \"../settings/Settings.js\"\r\n\r\nconst TIME_CONST = 0.05\r\nclass GainNodeController {\r\n\tconstructor(context) {\r\n\t\tthis.createGainNode(context)\r\n\t}\r\n\tcreateGainNode(context) {\r\n\t\tthis.gainNode = context.createGain()\r\n\t\tthis.gainNode.value = 0\r\n\t\tthis.gainNode.gain.setTargetAtTime(0, 0, TIME_CONST)\r\n\t}\r\n\r\n\tsetAttackAndDecay(start, gainValue, adsrValues) {\r\n\t\tlet endOfAttackTime = start + adsrValues.attack\r\n\r\n\t\tthis.sustainValue = gainValue * adsrValues.sustain\r\n\t\tthis.endOfDecayTime = endOfAttackTime + adsrValues.decay\r\n\r\n\t\t//Start at 0\r\n\t\tthis.gainNode.gain.linearRampToValueAtTime(0, start, TIME_CONST)\r\n\r\n\t\t//Attack\r\n\t\tthis.gainNode.gain.linearRampToValueAtTime(\r\n\t\t\tgainValue,\r\n\t\t\tendOfAttackTime,\r\n\t\t\tTIME_CONST\r\n\t\t)\r\n\t\t//Decay\r\n\t\tthis.gainNode.gain.linearRampToValueAtTime(\r\n\t\t\tthis.sustainValue,\r\n\t\t\tthis.endOfDecayTime,\r\n\t\t\tTIME_CONST\r\n\t\t)\r\n\t}\r\n\tsetReleaseGainNode(end, release) {\r\n\t\tthis.gainNode.gain.linearRampToValueAtTime(\r\n\t\t\tthis.sustainValue,\r\n\t\t\tend,\r\n\t\t\tTIME_CONST\r\n\t\t)\r\n\t\t//Release\r\n\t\tthis.gainNode.gain.linearRampToValueAtTime(0.001, end + release)\r\n\t\tthis.gainNode.gain.linearRampToValueAtTime(\r\n\t\t\t0,\r\n\t\t\tend + release + 0.001,\r\n\t\t\tTIME_CONST\r\n\t\t)\r\n\t\tthis.gainNode.gain.setTargetAtTime(0, end + release + 0.005, TIME_CONST)\r\n\t}\r\n\tendAt(endTime, isSustained) {\r\n\t\tconst release = isSustained\r\n\t\t\t? parseFloat(getSetting(\"adsrReleasePedal\"))\r\n\t\t\t: parseFloat(getSetting(\"adsrReleaseKey\"))\r\n\t\tendTime = Math.max(endTime, this.endOfDecayTime)\r\n\t\tthis.setReleaseGainNode(endTime, release)\r\n\t\treturn endTime\r\n\t}\r\n}\r\n\r\nfunction getAdsrValues() {\r\n\tlet attack = parseFloat(getSetting(\"adsrAttack\"))\r\n\tlet decay = parseFloat(getSetting(\"adsrDecay\"))\r\n\tlet sustain = parseFloat(getSetting(\"adsrSustain\")) / 100\r\n\tlet releasePedal = parseFloat(getSetting(\"adsrReleasePedal\"))\r\n\tlet releaseKey = parseFloat(getSetting(\"adsrReleaseKey\"))\r\n\treturn { attack, decay, sustain, releasePedal, releaseKey }\r\n}\r\nfunction getAdsrAdjustedForDuration(duration) {\r\n\tlet maxGainLevel = 1\r\n\tlet adsrValues = getAdsrValues()\r\n\t//If duration is smaller than decay and attack, shorten decay / set it to 0\r\n\tif (duration < adsrValues.attack + adsrValues.decay) {\r\n\t\tadsrValues.decay = Math.max(duration - adsrValues.attack, 0)\r\n\t}\r\n\t//if attack alone is longer than duration, linearly lower the maximum gain value that will be reached before\r\n\t//the sound starts to release.\r\n\tif (duration < adsrValues.attack) {\r\n\t\tlet ratio = duration / adsrValues.attack\r\n\t\tmaxGainLevel *= ratio\r\n\t\tadsrValues.attack *= ratio\r\n\t\tadsrValues.decay = 0\r\n\t\tadsrValues.sustain = 1\r\n\t}\r\n\tadsrValues.maxGainLevel = maxGainLevel\r\n\treturn adsrValues\r\n}\r\n\r\nexport const createContinuousGainNode = (context, start, gainValue) => {\r\n\tconst gainNodeGen = new GainNodeController(context)\r\n\r\n\tgainNodeGen.setAttackAndDecay(start, gainValue, getAdsrValues())\r\n\treturn gainNodeGen\r\n}\r\n\r\nexport const createCompleteGainNode = (\r\n\tcontext,\r\n\tgainValue,\r\n\tctxTimes,\r\n\tisSustained\r\n) => {\r\n\tconst gainNodeGen = new GainNodeController(context)\r\n\r\n\tconst adsrValues = getAdsrAdjustedForDuration(\r\n\t\t(isSustained ? ctxTimes.sustainOff : ctxTimes.end) - ctxTimes.start\r\n\t)\r\n\r\n\t//Adjust gain value if attack period is longer than duration of entire note.\r\n\tgainValue *= adsrValues.maxGainLevel\r\n\r\n\tgainNodeGen.setAttackAndDecay(ctxTimes.start, gainValue, adsrValues)\r\n\r\n\tlet end = ctxTimes.end\r\n\tlet release = parseFloat(getSetting(\"adsrReleaseKey\"))\r\n\tif (isSustained && getSetting(\"sustainEnabled\")) {\r\n\t\tend = ctxTimes.sustainOff\r\n\t\trelease = parseFloat(getSetting(\"adsrReleasePedal\"))\r\n\t}\r\n\r\n\treturn gainNodeGen\r\n}\r\n","export var CONST = {\r\n\tTRACK_COLORS: [\r\n\t\t{ white: \"#ffa000\", black: \"#ff8f00\" }, //orange\r\n\t\t{ white: \"#1e88e5\", black: \"#1976d2\" }, //blue\r\n\t\t{ white: \"#43a047\", black: \"#388e3c\" }, //green\r\n\t\t{ white: \"#ffeb3b\", black: \"#fdd835\" }, //yellow\r\n\t\t{ white: \"#9c27b0\", black: \"#8e24aa\" }, //pink\r\n\t\t{ white: \"#f44336\", black: \"#e53935\" }, //red\r\n\t\t{ white: \"#673ab7\", black: \"#5e35b1\" } //purple\r\n\r\n\t\t// { white: \"rgb(40,50,90)\", black: \"Blue\" },\r\n\t\t// { white: \"rgb(50,90,60)\", black: \"rgb(20,85,40)\" },\r\n\t\t// { white: \"rgb(40,50,90)\", black: \"Blue\" },\r\n\t\t// { white: \"rgb(50,90,60)\", black: \"rgb(20,85,40)\" }\r\n\t],\r\n\tINSTRUMENTS: {\r\n\t\tBY_ID: {\r\n\t\t\t0: {\r\n\t\t\t\tid: \"acoustic_grand_piano\",\r\n\t\t\t\tinstrument: \"Acoustic Grand Piano\",\r\n\t\t\t\tnumber: 0,\r\n\t\t\t\tcategory: \"Piano\"\r\n\t\t\t},\r\n\t\t\t1: {\r\n\t\t\t\tid: \"bright_acoustic_piano\",\r\n\t\t\t\tinstrument: \"Bright Acoustic Piano\",\r\n\t\t\t\tnumber: 1,\r\n\t\t\t\tcategory: \"Piano\"\r\n\t\t\t},\r\n\t\t\t2: {\r\n\t\t\t\tid: \"electric_grand_piano\",\r\n\t\t\t\tinstrument: \"Electric Grand Piano\",\r\n\t\t\t\tnumber: 2,\r\n\t\t\t\tcategory: \"Piano\"\r\n\t\t\t},\r\n\t\t\t3: {\r\n\t\t\t\tid: \"honkytonk_piano\",\r\n\t\t\t\tinstrument: \"Honky-tonk Piano\",\r\n\t\t\t\tnumber: 3,\r\n\t\t\t\tcategory: \"Piano\"\r\n\t\t\t},\r\n\t\t\t4: {\r\n\t\t\t\tid: \"electric_piano_1\",\r\n\t\t\t\tinstrument: \"Electric Piano 1\",\r\n\t\t\t\tnumber: 4,\r\n\t\t\t\tcategory: \"Piano\"\r\n\t\t\t},\r\n\t\t\t5: {\r\n\t\t\t\tid: \"electric_piano_2\",\r\n\t\t\t\tinstrument: \"Electric Piano 2\",\r\n\t\t\t\tnumber: 5,\r\n\t\t\t\tcategory: \"Piano\"\r\n\t\t\t},\r\n\t\t\t6: {\r\n\t\t\t\tid: \"harpsichord\",\r\n\t\t\t\tinstrument: \"Harpsichord\",\r\n\t\t\t\tnumber: 6,\r\n\t\t\t\tcategory: \"Piano\"\r\n\t\t\t},\r\n\t\t\t7: {\r\n\t\t\t\tid: \"clavinet\",\r\n\t\t\t\tinstrument: \"Clavinet\",\r\n\t\t\t\tnumber: 7,\r\n\t\t\t\tcategory: \"Piano\"\r\n\t\t\t},\r\n\t\t\t8: {\r\n\t\t\t\tid: \"celesta\",\r\n\t\t\t\tinstrument: \"Celesta\",\r\n\t\t\t\tnumber: 8,\r\n\t\t\t\tcategory: \"Chromatic Percussion\"\r\n\t\t\t},\r\n\t\t\t9: {\r\n\t\t\t\tid: \"glockenspiel\",\r\n\t\t\t\tinstrument: \"Glockenspiel\",\r\n\t\t\t\tnumber: 9,\r\n\t\t\t\tcategory: \"Chromatic Percussion\"\r\n\t\t\t},\r\n\t\t\t10: {\r\n\t\t\t\tid: \"music_box\",\r\n\t\t\t\tinstrument: \"Music Box\",\r\n\t\t\t\tnumber: 10,\r\n\t\t\t\tcategory: \"Chromatic Percussion\"\r\n\t\t\t},\r\n\t\t\t11: {\r\n\t\t\t\tid: \"vibraphone\",\r\n\t\t\t\tinstrument: \"Vibraphone\",\r\n\t\t\t\tnumber: 11,\r\n\t\t\t\tcategory: \"Chromatic Percussion\"\r\n\t\t\t},\r\n\t\t\t12: {\r\n\t\t\t\tid: \"marimba\",\r\n\t\t\t\tinstrument: \"Marimba\",\r\n\t\t\t\tnumber: 12,\r\n\t\t\t\tcategory: \"Chromatic Percussion\"\r\n\t\t\t},\r\n\t\t\t13: {\r\n\t\t\t\tid: \"xylophone\",\r\n\t\t\t\tinstrument: \"Xylophone\",\r\n\t\t\t\tnumber: 13,\r\n\t\t\t\tcategory: \"Chromatic Percussion\"\r\n\t\t\t},\r\n\t\t\t14: {\r\n\t\t\t\tid: \"tubular_bells\",\r\n\t\t\t\tinstrument: \"Tubular Bells\",\r\n\t\t\t\tnumber: 14,\r\n\t\t\t\tcategory: \"Chromatic Percussion\"\r\n\t\t\t},\r\n\t\t\t15: {\r\n\t\t\t\tid: \"dulcimer\",\r\n\t\t\t\tinstrument: \"Dulcimer\",\r\n\t\t\t\tnumber: 15,\r\n\t\t\t\tcategory: \"Chromatic Percussion\"\r\n\t\t\t},\r\n\t\t\t16: {\r\n\t\t\t\tid: \"drawbar_organ\",\r\n\t\t\t\tinstrument: \"Drawbar Organ\",\r\n\t\t\t\tnumber: 16,\r\n\t\t\t\tcategory: \"Organ\"\r\n\t\t\t},\r\n\t\t\t17: {\r\n\t\t\t\tid: \"percussive_organ\",\r\n\t\t\t\tinstrument: \"Percussive Organ\",\r\n\t\t\t\tnumber: 17,\r\n\t\t\t\tcategory: \"Organ\"\r\n\t\t\t},\r\n\t\t\t18: {\r\n\t\t\t\tid: \"rock_organ\",\r\n\t\t\t\tinstrument: \"Rock Organ\",\r\n\t\t\t\tnumber: 18,\r\n\t\t\t\tcategory: \"Organ\"\r\n\t\t\t},\r\n\t\t\t19: {\r\n\t\t\t\tid: \"church_organ\",\r\n\t\t\t\tinstrument: \"Church Organ\",\r\n\t\t\t\tnumber: 19,\r\n\t\t\t\tcategory: \"Organ\"\r\n\t\t\t},\r\n\t\t\t20: {\r\n\t\t\t\tid: \"reed_organ\",\r\n\t\t\t\tinstrument: \"Reed Organ\",\r\n\t\t\t\tnumber: 20,\r\n\t\t\t\tcategory: \"Organ\"\r\n\t\t\t},\r\n\t\t\t21: {\r\n\t\t\t\tid: \"accordion\",\r\n\t\t\t\tinstrument: \"Accordion\",\r\n\t\t\t\tnumber: 21,\r\n\t\t\t\tcategory: \"Organ\"\r\n\t\t\t},\r\n\t\t\t22: {\r\n\t\t\t\tid: \"harmonica\",\r\n\t\t\t\tinstrument: \"Harmonica\",\r\n\t\t\t\tnumber: 22,\r\n\t\t\t\tcategory: \"Organ\"\r\n\t\t\t},\r\n\t\t\t23: {\r\n\t\t\t\tid: \"tango_accordion\",\r\n\t\t\t\tinstrument: \"Tango Accordion\",\r\n\t\t\t\tnumber: 23,\r\n\t\t\t\tcategory: \"Organ\"\r\n\t\t\t},\r\n\t\t\t24: {\r\n\t\t\t\tid: \"acoustic_guitar_nylon\",\r\n\t\t\t\tinstrument: \"Acoustic Guitar (nylon)\",\r\n\t\t\t\tnumber: 24,\r\n\t\t\t\tcategory: \"Guitar\"\r\n\t\t\t},\r\n\t\t\t25: {\r\n\t\t\t\tid: \"acoustic_guitar_steel\",\r\n\t\t\t\tinstrument: \"Acoustic Guitar (steel)\",\r\n\t\t\t\tnumber: 25,\r\n\t\t\t\tcategory: \"Guitar\"\r\n\t\t\t},\r\n\t\t\t26: {\r\n\t\t\t\tid: \"electric_guitar_jazz\",\r\n\t\t\t\tinstrument: \"Electric Guitar (jazz)\",\r\n\t\t\t\tnumber: 26,\r\n\t\t\t\tcategory: \"Guitar\"\r\n\t\t\t},\r\n\t\t\t27: {\r\n\t\t\t\tid: \"electric_guitar_clean\",\r\n\t\t\t\tinstrument: \"Electric Guitar (clean)\",\r\n\t\t\t\tnumber: 27,\r\n\t\t\t\tcategory: \"Guitar\"\r\n\t\t\t},\r\n\t\t\t28: {\r\n\t\t\t\tid: \"electric_guitar_muted\",\r\n\t\t\t\tinstrument: \"Electric Guitar (muted)\",\r\n\t\t\t\tnumber: 28,\r\n\t\t\t\tcategory: \"Guitar\"\r\n\t\t\t},\r\n\t\t\t29: {\r\n\t\t\t\tid: \"overdriven_guitar\",\r\n\t\t\t\tinstrument: \"Overdriven Guitar\",\r\n\t\t\t\tnumber: 29,\r\n\t\t\t\tcategory: \"Guitar\"\r\n\t\t\t},\r\n\t\t\t30: {\r\n\t\t\t\tid: \"distortion_guitar\",\r\n\t\t\t\tinstrument: \"Distortion Guitar\",\r\n\t\t\t\tnumber: 30,\r\n\t\t\t\tcategory: \"Guitar\"\r\n\t\t\t},\r\n\t\t\t31: {\r\n\t\t\t\tid: \"guitar_harmonics\",\r\n\t\t\t\tinstrument: \"Guitar Harmonics\",\r\n\t\t\t\tnumber: 31,\r\n\t\t\t\tcategory: \"Guitar\"\r\n\t\t\t},\r\n\t\t\t32: {\r\n\t\t\t\tid: \"acoustic_bass\",\r\n\t\t\t\tinstrument: \"Acoustic Bass\",\r\n\t\t\t\tnumber: 32,\r\n\t\t\t\tcategory: \"Bass\"\r\n\t\t\t},\r\n\t\t\t33: {\r\n\t\t\t\tid: \"electric_bass_finger\",\r\n\t\t\t\tinstrument: \"Electric Bass (finger)\",\r\n\t\t\t\tnumber: 33,\r\n\t\t\t\tcategory: \"Bass\"\r\n\t\t\t},\r\n\t\t\t34: {\r\n\t\t\t\tid: \"electric_bass_pick\",\r\n\t\t\t\tinstrument: \"Electric Bass (pick)\",\r\n\t\t\t\tnumber: 34,\r\n\t\t\t\tcategory: \"Bass\"\r\n\t\t\t},\r\n\t\t\t35: {\r\n\t\t\t\tid: \"fretless_bass\",\r\n\t\t\t\tinstrument: \"Fretless Bass\",\r\n\t\t\t\tnumber: 35,\r\n\t\t\t\tcategory: \"Bass\"\r\n\t\t\t},\r\n\t\t\t36: {\r\n\t\t\t\tid: \"slap_bass_1\",\r\n\t\t\t\tinstrument: \"Slap Bass 1\",\r\n\t\t\t\tnumber: 36,\r\n\t\t\t\tcategory: \"Bass\"\r\n\t\t\t},\r\n\t\t\t37: {\r\n\t\t\t\tid: \"slap_bass_2\",\r\n\t\t\t\tinstrument: \"Slap Bass 2\",\r\n\t\t\t\tnumber: 37,\r\n\t\t\t\tcategory: \"Bass\"\r\n\t\t\t},\r\n\t\t\t38: {\r\n\t\t\t\tid: \"synth_bass_1\",\r\n\t\t\t\tinstrument: \"Synth Bass 1\",\r\n\t\t\t\tnumber: 38,\r\n\t\t\t\tcategory: \"Bass\"\r\n\t\t\t},\r\n\t\t\t39: {\r\n\t\t\t\tid: \"synth_bass_2\",\r\n\t\t\t\tinstrument: \"Synth Bass 2\",\r\n\t\t\t\tnumber: 39,\r\n\t\t\t\tcategory: \"Bass\"\r\n\t\t\t},\r\n\t\t\t40: {\r\n\t\t\t\tid: \"violin\",\r\n\t\t\t\tinstrument: \"Violin\",\r\n\t\t\t\tnumber: 40,\r\n\t\t\t\tcategory: \"Strings\"\r\n\t\t\t},\r\n\t\t\t41: {\r\n\t\t\t\tid: \"viola\",\r\n\t\t\t\tinstrument: \"Viola\",\r\n\t\t\t\tnumber: 41,\r\n\t\t\t\tcategory: \"Strings\"\r\n\t\t\t},\r\n\t\t\t42: {\r\n\t\t\t\tid: \"cello\",\r\n\t\t\t\tinstrument: \"Cello\",\r\n\t\t\t\tnumber: 42,\r\n\t\t\t\tcategory: \"Strings\"\r\n\t\t\t},\r\n\t\t\t43: {\r\n\t\t\t\tid: \"contrabass\",\r\n\t\t\t\tinstrument: \"Contrabass\",\r\n\t\t\t\tnumber: 43,\r\n\t\t\t\tcategory: \"Strings\"\r\n\t\t\t},\r\n\t\t\t44: {\r\n\t\t\t\tid: \"tremolo_strings\",\r\n\t\t\t\tinstrument: \"Tremolo Strings\",\r\n\t\t\t\tnumber: 44,\r\n\t\t\t\tcategory: \"Strings\"\r\n\t\t\t},\r\n\t\t\t45: {\r\n\t\t\t\tid: \"pizzicato_strings\",\r\n\t\t\t\tinstrument: \"Pizzicato Strings\",\r\n\t\t\t\tnumber: 45,\r\n\t\t\t\tcategory: \"Strings\"\r\n\t\t\t},\r\n\t\t\t46: {\r\n\t\t\t\tid: \"orchestral_harp\",\r\n\t\t\t\tinstrument: \"Orchestral Harp\",\r\n\t\t\t\tnumber: 46,\r\n\t\t\t\tcategory: \"Strings\"\r\n\t\t\t},\r\n\t\t\t47: {\r\n\t\t\t\tid: \"timpani\",\r\n\t\t\t\tinstrument: \"Timpani\",\r\n\t\t\t\tnumber: 47,\r\n\t\t\t\tcategory: \"Strings\"\r\n\t\t\t},\r\n\t\t\t48: {\r\n\t\t\t\tid: \"string_ensemble_1\",\r\n\t\t\t\tinstrument: \"String Ensemble 1\",\r\n\t\t\t\tnumber: 48,\r\n\t\t\t\tcategory: \"Ensemble\"\r\n\t\t\t},\r\n\t\t\t49: {\r\n\t\t\t\tid: \"string_ensemble_2\",\r\n\t\t\t\tinstrument: \"String Ensemble 2\",\r\n\t\t\t\tnumber: 49,\r\n\t\t\t\tcategory: \"Ensemble\"\r\n\t\t\t},\r\n\t\t\t50: {\r\n\t\t\t\tid: \"synth_strings_1\",\r\n\t\t\t\tinstrument: \"Synth Strings 1\",\r\n\t\t\t\tnumber: 50,\r\n\t\t\t\tcategory: \"Ensemble\"\r\n\t\t\t},\r\n\t\t\t51: {\r\n\t\t\t\tid: \"synth_strings_2\",\r\n\t\t\t\tinstrument: \"Synth Strings 2\",\r\n\t\t\t\tnumber: 51,\r\n\t\t\t\tcategory: \"Ensemble\"\r\n\t\t\t},\r\n\t\t\t52: {\r\n\t\t\t\tid: \"choir_aahs\",\r\n\t\t\t\tinstrument: \"Choir Aahs\",\r\n\t\t\t\tnumber: 52,\r\n\t\t\t\tcategory: \"Ensemble\"\r\n\t\t\t},\r\n\t\t\t53: {\r\n\t\t\t\tid: \"voice_oohs\",\r\n\t\t\t\tinstrument: \"Voice Oohs\",\r\n\t\t\t\tnumber: 53,\r\n\t\t\t\tcategory: \"Ensemble\"\r\n\t\t\t},\r\n\t\t\t54: {\r\n\t\t\t\tid: \"synth_choir\",\r\n\t\t\t\tinstrument: \"Synth Choir\",\r\n\t\t\t\tnumber: 54,\r\n\t\t\t\tcategory: \"Ensemble\"\r\n\t\t\t},\r\n\t\t\t55: {\r\n\t\t\t\tid: \"orchestra_hit\",\r\n\t\t\t\tinstrument: \"Orchestra Hit\",\r\n\t\t\t\tnumber: 55,\r\n\t\t\t\tcategory: \"Ensemble\"\r\n\t\t\t},\r\n\t\t\t56: {\r\n\t\t\t\tid: \"trumpet\",\r\n\t\t\t\tinstrument: \"Trumpet\",\r\n\t\t\t\tnumber: 56,\r\n\t\t\t\tcategory: \"Brass\"\r\n\t\t\t},\r\n\t\t\t57: {\r\n\t\t\t\tid: \"trombone\",\r\n\t\t\t\tinstrument: \"Trombone\",\r\n\t\t\t\tnumber: 57,\r\n\t\t\t\tcategory: \"Brass\"\r\n\t\t\t},\r\n\t\t\t58: {\r\n\t\t\t\tid: \"tuba\",\r\n\t\t\t\tinstrument: \"Tuba\",\r\n\t\t\t\tnumber: 58,\r\n\t\t\t\tcategory: \"Brass\"\r\n\t\t\t},\r\n\t\t\t59: {\r\n\t\t\t\tid: \"muted_trumpet\",\r\n\t\t\t\tinstrument: \"Muted Trumpet\",\r\n\t\t\t\tnumber: 59,\r\n\t\t\t\tcategory: \"Brass\"\r\n\t\t\t},\r\n\t\t\t60: {\r\n\t\t\t\tid: \"french_horn\",\r\n\t\t\t\tinstrument: \"French Horn\",\r\n\t\t\t\tnumber: 60,\r\n\t\t\t\tcategory: \"Brass\"\r\n\t\t\t},\r\n\t\t\t61: {\r\n\t\t\t\tid: \"brass_section\",\r\n\t\t\t\tinstrument: \"Brass Section\",\r\n\t\t\t\tnumber: 61,\r\n\t\t\t\tcategory: \"Brass\"\r\n\t\t\t},\r\n\t\t\t62: {\r\n\t\t\t\tid: \"synth_brass_1\",\r\n\t\t\t\tinstrument: \"Synth Brass 1\",\r\n\t\t\t\tnumber: 62,\r\n\t\t\t\tcategory: \"Brass\"\r\n\t\t\t},\r\n\t\t\t63: {\r\n\t\t\t\tid: \"synth_brass_2\",\r\n\t\t\t\tinstrument: \"Synth Brass 2\",\r\n\t\t\t\tnumber: 63,\r\n\t\t\t\tcategory: \"Brass\"\r\n\t\t\t},\r\n\t\t\t64: {\r\n\t\t\t\tid: \"soprano_sax\",\r\n\t\t\t\tinstrument: \"Soprano Sax\",\r\n\t\t\t\tnumber: 64,\r\n\t\t\t\tcategory: \"Reed\"\r\n\t\t\t},\r\n\t\t\t65: {\r\n\t\t\t\tid: \"alto_sax\",\r\n\t\t\t\tinstrument: \"Alto Sax\",\r\n\t\t\t\tnumber: 65,\r\n\t\t\t\tcategory: \"Reed\"\r\n\t\t\t},\r\n\t\t\t66: {\r\n\t\t\t\tid: \"tenor_sax\",\r\n\t\t\t\tinstrument: \"Tenor Sax\",\r\n\t\t\t\tnumber: 66,\r\n\t\t\t\tcategory: \"Reed\"\r\n\t\t\t},\r\n\t\t\t67: {\r\n\t\t\t\tid: \"baritone_sax\",\r\n\t\t\t\tinstrument: \"Baritone Sax\",\r\n\t\t\t\tnumber: 67,\r\n\t\t\t\tcategory: \"Reed\"\r\n\t\t\t},\r\n\t\t\t68: {\r\n\t\t\t\tid: \"oboe\",\r\n\t\t\t\tinstrument: \"Oboe\",\r\n\t\t\t\tnumber: 68,\r\n\t\t\t\tcategory: \"Reed\"\r\n\t\t\t},\r\n\t\t\t69: {\r\n\t\t\t\tid: \"english_horn\",\r\n\t\t\t\tinstrument: \"English Horn\",\r\n\t\t\t\tnumber: 69,\r\n\t\t\t\tcategory: \"Reed\"\r\n\t\t\t},\r\n\t\t\t70: {\r\n\t\t\t\tid: \"bassoon\",\r\n\t\t\t\tinstrument: \"Bassoon\",\r\n\t\t\t\tnumber: 70,\r\n\t\t\t\tcategory: \"Reed\"\r\n\t\t\t},\r\n\t\t\t71: {\r\n\t\t\t\tid: \"clarinet\",\r\n\t\t\t\tinstrument: \"Clarinet\",\r\n\t\t\t\tnumber: 71,\r\n\t\t\t\tcategory: \"Reed\"\r\n\t\t\t},\r\n\t\t\t72: {\r\n\t\t\t\tid: \"piccolo\",\r\n\t\t\t\tinstrument: \"Piccolo\",\r\n\t\t\t\tnumber: 72,\r\n\t\t\t\tcategory: \"Pipe\"\r\n\t\t\t},\r\n\t\t\t73: {\r\n\t\t\t\tid: \"flute\",\r\n\t\t\t\tinstrument: \"Flute\",\r\n\t\t\t\tnumber: 73,\r\n\t\t\t\tcategory: \"Pipe\"\r\n\t\t\t},\r\n\t\t\t74: {\r\n\t\t\t\tid: \"recorder\",\r\n\t\t\t\tinstrument: \"Recorder\",\r\n\t\t\t\tnumber: 74,\r\n\t\t\t\tcategory: \"Pipe\"\r\n\t\t\t},\r\n\t\t\t75: {\r\n\t\t\t\tid: \"pan_flute\",\r\n\t\t\t\tinstrument: \"Pan Flute\",\r\n\t\t\t\tnumber: 75,\r\n\t\t\t\tcategory: \"Pipe\"\r\n\t\t\t},\r\n\t\t\t76: {\r\n\t\t\t\tid: \"blown_bottle\",\r\n\t\t\t\tinstrument: \"Blown Bottle\",\r\n\t\t\t\tnumber: 76,\r\n\t\t\t\tcategory: \"Pipe\"\r\n\t\t\t},\r\n\t\t\t77: {\r\n\t\t\t\tid: \"shakuhachi\",\r\n\t\t\t\tinstrument: \"Shakuhachi\",\r\n\t\t\t\tnumber: 77,\r\n\t\t\t\tcategory: \"Pipe\"\r\n\t\t\t},\r\n\t\t\t78: {\r\n\t\t\t\tid: \"whistle\",\r\n\t\t\t\tinstrument: \"Whistle\",\r\n\t\t\t\tnumber: 78,\r\n\t\t\t\tcategory: \"Pipe\"\r\n\t\t\t},\r\n\t\t\t79: {\r\n\t\t\t\tid: \"ocarina\",\r\n\t\t\t\tinstrument: \"Ocarina\",\r\n\t\t\t\tnumber: 79,\r\n\t\t\t\tcategory: \"Pipe\"\r\n\t\t\t},\r\n\t\t\t80: {\r\n\t\t\t\tid: \"lead_1_square\",\r\n\t\t\t\tinstrument: \"Lead 1 (square)\",\r\n\t\t\t\tnumber: 80,\r\n\t\t\t\tcategory: \"Synth Lead\"\r\n\t\t\t},\r\n\t\t\t81: {\r\n\t\t\t\tid: \"lead_2_sawtooth\",\r\n\t\t\t\tinstrument: \"Lead 2 (sawtooth)\",\r\n\t\t\t\tnumber: 81,\r\n\t\t\t\tcategory: \"Synth Lead\"\r\n\t\t\t},\r\n\t\t\t82: {\r\n\t\t\t\tid: \"lead_3_calliope\",\r\n\t\t\t\tinstrument: \"Lead 3 (calliope)\",\r\n\t\t\t\tnumber: 82,\r\n\t\t\t\tcategory: \"Synth Lead\"\r\n\t\t\t},\r\n\t\t\t83: {\r\n\t\t\t\tid: \"lead_4_chiff\",\r\n\t\t\t\tinstrument: \"Lead 4 (chiff)\",\r\n\t\t\t\tnumber: 83,\r\n\t\t\t\tcategory: \"Synth Lead\"\r\n\t\t\t},\r\n\t\t\t84: {\r\n\t\t\t\tid: \"lead_5_charang\",\r\n\t\t\t\tinstrument: \"Lead 5 (charang)\",\r\n\t\t\t\tnumber: 84,\r\n\t\t\t\tcategory: \"Synth Lead\"\r\n\t\t\t},\r\n\t\t\t85: {\r\n\t\t\t\tid: \"lead_6_voice\",\r\n\t\t\t\tinstrument: \"Lead 6 (voice)\",\r\n\t\t\t\tnumber: 85,\r\n\t\t\t\tcategory: \"Synth Lead\"\r\n\t\t\t},\r\n\t\t\t86: {\r\n\t\t\t\tid: \"lead_7_fifths\",\r\n\t\t\t\tinstrument: \"Lead 7 (fifths)\",\r\n\t\t\t\tnumber: 86,\r\n\t\t\t\tcategory: \"Synth Lead\"\r\n\t\t\t},\r\n\t\t\t87: {\r\n\t\t\t\tid: \"lead_8_bass__lead\",\r\n\t\t\t\tinstrument: \"Lead 8 (bass + lead)\",\r\n\t\t\t\tnumber: 87,\r\n\t\t\t\tcategory: \"Synth Lead\"\r\n\t\t\t},\r\n\t\t\t88: {\r\n\t\t\t\tid: \"pad_1_new_age\",\r\n\t\t\t\tinstrument: \"Pad 1 (new age)\",\r\n\t\t\t\tnumber: 88,\r\n\t\t\t\tcategory: \"Synth Pad\"\r\n\t\t\t},\r\n\t\t\t89: {\r\n\t\t\t\tid: \"pad_2_warm\",\r\n\t\t\t\tinstrument: \"Pad 2 (warm)\",\r\n\t\t\t\tnumber: 89,\r\n\t\t\t\tcategory: \"Synth Pad\"\r\n\t\t\t},\r\n\t\t\t90: {\r\n\t\t\t\tid: \"pad_3_polysynth\",\r\n\t\t\t\tinstrument: \"Pad 3 (polysynth)\",\r\n\t\t\t\tnumber: 90,\r\n\t\t\t\tcategory: \"Synth Pad\"\r\n\t\t\t},\r\n\t\t\t91: {\r\n\t\t\t\tid: \"pad_4_choir\",\r\n\t\t\t\tinstrument: \"Pad 4 (choir)\",\r\n\t\t\t\tnumber: 91,\r\n\t\t\t\tcategory: \"Synth Pad\"\r\n\t\t\t},\r\n\t\t\t92: {\r\n\t\t\t\tid: \"pad_5_bowed\",\r\n\t\t\t\tinstrument: \"Pad 5 (bowed)\",\r\n\t\t\t\tnumber: 92,\r\n\t\t\t\tcategory: \"Synth Pad\"\r\n\t\t\t},\r\n\t\t\t93: {\r\n\t\t\t\tid: \"pad_6_metallic\",\r\n\t\t\t\tinstrument: \"Pad 6 (metallic)\",\r\n\t\t\t\tnumber: 93,\r\n\t\t\t\tcategory: \"Synth Pad\"\r\n\t\t\t},\r\n\t\t\t94: {\r\n\t\t\t\tid: \"pad_7_halo\",\r\n\t\t\t\tinstrument: \"Pad 7 (halo)\",\r\n\t\t\t\tnumber: 94,\r\n\t\t\t\tcategory: \"Synth Pad\"\r\n\t\t\t},\r\n\t\t\t95: {\r\n\t\t\t\tid: \"pad_8_sweep\",\r\n\t\t\t\tinstrument: \"Pad 8 (sweep)\",\r\n\t\t\t\tnumber: 95,\r\n\t\t\t\tcategory: \"Synth Pad\"\r\n\t\t\t},\r\n\t\t\t96: {\r\n\t\t\t\tid: \"fx_1_rain\",\r\n\t\t\t\tinstrument: \"FX 1 (rain)\",\r\n\t\t\t\tnumber: 96,\r\n\t\t\t\tcategory: \"Synth Effects\"\r\n\t\t\t},\r\n\t\t\t97: {\r\n\t\t\t\tid: \"fx_2_soundtrack\",\r\n\t\t\t\tinstrument: \"FX 2 (soundtrack)\",\r\n\t\t\t\tnumber: 97,\r\n\t\t\t\tcategory: \"Synth Effects\"\r\n\t\t\t},\r\n\t\t\t98: {\r\n\t\t\t\tid: \"fx_3_crystal\",\r\n\t\t\t\tinstrument: \"FX 3 (crystal)\",\r\n\t\t\t\tnumber: 98,\r\n\t\t\t\tcategory: \"Synth Effects\"\r\n\t\t\t},\r\n\t\t\t99: {\r\n\t\t\t\tid: \"fx_4_atmosphere\",\r\n\t\t\t\tinstrument: \"FX 4 (atmosphere)\",\r\n\t\t\t\tnumber: 99,\r\n\t\t\t\tcategory: \"Synth Effects\"\r\n\t\t\t},\r\n\t\t\t100: {\r\n\t\t\t\tid: \"fx_5_brightness\",\r\n\t\t\t\tinstrument: \"FX 5 (brightness)\",\r\n\t\t\t\tnumber: 100,\r\n\t\t\t\tcategory: \"Synth Effects\"\r\n\t\t\t},\r\n\t\t\t101: {\r\n\t\t\t\tid: \"fx_6_goblins\",\r\n\t\t\t\tinstrument: \"FX 6 (goblins)\",\r\n\t\t\t\tnumber: 101,\r\n\t\t\t\tcategory: \"Synth Effects\"\r\n\t\t\t},\r\n\t\t\t102: {\r\n\t\t\t\tid: \"fx_7_echoes\",\r\n\t\t\t\tinstrument: \"FX 7 (echoes)\",\r\n\t\t\t\tnumber: 102,\r\n\t\t\t\tcategory: \"Synth Effects\"\r\n\t\t\t},\r\n\t\t\t103: {\r\n\t\t\t\tid: \"fx_8_scifi\",\r\n\t\t\t\tinstrument: \"FX 8 (sci-fi)\",\r\n\t\t\t\tnumber: 103,\r\n\t\t\t\tcategory: \"Synth Effects\"\r\n\t\t\t},\r\n\t\t\t104: {\r\n\t\t\t\tid: \"sitar\",\r\n\t\t\t\tinstrument: \"Sitar\",\r\n\t\t\t\tnumber: 104,\r\n\t\t\t\tcategory: \"Ethnic\"\r\n\t\t\t},\r\n\t\t\t105: {\r\n\t\t\t\tid: \"banjo\",\r\n\t\t\t\tinstrument: \"Banjo\",\r\n\t\t\t\tnumber: 105,\r\n\t\t\t\tcategory: \"Ethnic\"\r\n\t\t\t},\r\n\t\t\t106: {\r\n\t\t\t\tid: \"shamisen\",\r\n\t\t\t\tinstrument: \"Shamisen\",\r\n\t\t\t\tnumber: 106,\r\n\t\t\t\tcategory: \"Ethnic\"\r\n\t\t\t},\r\n\t\t\t107: {\r\n\t\t\t\tid: \"koto\",\r\n\t\t\t\tinstrument: \"Koto\",\r\n\t\t\t\tnumber: 107,\r\n\t\t\t\tcategory: \"Ethnic\"\r\n\t\t\t},\r\n\t\t\t108: {\r\n\t\t\t\tid: \"kalimba\",\r\n\t\t\t\tinstrument: \"Kalimba\",\r\n\t\t\t\tnumber: 108,\r\n\t\t\t\tcategory: \"Ethnic\"\r\n\t\t\t},\r\n\t\t\t109: {\r\n\t\t\t\tid: \"bagpipe\",\r\n\t\t\t\tinstrument: \"Bagpipe\",\r\n\t\t\t\tnumber: 109,\r\n\t\t\t\tcategory: \"Ethnic\"\r\n\t\t\t},\r\n\t\t\t110: {\r\n\t\t\t\tid: \"fiddle\",\r\n\t\t\t\tinstrument: \"Fiddle\",\r\n\t\t\t\tnumber: 110,\r\n\t\t\t\tcategory: \"Ethnic\"\r\n\t\t\t},\r\n\t\t\t111: {\r\n\t\t\t\tid: \"shanai\",\r\n\t\t\t\tinstrument: \"Shanai\",\r\n\t\t\t\tnumber: 111,\r\n\t\t\t\tcategory: \"Ethnic\"\r\n\t\t\t},\r\n\t\t\t112: {\r\n\t\t\t\tid: \"tinkle_bell\",\r\n\t\t\t\tinstrument: \"Tinkle Bell\",\r\n\t\t\t\tnumber: 112,\r\n\t\t\t\tcategory: \"Percussive\"\r\n\t\t\t},\r\n\t\t\t113: {\r\n\t\t\t\tid: \"agogo\",\r\n\t\t\t\tinstrument: \"Agogo\",\r\n\t\t\t\tnumber: 113,\r\n\t\t\t\tcategory: \"Percussive\"\r\n\t\t\t},\r\n\t\t\t114: {\r\n\t\t\t\tid: \"steel_drums\",\r\n\t\t\t\tinstrument: \"Steel Drums\",\r\n\t\t\t\tnumber: 114,\r\n\t\t\t\tcategory: \"Percussive\"\r\n\t\t\t},\r\n\t\t\t115: {\r\n\t\t\t\tid: \"woodblock\",\r\n\t\t\t\tinstrument: \"Woodblock\",\r\n\t\t\t\tnumber: 115,\r\n\t\t\t\tcategory: \"Percussive\"\r\n\t\t\t},\r\n\t\t\t116: {\r\n\t\t\t\tid: \"taiko_drum\",\r\n\t\t\t\tinstrument: \"Taiko Drum\",\r\n\t\t\t\tnumber: 116,\r\n\t\t\t\tcategory: \"Percussive\"\r\n\t\t\t},\r\n\t\t\t117: {\r\n\t\t\t\tid: \"melodic_tom\",\r\n\t\t\t\tinstrument: \"Melodic Tom\",\r\n\t\t\t\tnumber: 117,\r\n\t\t\t\tcategory: \"Percussive\"\r\n\t\t\t},\r\n\t\t\t118: {\r\n\t\t\t\tid: \"synth_drum\",\r\n\t\t\t\tinstrument: \"Synth Drum\",\r\n\t\t\t\tnumber: 118,\r\n\t\t\t\tcategory: \"Percussive\"\r\n\t\t\t},\r\n\t\t\t119: {\r\n\t\t\t\tid: \"reverse_cymbal\",\r\n\t\t\t\tinstrument: \"Reverse Cymbal\",\r\n\t\t\t\tnumber: 119,\r\n\t\t\t\tcategory: \"Sound effects\"\r\n\t\t\t},\r\n\t\t\t120: {\r\n\t\t\t\tid: \"guitar_fret_noise\",\r\n\t\t\t\tinstrument: \"Guitar Fret Noise\",\r\n\t\t\t\tnumber: 120,\r\n\t\t\t\tcategory: \"Sound effects\"\r\n\t\t\t},\r\n\t\t\t121: {\r\n\t\t\t\tid: \"breath_noise\",\r\n\t\t\t\tinstrument: \"Breath Noise\",\r\n\t\t\t\tnumber: 121,\r\n\t\t\t\tcategory: \"Sound effects\"\r\n\t\t\t},\r\n\t\t\t122: {\r\n\t\t\t\tid: \"seashore\",\r\n\t\t\t\tinstrument: \"Seashore\",\r\n\t\t\t\tnumber: 122,\r\n\t\t\t\tcategory: \"Sound effects\"\r\n\t\t\t},\r\n\t\t\t123: {\r\n\t\t\t\tid: \"bird_tweet\",\r\n\t\t\t\tinstrument: \"Bird Tweet\",\r\n\t\t\t\tnumber: 123,\r\n\t\t\t\tcategory: \"Sound effects\"\r\n\t\t\t},\r\n\t\t\t124: {\r\n\t\t\t\tid: \"telephone_ring\",\r\n\t\t\t\tinstrument: \"Telephone Ring\",\r\n\t\t\t\tnumber: 124,\r\n\t\t\t\tcategory: \"Sound effects\"\r\n\t\t\t},\r\n\t\t\t125: {\r\n\t\t\t\tid: \"helicopter\",\r\n\t\t\t\tinstrument: \"Helicopter\",\r\n\t\t\t\tnumber: 125,\r\n\t\t\t\tcategory: \"Sound effects\"\r\n\t\t\t},\r\n\t\t\t126: {\r\n\t\t\t\tid: \"applause\",\r\n\t\t\t\tinstrument: \"Applause\",\r\n\t\t\t\tnumber: 126,\r\n\t\t\t\tcategory: \"Sound effects\"\r\n\t\t\t},\r\n\t\t\t127: {\r\n\t\t\t\tid: \"gunshot\",\r\n\t\t\t\tinstrument: \"Gunshot\",\r\n\t\t\t\tnumber: 127,\r\n\t\t\t\tcategory: \"Sound effects\"\r\n\t\t\t},\r\n\t\t\t\"-1\": {\r\n\t\t\t\tid: \"percussion\",\r\n\t\t\t\tinstrument: \"Percussion\",\r\n\t\t\t\tnumber: -1,\r\n\t\t\t\tcategory: \"Percussion\"\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tKEY_TO_NOTE: {\r\n\t\tA0: 21,\r\n\t\tBb0: 22,\r\n\t\tB0: 23,\r\n\t\tC1: 24,\r\n\t\tDb1: 25,\r\n\t\tD1: 26,\r\n\t\tEb1: 27,\r\n\t\tE1: 28,\r\n\t\tF1: 29,\r\n\t\tGb1: 30,\r\n\t\tG1: 31,\r\n\t\tAb1: 32,\r\n\t\tA1: 33,\r\n\t\tBb1: 34,\r\n\t\tB1: 35,\r\n\t\tC2: 36,\r\n\t\tDb2: 37,\r\n\t\tD2: 38,\r\n\t\tEb2: 39,\r\n\t\tE2: 40,\r\n\t\tF2: 41,\r\n\t\tGb2: 42,\r\n\t\tG2: 43,\r\n\t\tAb2: 44,\r\n\t\tA2: 45,\r\n\t\tBb2: 46,\r\n\t\tB2: 47,\r\n\t\tC3: 48,\r\n\t\tDb3: 49,\r\n\t\tD3: 50,\r\n\t\tEb3: 51,\r\n\t\tE3: 52,\r\n\t\tF3: 53,\r\n\t\tGb3: 54,\r\n\t\tG3: 55,\r\n\t\tAb3: 56,\r\n\t\tA3: 57,\r\n\t\tBb3: 58,\r\n\t\tB3: 59,\r\n\t\tC4: 60,\r\n\t\tDb4: 61,\r\n\t\tD4: 62,\r\n\t\tEb4: 63,\r\n\t\tE4: 64,\r\n\t\tF4: 65,\r\n\t\tGb4: 66,\r\n\t\tG4: 67,\r\n\t\tAb4: 68,\r\n\t\tA4: 69,\r\n\t\tBb4: 70,\r\n\t\tB4: 71,\r\n\t\tC5: 72,\r\n\t\tDb5: 73,\r\n\t\tD5: 74,\r\n\t\tEb5: 75,\r\n\t\tE5: 76,\r\n\t\tF5: 77,\r\n\t\tGb5: 78,\r\n\t\tG5: 79,\r\n\t\tAb5: 80,\r\n\t\tA5: 81,\r\n\t\tBb5: 82,\r\n\t\tB5: 83,\r\n\t\tC6: 84,\r\n\t\tDb6: 85,\r\n\t\tD6: 86,\r\n\t\tEb6: 87,\r\n\t\tE6: 88,\r\n\t\tF6: 89,\r\n\t\tGb6: 90,\r\n\t\tG6: 91,\r\n\t\tAb6: 92,\r\n\t\tA6: 93,\r\n\t\tBb6: 94,\r\n\t\tB6: 95,\r\n\t\tC7: 96,\r\n\t\tDb7: 97,\r\n\t\tD7: 98,\r\n\t\tEb7: 99,\r\n\t\tE7: 100,\r\n\t\tF7: 101,\r\n\t\tGb7: 102,\r\n\t\tG7: 103,\r\n\t\tAb7: 104,\r\n\t\tA7: 105,\r\n\t\tBb7: 106,\r\n\t\tB7: 107,\r\n\t\tC8: 108\r\n\t},\r\n\tMIDI_NOTE_TO_KEY: {\r\n\t\t21: \"A0\",\r\n\t\t22: \"Bb0\",\r\n\t\t23: \"B0\",\r\n\t\t24: \"C1\",\r\n\t\t25: \"Db1\",\r\n\t\t26: \"D1\",\r\n\t\t27: \"Eb1\",\r\n\t\t28: \"E1\",\r\n\t\t29: \"F1\",\r\n\t\t30: \"Gb1\",\r\n\t\t31: \"G1\",\r\n\t\t32: \"Ab1\",\r\n\t\t33: \"A1\",\r\n\t\t34: \"Bb1\",\r\n\t\t35: \"B1\",\r\n\t\t36: \"C2\",\r\n\t\t37: \"Db2\",\r\n\t\t38: \"D2\",\r\n\t\t39: \"Eb2\",\r\n\t\t40: \"E2\",\r\n\t\t41: \"F2\",\r\n\t\t42: \"Gb2\",\r\n\t\t43: \"G2\",\r\n\t\t44: \"Ab2\",\r\n\t\t45: \"A2\",\r\n\t\t46: \"Bb2\",\r\n\t\t47: \"B2\",\r\n\t\t48: \"C3\",\r\n\t\t49: \"Db3\",\r\n\t\t50: \"D3\",\r\n\t\t51: \"Eb3\",\r\n\t\t52: \"E3\",\r\n\t\t53: \"F3\",\r\n\t\t54: \"Gb3\",\r\n\t\t55: \"G3\",\r\n\t\t56: \"Ab3\",\r\n\t\t57: \"A3\",\r\n\t\t58: \"Bb3\",\r\n\t\t59: \"B3\",\r\n\t\t60: \"C4\",\r\n\t\t61: \"Db4\",\r\n\t\t62: \"D4\",\r\n\t\t63: \"Eb4\",\r\n\t\t64: \"E4\",\r\n\t\t65: \"F4\",\r\n\t\t66: \"Gb4\",\r\n\t\t67: \"G4\",\r\n\t\t68: \"Ab4\",\r\n\t\t69: \"A4\",\r\n\t\t70: \"Bb4\",\r\n\t\t71: \"B4\",\r\n\t\t72: \"C5\",\r\n\t\t73: \"Db5\",\r\n\t\t74: \"D5\",\r\n\t\t75: \"Eb5\",\r\n\t\t76: \"E5\",\r\n\t\t77: \"F5\",\r\n\t\t78: \"Gb5\",\r\n\t\t79: \"G5\",\r\n\t\t80: \"Ab5\",\r\n\t\t81: \"A5\",\r\n\t\t82: \"Bb5\",\r\n\t\t83: \"B5\",\r\n\t\t84: \"C6\",\r\n\t\t85: \"Db6\",\r\n\t\t86: \"D6\",\r\n\t\t87: \"Eb6\",\r\n\t\t88: \"E6\",\r\n\t\t89: \"F6\",\r\n\t\t90: \"Gb6\",\r\n\t\t91: \"G6\",\r\n\t\t92: \"Ab6\",\r\n\t\t93: \"A6\",\r\n\t\t94: \"Bb6\",\r\n\t\t95: \"B6\",\r\n\t\t96: \"C7\",\r\n\t\t97: \"Db7\",\r\n\t\t98: \"D7\",\r\n\t\t99: \"Eb7\",\r\n\t\t100: \"E7\",\r\n\t\t101: \"F7\",\r\n\t\t102: \"Gb7\",\r\n\t\t103: \"G7\",\r\n\t\t104: \"Ab7\",\r\n\t\t105: \"A7\",\r\n\t\t106: \"Bb7\",\r\n\t\t107: \"B7\",\r\n\t\t108: \"C8\"\r\n\t}\r\n}\r\n","import { getLoader } from \"../ui/Loader.js\"\r\nimport localforage from \"localforage\"\r\n\r\nexport class FileLoader {\r\n\tstatic async loadSongFromURL(url, callback) {\r\n\t\tgetLoader().setLoadMessage(`Loading Song from ${url}`)\r\n\t\tconst response = fetch(url, {\r\n\t\t\tmethod: \"GET\"\r\n\t\t}).then(response => {\r\n\t\t\tconst filename = url\r\n\t\t\tresponse.blob().then(blob => {\r\n\t\t\t\tconst reader = new FileReader()\r\n\t\t\t\treader.onload = function (theFile) {\r\n\t\t\t\t\tcallback(reader.result, filename, () => { })\r\n\t\t\t\t}\r\n\t\t\t\treader.readAsDataURL(blob)\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\tstatic async loadSongFromLocalStorage(key, callback) {\r\n\t\tgetLoader().setLoadMessage(`Loading Song from LocalStorage with key ${key}`);\r\n\t\tconst midiDataUri = await localforage.getItem(key);\r\n\r\n\t\t// Check if the data was retrieved successfully\r\n\t\tif (midiDataUri) {\r\n\t\t\t// Pass the data to the callback function\r\n\t\t\tcallback(midiDataUri, key, () => { });\r\n\t\t} else {\r\n\t\t\tconsole.error('Error loading MIDI data:', err);\r\n\t\t}\r\n\t}\r\n}\r\n","import { MidiLoader } from \"../MidiLoader.js\"\r\nimport { Song } from \"../Song.js\"\r\nimport { AudioPlayer } from \"../audio/AudioPlayer.js\"\r\nimport { getLoader } from \"../ui/Loader.js\"\r\nimport { getSetting } from \"../settings/Settings.js\"\r\nimport { getMidiHandler } from \"../MidiInputHandler.js\"\r\nimport { getCurrentMicNote } from \"../MicInputHandler.js\"\r\nimport {\r\n\tgetTrackVolume,\r\n\tisAnyTrackPlayalong,\r\n\tisTrackRequiredToPlay,\r\n\tsetupTracks\r\n} from \"./Tracks.js\"\r\nimport { Notification } from \"../ui/Notification.js\"\r\nimport localforage from 'localforage';\r\n\r\n\r\nconst LOOK_AHEAD_TIME = 0.2\r\nconst LOOK_AHEAD_TIME_WHEN_PLAYALONG = 0.02\r\n\r\nclass Player {\r\n\tconstructor() {\r\n\t\tthis.audioPlayer = new AudioPlayer()\r\n\r\n\t\tgetMidiHandler().setNoteOnCallback(this.addInputNoteOn.bind(this))\r\n\t\tgetMidiHandler().setNoteOffCallback(this.addInputNoteOff.bind(this))\r\n\r\n\t\tthis.songFilename = \"\"\r\n\r\n\t\tthis.startDelay = -2.5\r\n\t\tthis.lastTime = this.audioPlayer.getContextTime()\r\n\t\tthis.progress = 0\r\n\t\tthis.paused = true\r\n\t\tthis.playing = false\r\n\t\tthis.scrolling = 0\r\n\t\tthis.loadedSongs = new Set()\r\n\t\tthis.muted = false\r\n\t\tthis.volume = 100\r\n\t\tthis.mutedAtVolume = 100\r\n\t\tthis.soundfontName = getSetting(\"soundfontName\")\r\n\t\tthis.inputInstrument = \"acoustic_grand_piano\"\r\n\t\tthis.lastMicNote = -1\r\n\r\n\t\tthis.newSongCallbacks = []\r\n\t\tthis.inputActiveNotes = {}\r\n\t\tthis.inputPlayedNotes = []\r\n\r\n\t\tthis.playbackSpeed = 1\r\n\r\n\t\tconsole.log(\"Player created.\")\r\n\t\tthis.playTick()\r\n\t}\r\n\tgetState() {\r\n\t\tlet time = this.getTime()\r\n\t\treturn {\r\n\t\t\ttime: time,\r\n\t\t\tctxTime: this.audioPlayer.getContextTime(),\r\n\t\t\tend: this.song ? this.song.getEnd() : 0,\r\n\t\t\tloading: this.audioPlayer.loading,\r\n\t\t\tsong: this.song,\r\n\t\t\tinputActiveNotes: this.inputActiveNotes,\r\n\t\t\tinputPlayedNotes: this.inputPlayedNotes,\r\n\t\t\tbpm: this.getBPM(time)\r\n\t\t}\r\n\t}\r\n\taddNewSongCallback(callback) {\r\n\t\tthis.newSongCallbacks.push(callback)\r\n\t}\r\n\tswitchSoundfont(soundfontName) {\r\n\t\tthis.wasPaused = this.paused\r\n\t\tthis.pause()\r\n\t\tgetLoader().startLoad()\r\n\t\tlet nowTime = window.performance.now()\r\n\t\tthis.soundfontName = soundfontName\r\n\t\tthis.audioPlayer.switchSoundfont(soundfontName, this.song).then(resolve => {\r\n\t\t\twindow.setTimeout(() => {\r\n\t\t\t\tif (!this.wasPaused) {\r\n\t\t\t\t\tthis.resume()\r\n\t\t\t\t}\r\n\t\t\t\tgetLoader().stopLoad()\r\n\t\t\t}, Math.max(0, 500 - (window.performance.now() - nowTime)))\r\n\t\t})\r\n\t}\r\n\r\n\tgetTimeWithScrollOffset(scrollOffset) {\r\n\t\treturn this.progress + this.startDelay - scrollOffset\r\n\t}\r\n\tgetTime() {\r\n\t\treturn this.progress + this.startDelay - this.scrollOffset\r\n\t}\r\n\tgetTimeWithoutScrollOffset() {\r\n\t\treturn this.progress + this.startDelay\r\n\t}\r\n\tsetTime(seconds) {\r\n\t\tthis.audioPlayer.stopAllSources()\r\n\t\tthis.progress += seconds - this.getTime()\r\n\t\tthis.resetNoteSequence()\r\n\t}\r\n\tincreaseSpeed(val) {\r\n\t\tthis.playbackSpeed = Math.max(\r\n\t\t\t0,\r\n\t\t\tMath.round((this.playbackSpeed + val) * 100) / 100\r\n\t\t)\r\n\t}\r\n\tgetChannel(track) {\r\n\t\tif (this.song.activeTracks[track].notes.length) {\r\n\t\t\treturn this.channels[this.song.activeTracks[track].notes[0].channel]\r\n\t\t}\r\n\t}\r\n\tgetCurrentTrackInstrument(trackIndex) {\r\n\t\tlet i = 0\r\n\t\tlet noteSeq = this.song.getNoteSequence()\r\n\t\tlet nextNote = noteSeq[i]\r\n\t\twhile (nextNote.track != trackIndex && i < noteSeq.length - 1) {\r\n\t\t\ti++\r\n\t\t\tnextNote = noteSeq[i]\r\n\t\t}\r\n\t\tif (nextNote.track == trackIndex) {\r\n\t\t\treturn nextNote.instrument\r\n\t\t}\r\n\t}\r\n\r\n\tasync loadSong(theSong, fileName, name) {\r\n\t\tthis.audioPlayer.stopAllSources();\r\n\t\tgetLoader().startLoad();\r\n\t\tgetLoader().setLoadMessage(\"Loading \" + fileName + \".\");\r\n\t\tif (this.audioPlayer.isRunning()) {\r\n\t\t\tthis.audioPlayer.suspend();\r\n\t\t}\r\n\r\n\t\tthis.loading = true;\r\n\r\n\t\tgetLoader().setLoadMessage(\"Parsing Midi File.\");\r\n\t\ttry {\r\n\t\t\tlet midiFile = await MidiLoader.loadFile(theSong);\r\n\t\t\tthis.setSong(new Song(midiFile, fileName, name));\r\n\t\t\tgetLoader().setLoadMessage(\"Loading Instruments\");\r\n\r\n\t\t\tthis.songFilename = fileName;\r\n\t\t\tawait this.audioPlayer.loadInstrumentsForSong(this.song);\r\n\r\n\t\t\tgetLoader().setLoadMessage(\"Creating Buffers\");\r\n\t\t\treturn this.audioPlayer.loadBuffers().then(v => getLoader().stopLoad());\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error)\r\n\t\t\tNotification.create(\"Couldn't read Midi-File - \" + error, 2000);\r\n\t\t\tgetLoader().stopLoad();\r\n\t\t}\r\n\t}\r\n\r\n\tasync loadFromRecording(fileName) {\r\n\t\tlet name = fileName;\r\n\t\tthis.audioPlayer.stopAllSources();\r\n\t\tgetLoader().startLoad();\r\n\t\tgetLoader().setLoadMessage(\"Loading \" + fileName + \".\");\r\n\r\n\t\tif (this.audioPlayer.isRunning()) {\r\n\t\t\tthis.audioPlayer.suspend();\r\n\t\t}\r\n\r\n\t\tthis.loading = true;\r\n\r\n\t\tgetLoader().setLoadMessage(\"Retrieving Midi File from localForage.\");\r\n\r\n\t\ttry {\r\n\t\t\t// Retrieve the MIDI file from localforage\r\n\r\n\t\t\tlet theSongBlob = await localforage.getItem(fileName);\r\n\t\t\tconsole.log(theSongBlob);\r\n\r\n\r\n\t\t\tif (theSongBlob == null) {\r\n\t\t\t\tthrow new Error(\"No file found with the name \" + fileName);\r\n\t\t\t}\r\n\r\n\t\t\t// Convert Blob to URL\r\n\t\t\tlet theSongURL = URL.createObjectURL(theSongBlob);\r\n\r\n\t\t\tgetLoader().setLoadMessage(\"Parsing Midi File.\");\r\n\r\n\t\t\t// Pass URL to MidiLoader.loadFile\r\n\t\t\tlet midiFile = await MidiLoader.loadFile(theSongURL);\r\n\t\t\tthis.setSong(new Song(midiFile, fileName, name));\r\n\t\t\tthis.songFilename = fileName;\r\n\t\t\tgetLoader().setLoadMessage(\"Loading Instruments\");\r\n\r\n\t\t\tawait this.audioPlayer.loadInstrumentsForSong(this.song);\r\n\r\n\t\t\tgetLoader().setLoadMessage(\"Creating Buffers\");\r\n\t\t\treturn this.audioPlayer.loadBuffers().then(v => getLoader().stopLoad());\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\tNotification.create(\"Couldn't read Midi-File - \" + error, 2000);\r\n\t\t\tgetLoader().stopLoad();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tsetSong(song) {\r\n\t\tthis.pause()\r\n\t\tthis.playing = false\r\n\t\tthis.paused = true\r\n\t\tthis.wasPaused = true\r\n\t\tthis.progress = 0\r\n\t\tthis.scrollOffset = 0\r\n\t\tthis.song = song\r\n\t\tif (this.loadedSongs.has(song)) {\r\n\t\t\tthis.loadedSongs.add(song)\r\n\t\t}\r\n\t\tsetupTracks(song.activeTracks)\r\n\t\tthis.newSongCallbacks.forEach(callback => callback())\r\n\t}\r\n\tstartPlay() {\r\n\t\tconsole.log(\"Starting Song\")\r\n\t\tthis.wasPaused = false\r\n\r\n\t\tthis.resetNoteSequence()\r\n\t\tthis.lastTime = this.audioPlayer.getContextTime()\r\n\t\tthis.resume()\r\n\t}\r\n\thandleScroll(stacksize) {\r\n\t\tif (this.scrolling != 0) {\r\n\t\t\tif (!this.song) {\r\n\t\t\t\tthis.scrolling = 0\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tthis.lastTime = this.audioPlayer.getContextTime()\r\n\t\t\tlet newScrollOffset = this.scrollOffset + 0.01 * this.scrolling\r\n\t\t\t//get hypothetical time with new scrollOffset.\r\n\t\t\tlet oldTime = this.getTimeWithScrollOffset(this.scrollOffset)\r\n\t\t\tlet newTime = this.getTimeWithScrollOffset(newScrollOffset)\r\n\r\n\t\t\t//limit scroll past end\r\n\t\t\tif (this.song && newTime > 1 + this.song.getEnd() / 1000) {\r\n\t\t\t\tthis.scrolling = 0\r\n\t\t\t\tnewScrollOffset =\r\n\t\t\t\t\tthis.getTimeWithoutScrollOffset() - (1 + this.song.getEnd() / 1000)\r\n\t\t\t\tthis.scrollOffset + (1 + this.song.getEnd() / 1000 - this.getTime()) ||\r\n\t\t\t\t\tthis.scrollOffset\r\n\t\t\t}\r\n\r\n\t\t\t//limit scroll past beginning\r\n\t\t\tif (newTime < oldTime && newTime < this.startDelay) {\r\n\t\t\t\tthis.scrolling = 0\r\n\t\t\t\tnewScrollOffset = this.getTimeWithoutScrollOffset() - this.startDelay\r\n\t\t\t}\r\n\r\n\t\t\tthis.scrollOffset = newScrollOffset\r\n\r\n\t\t\t//dampen scroll amount somehow...\r\n\t\t\tthis.scrolling =\r\n\t\t\t\t(Math.abs(this.scrolling) -\r\n\t\t\t\t\tMath.max(\r\n\t\t\t\t\t\tMath.abs(this.scrolling * 0.003),\r\n\t\t\t\t\t\tthis.playbackSpeed * 0.001\r\n\t\t\t\t\t)) *\r\n\t\t\t\t(Math.abs(this.scrolling) / this.scrolling) || 0\r\n\r\n\t\t\t//set to zero if only minimal scrollingspeed left\r\n\t\t\tif (Math.abs(this.scrolling) <= this.playbackSpeed * 0.005) {\r\n\t\t\t\tthis.scrolling = 0\r\n\t\t\t\tthis.resetNoteSequence()\r\n\t\t\t}\r\n\t\t\t//limit recursion\r\n\t\t\tif (!stacksize) stacksize = 0\r\n\t\t\tif (stacksize > 50) {\r\n\t\t\t\twindow.setTimeout(() => {\r\n\t\t\t\t\tthis.handleScroll()\r\n\t\t\t\t}, 25)\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tthis.handleScroll(++stacksize)\r\n\t\t\treturn\r\n\t\t}\r\n\t}\r\n\tgetBPM(time) {\r\n\t\tlet val = 0\r\n\t\tif (this.song) {\r\n\t\t\tfor (let i = this.song.temporalData.bpms.length - 1; i >= 0; i--) {\r\n\t\t\t\tif (time * 1000 > this.song.temporalData.bpms[i].timestamp) {\r\n\t\t\t\t\tval = this.song.temporalData.bpms[i].bpm\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn val\r\n\t}\r\n\tplayTick() {\r\n\t\tlet currentContextTime = this.audioPlayer.getContextTime()\r\n\r\n\t\tlet delta = (currentContextTime - this.lastTime) * this.playbackSpeed\r\n\r\n\t\t//Setting doesnt exist yet. Pitch detection is too bad for a whole piano.\r\n\t\tthis.addMicInputNotes()\r\n\r\n\t\tthis.clearOldPlayedInputNotes()\r\n\r\n\t\t//cap max updaterate.\r\n\t\tif (delta < 0.0069) {\r\n\t\t\tthis.requestNextTick()\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tlet oldProgress = this.progress\r\n\t\tthis.lastTime = currentContextTime\r\n\t\tif (!this.paused && this.scrolling == 0) {\r\n\t\t\tthis.progress += Math.min(0.1, delta)\r\n\t\t} else {\r\n\t\t\tthis.requestNextTick()\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tlet soundfontName = getSetting(\"soundfontName\")\r\n\t\tif (soundfontName != this.soundfontName) {\r\n\t\t\tthis.switchSoundfont(soundfontName)\r\n\t\t\tthis.requestNextTick()\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tlet currentTime = this.getTime()\r\n\r\n\t\tif (this.isSongEnded(currentTime - 5)) {\r\n\t\t\tthis.pause()\r\n\t\t\tthis.requestNextTick()\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif (getSetting(\"enableMetronome\")) {\r\n\t\t\tthis.playMetronomeBeats(currentTime)\r\n\t\t}\r\n\t\twhile (this.isNextNoteReached(currentTime)) {\r\n\t\t\tlet toRemove = 0\r\n\t\t\tforLoop: for (let i = 0; i < this.noteSequence.length; i++) {\r\n\t\t\t\tif (currentTime > 0.05 + this.noteSequence[i].timestamp / 1000) {\r\n\t\t\t\t\ttoRemove++\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbreak forLoop\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (toRemove > 0) {\r\n\t\t\t\tthis.noteSequence.splice(0, toRemove)\r\n\t\t\t}\r\n\r\n\t\t\tif (\r\n\t\t\t\tthis.noteSequence[0] &&\r\n\t\t\t\t(!isTrackRequiredToPlay(this.noteSequence[0].track) ||\r\n\t\t\t\t\tthis.isInputKeyPressed(this.noteSequence[0].noteNumber))\r\n\t\t\t) {\r\n\t\t\t\tthis.playNote(this.noteSequence.shift())\r\n\t\t\t} else {\r\n\t\t\t\tthis.progress = oldProgress\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.requestNextTick()\r\n\t}\r\n\r\n\tplayMetronomeBeats(currentTime) {\r\n\t\tthis.playedBeats = this.playedBeats || {}\r\n\t\tlet beatsBySecond = getCurrentSong().temporalData.beatsBySecond\r\n\t\tlet secondsToCheck = [Math.floor(currentTime), Math.floor(currentTime) + 1]\r\n\t\tsecondsToCheck.forEach(second => {\r\n\t\t\tif (beatsBySecond[second]) {\r\n\t\t\t\tbeatsBySecond[second].forEach(beatTimestamp => {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\t!this.playedBeats.hasOwnProperty(beatTimestamp) &&\r\n\t\t\t\t\t\tbeatTimestamp / 1000 < currentTime + 0.5\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tlet newMeasure =\r\n\t\t\t\t\t\t\tgetCurrentSong().measureLines[Math.floor(beatTimestamp / 1000)] &&\r\n\t\t\t\t\t\t\tgetCurrentSong().measureLines[\r\n\t\t\t\t\t\t\t\tMath.floor(beatTimestamp / 1000)\r\n\t\t\t\t\t\t\t].includes(beatTimestamp)\r\n\t\t\t\t\t\tthis.playedBeats[beatTimestamp] = true\r\n\t\t\t\t\t\tthis.audioPlayer.playBeat(\r\n\t\t\t\t\t\t\tbeatTimestamp / 1000 - currentTime,\r\n\t\t\t\t\t\t\tnewMeasure\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tclearOldPlayedInputNotes() {\r\n\t\t//TODO - Clear those that arent displayed anymore.. And/Or save them somewhere for playback.\r\n\t}\r\n\r\n\taddMicInputNotes() {\r\n\t\tif (getSetting(\"micInputEnabled\")) {\r\n\t\t\tlet currentMicNote = getCurrentMicNote()\r\n\r\n\t\t\t// console.log(currentMicFrequency)\r\n\t\t\tif (this.lastMicNote != currentMicNote) {\r\n\t\t\t\tif (this.lastMicNote > -1) {\r\n\t\t\t\t\tthis.addInputNoteOff(this.lastMicNote)\r\n\t\t\t\t}\r\n\t\t\t\tif (currentMicNote > -1) {\r\n\t\t\t\t\tthis.addInputNoteOn(currentMicNote)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.lastMicNote = currentMicNote\r\n\t\t}\r\n\t}\r\n\r\n\trequestNextTick() {\r\n\t\twindow.requestAnimationFrame(this.playTick.bind(this))\r\n\t}\r\n\r\n\tisInputKeyPressed(noteNumber) {\r\n\t\tif (\r\n\t\t\tthis.inputActiveNotes.hasOwnProperty(noteNumber) &&\r\n\t\t\t!this.inputActiveNotes[noteNumber].wasUsed\r\n\t\t) {\r\n\t\t\tthis.inputActiveNotes[noteNumber].wasUsed = true\r\n\t\t\treturn true\r\n\t\t}\r\n\t\treturn false\r\n\t}\r\n\tisSongEnded(currentTime) {\r\n\t\treturn currentTime >= this.song.getEnd() / 1000\r\n\t}\r\n\r\n\tisNextNoteReached(currentTime) {\r\n\t\tlet lookahead = isAnyTrackPlayalong()\r\n\t\t\t? LOOK_AHEAD_TIME_WHEN_PLAYALONG\r\n\t\t\t: LOOK_AHEAD_TIME\r\n\t\treturn (\r\n\t\t\tthis.noteSequence.length &&\r\n\t\t\tthis.noteSequence[0].timestamp / 1000 <\r\n\t\t\tcurrentTime + lookahead * this.playbackSpeed\r\n\t\t)\r\n\t}\r\n\r\n\tstop() {\r\n\t\tthis.progress = 0\r\n\t\tthis.scrollOffset = 0\r\n\t\tthis.playing = false\r\n\t\tthis.pause()\r\n\t}\r\n\tresume() {\r\n\t\tif (!this.song || !this.paused) return\r\n\t\tconsole.log(\"Resuming Song\")\r\n\t\tthis.paused = false\r\n\t\tthis.resetNoteSequence()\r\n\t\tthis.audioPlayer.resume()\r\n\t}\r\n\tresetNoteSequence() {\r\n\t\tthis.noteSequence = this.song.getNoteSequence()\r\n\t\tthis.noteSequence = this.noteSequence.filter(\r\n\t\t\tnote => note.timestamp > this.getTime()\r\n\t\t)\r\n\t\tthis.inputActiveNotes = {}\r\n\t\tthis.playedBeats = {}\r\n\t}\r\n\r\n\tpause() {\r\n\t\tconsole.log(\"Pausing Song\")\r\n\t\tthis.pauseTime = this.getTime()\r\n\t\tthis.paused = true\r\n\t}\r\n\r\n\tplayNote(note) {\r\n\t\tif (!note.hasOwnProperty(\"channel\") || !note.hasOwnProperty(\"noteNumber\")) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tlet currentTime = this.getTime()\r\n\r\n\t\tif (getMidiHandler().isOutputActive()) {\r\n\t\t\tgetMidiHandler().playNote(\r\n\t\t\t\tnote.noteNumber + 21,\r\n\t\t\t\tnote.velocity,\r\n\t\t\t\tnote.noteOffVelocity,\r\n\t\t\t\t(note.timestamp - currentTime * 1000) / this.playbackSpeed,\r\n\t\t\t\t(note.offTime - currentTime * 1000) / this.playbackSpeed\r\n\t\t\t)\r\n\t\t} else {\r\n\t\t\tthis.audioPlayer.playCompleteNote(\r\n\t\t\t\tcurrentTime,\r\n\t\t\t\tnote,\r\n\t\t\t\tthis.playbackSpeed,\r\n\t\t\t\tthis.getNoteVolume(note),\r\n\t\t\t\tisAnyTrackPlayalong()\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\tgetNoteVolume(note) {\r\n\t\treturn (\r\n\t\t\t(this.volume / 100) *\r\n\t\t\t(getTrackVolume(note.track) / 100) *\r\n\t\t\t(note.channelVolume / 127)\r\n\t\t)\r\n\t}\r\n\r\n\taddInputNoteOn(noteNumber) {\r\n\t\tconsole.log(pianoNotes[noteNumber])\r\n\t\tif (this.inputActiveNotes.hasOwnProperty(noteNumber)) {\r\n\t\t\tconsole.log(\"NOTE ALREADY PLAING\")\r\n\t\t\tthis.audioPlayer.noteOffContinuous(\r\n\t\t\t\tthis.inputActiveNotes[noteNumber].audioNote\r\n\t\t\t)\r\n\t\t\tdelete this.inputActiveNotes[noteNumber]\r\n\t\t}\r\n\t\tlet audioNote = this.audioPlayer.createContinuousNote(\r\n\t\t\tnoteNumber,\r\n\t\t\tthis.volume,\r\n\t\t\tthis.inputInstrument\r\n\t\t)\r\n\t\tlet activeNoteObj = {\r\n\t\t\taudioNote: audioNote,\r\n\t\t\twasUsed: false,\r\n\t\t\tnoteNumber: noteNumber,\r\n\t\t\ttimestamp: this.audioPlayer.getContextTime() * 1000\r\n\t\t}\r\n\r\n\t\tthis.inputActiveNotes[noteNumber] = activeNoteObj\r\n\t}\r\n\taddInputNoteOff(noteNumber) {\r\n\t\tif (!this.inputActiveNotes.hasOwnProperty(noteNumber)) {\r\n\t\t\tconsole.log(\"NOTE NOT PLAYING\")\r\n\t\t\treturn\r\n\t\t}\r\n\t\tthis.audioPlayer.noteOffContinuous(\r\n\t\t\tthis.inputActiveNotes[noteNumber].audioNote\r\n\t\t)\r\n\t\tthis.inputActiveNotes[noteNumber].offTime =\r\n\t\t\tthis.audioPlayer.getContextTime() * 1000\r\n\t\tthis.inputPlayedNotes.push(this.inputActiveNotes[noteNumber])\r\n\r\n\r\n\t\tdelete this.inputActiveNotes[noteNumber]\r\n\t\tconsole.log(this.inputPlayedNotes)\r\n\t}\r\n}\r\nconst thePlayer = new Player()\r\nexport const getPlayer = () => {\r\n\treturn thePlayer\r\n}\r\n\r\nexport const getCurrentSong = () => {\r\n\treturn thePlayer.song\r\n}\r\n\r\nexport const getSongFilename = () => {\r\n\treturn thePlayer.song.getSongFilename()\r\n}\r\nexport const getPlayerState = () => {\r\n\treturn thePlayer.getState()\r\n}\r\nfunction getPianoNotes() {\r\n\tconst notes = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"];\r\n\tconst numOctaves = 8; // 7 octaves from A0 to A7\r\n\tconst pianoNotes = [];\r\n\r\n\tfor (let octave = 0; octave <= numOctaves; octave++) {\r\n\t\tfor (let noteIndex = 0; noteIndex < notes.length; noteIndex++) {\r\n\t\t\tif (noteIndex < 9 && octave === 0) {\r\n\t\t\t\tcontinue; // Skip C0 to G#8\r\n\t\t\t}\r\n\r\n\t\t\tconst noteWithOctave = `${notes[noteIndex]}${octave}`;\r\n\t\t\tpianoNotes.push(noteWithOctave);\r\n\r\n\t\t\tif (notes[noteIndex] === \"C\" && octave === 8) {\r\n\t\t\t\tbreak; // Stop after C8\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn pianoNotes;\r\n}\r\n\r\nexport const pianoNotes = getPianoNotes();\r\nconsole.log(pianoNotes);\r\n","import { CONST } from \"../data/CONST.js\"\r\n\r\n/**\r\n *\r\n */\r\n\r\nvar theTracks = {}\r\nexport const getTracks = () => {\r\n\treturn theTracks\r\n}\r\nexport const getTrack = trackId => {\r\n\treturn theTracks[trackId]\r\n}\r\nexport const setupTracks = activeTracks => {\r\n\ttheTracks = {}\r\n\tfor (let trackId in activeTracks) {\r\n\t\tif (!theTracks.hasOwnProperty(trackId)) {\r\n\t\t\ttheTracks[trackId] = {\r\n\t\t\t\tdraw: true,\r\n\t\t\t\tcolor: CONST.TRACK_COLORS[trackId % 4],\r\n\t\t\t\tvolume: 100,\r\n\t\t\t\tname: activeTracks[trackId].name || \"Track \" + trackId,\r\n\t\t\t\trequiredToPlay: false,\r\n\t\t\t\tindex: trackId\r\n\t\t\t}\r\n\t\t}\r\n\t\ttheTracks[trackId].color = CONST.TRACK_COLORS[trackId % 4]\r\n\t}\r\n}\r\n\r\nexport const isTrackRequiredToPlay = trackId => {\r\n\treturn theTracks[trackId].requiredToPlay\r\n}\r\n\r\nexport const isAnyTrackPlayalong = () => {\r\n\treturn (\r\n\t\tObject.keys(theTracks).filter(trackId => theTracks[trackId].requiredToPlay)\r\n\t\t\t.length > 0\r\n\t)\r\n}\r\n\r\nexport const getTrackVolume = trackId => {\r\n\treturn theTracks[trackId].volume\r\n}\r\n\r\nexport const isTrackDrawn = trackId => {\r\n\treturn theTracks[trackId] && theTracks[trackId].draw\r\n}\r\n\r\nexport const getTrackColor = trackId => {\r\n\treturn theTracks[trackId] ? theTracks[trackId].color : \"rgba(0,0,0,0)\"\r\n}\r\n\r\nexport const setTrackColor = (trackId, colorId, color) => {\r\n\ttheTracks[trackId].color[colorId] = color\r\n}\r\n","import { Midi, Track, Note } from '@tonejs/midi';\r\nimport localforage from 'localforage';\r\n\r\nclass MidiRecorder {\r\n    constructor() {\r\n        this.recording = false;\r\n        this.midi = new Midi();\r\n        this.track = this.midi.addTrack();\r\n        this.startTime = null;\r\n        this.pauseTime = null;\r\n        this.totalTime = 0;\r\n        this.currentTrack = null;\r\n        this.totalPauseDuration = 0;  // Add this to track total pause time\r\n        this.notesOn = {};\r\n        this.firstNotePlayed = false;\r\n        this.recordedTracks = [];\r\n        this.tracks = [];\r\n    }\r\n\r\n    async startRecording() {\r\n        if (this.recording) {\r\n            console.log(\"Already recording.\");\r\n            return;\r\n        }\r\n\r\n        this.recording = true;\r\n\r\n        // Start a new track\r\n        this.currentTrack = this.midi.addTrack();\r\n        this.firstNotePlayed = false;  // Set to false when starting a new recording\r\n\r\n        let midiAccess = await navigator.requestMIDIAccess();\r\n\r\n        console.log(\"MIDI access granted. Enumerating inputs...\");\r\n\r\n        let inputs = midiAccess.inputs.values();\r\n        let inputCount = 0;\r\n        for (let input of inputs) {\r\n            console.log(`Setting up message handler for input ${input.id} (${input.name})`);\r\n            input.onmidimessage = this.handleMIDIMessage.bind(this);\r\n            inputCount++;\r\n        }\r\n\r\n        console.log(`${inputCount} MIDI input(s) found.`);\r\n    }\r\n\r\n    pauseRecording() {\r\n        this.recording = false;\r\n        // If we are pausing, calculate the total time recorded so far and save the pause time\r\n        if (this.startTime !== null) {\r\n            this.totalTime += (Date.now() - this.startTime) / 1000;\r\n            this.pauseTime = Date.now();\r\n            this.startTime = null;\r\n        }\r\n        // Complete any notes that are currently playing\r\n        for (let noteNumber in this.notesOn) {\r\n            if (this.notesOn.hasOwnProperty(noteNumber)) {\r\n                let noteOnData = this.notesOn[noteNumber];\r\n                let noteOnTime = noteOnData.deltaTime;\r\n                let noteOffTime = (Date.now() - this.startTime) / 1000 - this.totalPauseDuration;\r\n                let duration = noteOffTime - noteOnTime;\r\n\r\n                // Ensure duration is not negative\r\n                if (duration < 0) {\r\n                    console.error(`Negative duration for note ${noteNumber}: ${duration}`);\r\n                    duration = 0;\r\n                }\r\n\r\n                try {\r\n                    this.track.addNote({\r\n                        midi: noteNumber,\r\n                        time: Math.max(noteOnTime, 0),  // Ensure time is not negative\r\n                        duration: duration,\r\n                        velocity: 127 / 127,  // Use a default velocity for completed notes\r\n                        channel: 0,  // Use a default channel for completed notes\r\n                    });\r\n                    console.log('Note completed on pause');\r\n                } catch (error) {\r\n                    console.log('Error adding note to track:', error);\r\n                }\r\n\r\n                delete this.notesOn[noteNumber];\r\n            }\r\n        }\r\n        // Add current track to the list of tracks and reset the current track\r\n        this.recordedTracks.push(this.track);\r\n        this.track = this.midi.addTrack();\r\n    }\r\n\r\n\r\n    clearRecording() {\r\n        this.recording = false;  // Set to false when clearing the recording\r\n        this.midi = new Midi();\r\n        this.track = this.midi.addTrack();\r\n        this.startTime = null;\r\n        this.totalTime = 0;\r\n        this.pauseTime = 0;\r\n        this.currentTrack = null;\r\n        this.tracks = [];\r\n        this.recordedTracks = [];\r\n        this.notesOn = {};\r\n        this.totalPauseDuration = 0;\r\n        this.firstNotePlayed = false;\r\n    }\r\n\r\n    async saveRecording(key) {\r\n        this.recording = false;\r\n        try {\r\n            let data = await localforage.getItem(key);\r\n            let filename = key;\r\n            await saveAs(data, filename);\r\n            return filename;\r\n        } catch (err) {\r\n            console.log(\"Error to local storage:\", err);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    async saveRecordingToLocalStorage() {\r\n        if (this.recording) {\r\n            this.pauseRecording();\r\n            this.recording = false;\r\n        }\r\n        // Create a new Midi instance to combine all the tracks\r\n        let finalMidi = new Midi();\r\n\r\n        let totalTime = 0;  // Keep track of the total time of all tracks\r\n\r\n        for (let track of this.recordedTracks) {\r\n            let finalTrack = finalMidi.addTrack();\r\n            for (let note of track.notes) {\r\n                // Adjust the note time by the total time of all previous tracks\r\n                let adjustedNote = {\r\n                    ...note,\r\n                    time: note.time + totalTime,\r\n                };\r\n                finalTrack.addNote(adjustedNote);\r\n            }\r\n            // Update the total time for the next track\r\n            totalTime += track.duration;\r\n        }\r\n\r\n        let data = finalMidi.toArray();\r\n        let blob = new Blob([data], { type: \"audio/midi\" });\r\n        let filename = \"recording-\" + new Date().toISOString() + \".mid\";\r\n        await localforage.setItem(filename, blob);\r\n        console.log(\"Saved recording to local storage\");\r\n        return filename;\r\n    }\r\n\r\n\r\n\r\n    // OLD CODE\r\n    // async saveRecordingToLocalStorage() {\r\n    //     this.recording = false;\r\n    //     let data = this.midi.toArray();\r\n    //     let blob = new Blob([data], { type: \"audio/midi\" });\r\n    //     let filename = \"recording-\" + new Date().toISOString() + \".mid\";\r\n    //     await localforage.setItem(filename, blob);\r\n    //     console.log(\"Saved recording to local storage\");\r\n    //     return filename;\r\n    // }\r\n\r\n    isFirstNotePlayed() {\r\n        return this.firstNotePlayed;\r\n    }\r\n\r\n    handleMIDIMessage(event) {\r\n        console.log('Received MIDI message', event.data);\r\n        if (!this.recording || !this.firstNotePlayed && event.data[2] === 0) return;\r\n        console.log('Recording is active');\r\n        let [status, noteNumber, velocity] = event.data;\r\n        let messageType = status & 0xF0;\r\n\r\n        if (messageType === 0x90 && velocity > 0) {  // note on\r\n            // If this is the first note, set the start time\r\n            if (this.startTime === null) {\r\n                this.startTime = Date.now();\r\n                this.firstNotePlayed = true;\r\n            }\r\n\r\n            let deltaTime = (Date.now() - this.startTime) / 1000 - this.totalPauseDuration;\r\n            this.notesOn[noteNumber] = { start: Date.now(), deltaTime: deltaTime };\r\n            console.log('Note on message received');\r\n        } else if ((messageType === 0x80) || (messageType === 0x90 && velocity === 0)) {  // note off\r\n            let noteOnData = this.notesOn[noteNumber];\r\n\r\n            if (noteOnData !== undefined) {\r\n                let noteOnTime = noteOnData.deltaTime;\r\n                let noteOffTime = (Date.now() - this.startTime) / 1000 - this.totalPauseDuration;\r\n                let duration = noteOffTime - noteOnTime;\r\n\r\n                // Ensure duration is not negative\r\n                if (duration < 0) {\r\n                    console.error(`Negative duration for note ${noteNumber}: ${duration}`);\r\n                    duration = 0;\r\n                }\r\n\r\n                let channel = status & 0x0F;\r\n\r\n                try {\r\n                    this.track.addNote({\r\n                        midi: noteNumber,\r\n                        time: Math.max(noteOnTime, 0),  // Ensure time is not negative\r\n                        duration: duration,\r\n                        velocity: velocity / 127,\r\n                        channel: channel,\r\n                    });\r\n                    console.log('Note added to track');\r\n                } catch (error) {\r\n                    console.log('Error adding note to track:', error);\r\n                }\r\n\r\n                delete this.notesOn[noteNumber];\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    // OLD CODE\r\n    //     handleMIDIMessage(event) {\r\n    //         console.log('Received MIDI message', event.data);\r\n    //         if (!this.recording || !this.firstNotePlayed && event.data[2] === 0) return;\r\n    //         console.log('Recording is active');\r\n    //         let [status, noteNumber, velocity] = event.data;\r\n    //         let messageType = status & 0xF0;\r\n    //         if (messageType === 0x90 && velocity > 0) {  // note on\r\n    //             // If this is the first note, set the start time\r\n    //             if (this.startTime === null) {\r\n    //                 this.startTime = Date.now();\r\n    //                 this.firstNotePlayed = true;\r\n    //             }\r\n    //             let deltaTime = this.totalTime + (Date.now() - this.startTime) / 1000;\r\n    //             this.notesOn[noteNumber] = deltaTime;\r\n    //             console.log('Note on message received');\r\n    //         } else if ((messageType === 0x80) || (messageType === 0x90 && velocity === 0)) {  // note off\r\n    //             let noteOnTime = this.notesOn[noteNumber];\r\n    //             if (noteOnTime !== undefined) {\r\n    //                 let duration = ((Date.now() - this.startTime) / 1000) - noteOnTime;\r\n    //                 let channel = status & 0x0F;\r\n    //                 try {\r\n    //                     this.track.addNote({\r\n    //                         midi: noteNumber,\r\n    //                         time: noteOnTime,\r\n    //                         duration: duration,\r\n    //                         velocity: velocity / 127,\r\n    //                         channel: channel,\r\n    //                     });\r\n    //                     console.log('Note added to track');\r\n    //                 } catch (error) {\r\n    //                     console.log('Error adding note to track:', error);\r\n    //                 }\r\n    //                 delete this.notesOn[noteNumber];\r\n    //             }\r\n    //         }\r\n    //     }\r\n}\r\n\r\nexport default MidiRecorder;\r\n","import { getSetting, setSetting } from \"./Settings.js\"\r\n\r\nexport const getDefaultSettings = () => {\r\n\tlet copy = {}\r\n\tfor (let tab in defaultSettings) {\r\n\t\tcopy[tab] = {}\r\n\t\tfor (let category in defaultSettings[tab]) {\r\n\t\t\tcopy[tab][category] = []\r\n\t\t\tdefaultSettings[tab][category].forEach(setting => {\r\n\t\t\t\tlet settingCopy = {}\r\n\t\t\t\tfor (let attribute in setting) {\r\n\t\t\t\t\tsettingCopy[attribute] = setting[attribute]\r\n\t\t\t\t}\r\n\t\t\t\tcopy[tab][category].push(settingCopy)\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\treturn copy\r\n}\r\nconst TAB_GENERAL = \"General\"\r\nconst TAB_AUDIO = \"Audio\"\r\nconst TAB_VIDEO = \"Video\"\r\n\r\nconst defaultSettings = {\r\n\t//tabs\r\n\tGeneral: {\r\n\t\t//default or subcategory\r\n\t\tdefault: [\r\n\t\t\t{\r\n\t\t\t\ttype: \"slider\",\r\n\t\t\t\tid: \"renderOffset\",\r\n\t\t\t\tlabel: \"Render offset (ms)\",\r\n\t\t\t\tvalue: 0,\r\n\t\t\t\tmin: -250,\r\n\t\t\t\tmax: 250,\r\n\t\t\t\tstep: 1,\r\n\t\t\t\tonChange: value => setSetting(\"renderOffset\", value)\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"checkbox\",\r\n\t\t\t\tid: \"reverseNoteDirection\",\r\n\t\t\t\tlabel: \"Reverse note direction\",\r\n\t\t\t\tvalue: false,\r\n\t\t\t\tonChange: ev => {\r\n\t\t\t\t\tsetSetting(\"reverseNoteDirection\", ev.target.checked)\r\n\t\t\t\t\tsetSetting(\r\n\t\t\t\t\t\t\"pianoPosition\",\r\n\t\t\t\t\t\tMath.abs(parseInt(getSetting(\"pianoPosition\")) + 1)\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t{\r\n\t\t\t\ttype: \"checkbox\",\r\n\t\t\t\tid: \"showBPM\",\r\n\t\t\t\tlabel: \"Show BPM\",\r\n\t\t\t\tvalue: true,\r\n\t\t\t\tonChange: ev => setSetting(\"showBPM\", ev.target.checked)\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"checkbox\",\r\n\t\t\t\tid: \"showMiliseconds\",\r\n\t\t\t\tlabel: \"Show Miliseconds\",\r\n\t\t\t\tvalue: true,\r\n\t\t\t\tonChange: ev => setSetting(\"showMiliseconds\", ev.target.checked)\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"checkbox\",\r\n\t\t\t\tid: \"showNoteDebugInfo\",\r\n\t\t\t\tlabel: \"Enable debug info on hover over note\",\r\n\t\t\t\tvalue: false,\r\n\t\t\t\tonChange: ev => setSetting(\"showNoteDebugInfo\", ev.target.checked)\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"checkbox\",\r\n\t\t\t\tid: \"showMarkersSong\",\r\n\t\t\t\tlabel: \"Show markers in the song\",\r\n\t\t\t\tvalue: false,\r\n\t\t\t\tonChange: ev => setSetting(\"showMarkersSong\", ev.target.checked)\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"checkbox\",\r\n\t\t\t\tid: \"showMarkersTimeline\",\r\n\t\t\t\tlabel: \"Show markers on timeline\",\r\n\t\t\t\tvalue: false,\r\n\t\t\t\tonChange: ev => setSetting(\"showMarkersTimeline\", ev.target.checked)\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"checkbox\",\r\n\t\t\t\tid: \"showFps\",\r\n\t\t\t\tlabel: \"Show FPS\",\r\n\t\t\t\tvalue: true,\r\n\t\t\t\tonChange: ev => setSetting(\"showFps\", ev.target.checked)\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"color\",\r\n\t\t\t\tid: \"inputNoteColor\",\r\n\t\t\t\tlabel: \"Your note color\",\r\n\t\t\t\tvalue: \"rgba(40,155,155,0.8)\",\r\n\t\t\t\tonChange: value => setSetting(\"inputNoteColor\", value)\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"On Screen Piano\": [\r\n\t\t\t{\r\n\t\t\t\ttype: \"checkbox\",\r\n\t\t\t\tid: \"clickablePiano\",\r\n\t\t\t\tlabel: \"Clickable piano\",\r\n\t\t\t\tvalue: true,\r\n\t\t\t\tonChange: ev => setSetting(\"clickablePiano\", ev.target.checked)\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"checkbox\",\r\n\t\t\t\tid: \"showKeyNamesOnPianoWhite\",\r\n\t\t\t\tlabel: \"Show white key names on piano\",\r\n\t\t\t\tvalue: true,\r\n\t\t\t\tonChange: ev =>\r\n\t\t\t\t\tsetSetting(\"showKeyNamesOnPianoWhite\", ev.target.checked)\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"checkbox\",\r\n\t\t\t\tid: \"showKeyNamesOnPianoBlack\",\r\n\t\t\t\tlabel: \"Show black key names on piano\",\r\n\t\t\t\tvalue: true,\r\n\t\t\t\tonChange: ev =>\r\n\t\t\t\t\tsetSetting(\"showKeyNamesOnPianoBlack\", ev.target.checked)\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"checkbox\",\r\n\t\t\t\tid: \"highlightActivePianoKeys\",\r\n\t\t\t\tlabel: \"Color active piano keys\",\r\n\t\t\t\tvalue: true,\r\n\t\t\t\tonChange: ev => setSetting(\"showPianoKeys\", ev.target.checked)\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"checkbox\",\r\n\t\t\t\tid: \"drawPianoKeyHitEffect\",\r\n\t\t\t\tlabel: \"Piano Hit key effect\",\r\n\t\t\t\tvalue: true,\r\n\t\t\t\tonChange: ev => setSetting(\"drawPianoKeyHitEffect\", ev.target.checked)\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"slider\",\r\n\t\t\t\tid: \"pianoPosition\",\r\n\t\t\t\tlabel: \"Piano Position\",\r\n\t\t\t\tvalue: 20,\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tmax: 100,\r\n\t\t\t\tstep: 1,\r\n\t\t\t\tonChange: value => setSetting(\"pianoPosition\", value)\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"slider\",\r\n\t\t\t\tid: \"whiteKeyHeight\",\r\n\t\t\t\tlabel: \"Height (%) - White keys\",\r\n\t\t\t\tvalue: 100,\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tmax: 200,\r\n\t\t\t\tstep: 1,\r\n\t\t\t\tonChange: value => setSetting(\"whiteKeyHeight\", value)\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"slider\",\r\n\t\t\t\tid: \"blackKeyHeight\",\r\n\t\t\t\tlabel: \"Height (%) - Black keys\",\r\n\t\t\t\tvalue: 100,\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tmax: 200,\r\n\t\t\t\tstep: 1,\r\n\t\t\t\tonChange: value => setSetting(\"blackKeyHeight\", value)\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\r\n\tVideo: {\r\n\t\tdefault: [\r\n\t\t\t{\r\n\t\t\t\ttype: \"slider\",\r\n\t\t\t\tid: \"noteToHeightConst\",\r\n\t\t\t\tlabel: \"Seconds shown on screen\",\r\n\t\t\t\tvalue: 3,\r\n\t\t\t\tmin: 0.1,\r\n\t\t\t\tmax: 30,\r\n\t\t\t\tstep: 0.1,\r\n\t\t\t\tonChange: value => setSetting(\"noteToHeightConst\", value)\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"Note Appearance\": [\r\n\t\t\t{\r\n\t\t\t\ttype: \"checkbox\",\r\n\t\t\t\tid: \"showHitKeys\",\r\n\t\t\t\tlabel: \"Active Notes effect\",\r\n\t\t\t\tvalue: true,\r\n\t\t\t\tonChange: ev => setSetting(\"showHitKeys\", ev.target.checked)\r\n\t\t\t},\r\n\r\n\t\t\t{\r\n\t\t\t\ttype: \"checkbox\",\r\n\t\t\t\tid: \"strokeActiveNotes\",\r\n\t\t\t\tlabel: \"Stroke active notes\",\r\n\t\t\t\tvalue: true,\r\n\t\t\t\tonChange: ev => setSetting(\"strokeActiveNotes\", ev.target.checked)\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"color\",\r\n\t\t\t\tid: \"strokeActiveNotesColor\",\r\n\t\t\t\tlabel: \"Stroke color\",\r\n\t\t\t\tvalue: \"rgba(240,240,240,0.5)\",\r\n\t\t\t\tonChange: value => setSetting(\"strokeActiveNotesColor\", value)\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"slider\",\r\n\t\t\t\tid: \"strokeActiveNotesWidth\",\r\n\t\t\t\tlabel: \"Stroke width\",\r\n\t\t\t\tvalue: \"4\",\r\n\t\t\t\tmin: 1,\r\n\t\t\t\tmax: 10,\r\n\t\t\t\tstep: 0.5,\r\n\t\t\t\tonChange: value => setSetting(\"strokeActiveNotesWidth\", value)\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"checkbox\",\r\n\t\t\t\tid: \"strokeNotes\",\r\n\t\t\t\tlabel: \"Stroke notes\",\r\n\t\t\t\tvalue: true,\r\n\t\t\t\tonChange: ev => setSetting(\"strokeNotes\", ev.target.checked)\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"color\",\r\n\t\t\t\tid: \"strokeNotesColor\",\r\n\t\t\t\tlabel: \"Stroke color\",\r\n\t\t\t\tvalue: \"rgba(0,0,0,1)\",\r\n\t\t\t\tonChange: value => setSetting(\"strokeNotesColor\", value)\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"slider\",\r\n\t\t\t\tid: \"strokeNotesWidth\",\r\n\t\t\t\tlabel: \"Stroke width\",\r\n\t\t\t\tvalue: \"1\",\r\n\t\t\t\tmin: 1,\r\n\t\t\t\tmax: 10,\r\n\t\t\t\tstep: 0.5,\r\n\t\t\t\tonChange: value => setSetting(\"strokeNotesWidth\", value)\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"checkbox\",\r\n\t\t\t\tid: \"roundedNotes\",\r\n\t\t\t\tlabel: \"Rounded notes\",\r\n\t\t\t\tvalue: true,\r\n\t\t\t\tonChange: ev => setSetting(\"roundedNotes\", ev.target.checked)\r\n\t\t\t},\r\n\t\t\t//TODO fix getAlphaFromY in Noterender.\r\n\t\t\t// {\r\n\t\t\t// \ttype: \"checkbox\",\r\n\t\t\t// \tid: \"fadeInNotes\",\r\n\t\t\t// \tlabel: \"Enable fade in effect\",\r\n\t\t\t// \tvalue: true,\r\n\t\t\t// \tonChange: ev => setSetting(\"fadeInNotes\", ev.target.checked)\r\n\t\t\t// },\r\n\t\t\t{\r\n\t\t\t\ttype: \"slider\",\r\n\t\t\t\tid: \"noteBorderRadius\",\r\n\t\t\t\tlabel: \"Note border radius (%)\",\r\n\t\t\t\tvalue: 15,\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tmax: 50,\r\n\t\t\t\tstep: 1,\r\n\t\t\t\tonChange: value => setSetting(\"noteBorderRadius\", value)\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"slider\",\r\n\t\t\t\tid: \"minNoteHeight\",\r\n\t\t\t\tlabel: \"Minimum Note height (px)\",\r\n\t\t\t\tvalue: 10,\r\n\t\t\t\tmin: 1,\r\n\t\t\t\tmax: 50,\r\n\t\t\t\tstep: 1,\r\n\t\t\t\tonChange: value => setSetting(\"minNoteHeight\", value)\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"slider\",\r\n\t\t\t\tid: \"noteEndedShrink\",\r\n\t\t\t\tlabel: \"Played Notes shrink speed\",\r\n\t\t\t\tvalue: 1,\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tmax: 5,\r\n\t\t\t\tstep: 0.1,\r\n\t\t\t\tonChange: value => setSetting(\"noteEndedShrink\", value)\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"slider\",\r\n\t\t\t\tid: \"playedNoteFalloffSpeed\",\r\n\t\t\t\tlabel: \"Played Note Speed\",\r\n\t\t\t\tvalue: 1,\r\n\t\t\t\tmin: 0.1,\r\n\t\t\t\tmax: 10,\r\n\t\t\t\tstep: 0.1,\r\n\t\t\t\tonChange: value => setSetting(\"playedNoteFalloffSpeed\", value)\r\n\t\t\t}\r\n\t\t],\r\n\t\tSustain: [\r\n\t\t\t{\r\n\t\t\t\ttype: \"checkbox\",\r\n\t\t\t\tid: \"showSustainOnOffs\",\r\n\t\t\t\tlabel: \"Draw Sustain On/Off Events\",\r\n\t\t\t\tvalue: false,\r\n\t\t\t\tonChange: function (ev) {\r\n\t\t\t\t\tsetSetting(\"showSustainOnOffs\", ev.target.checked)\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"checkbox\",\r\n\t\t\t\tid: \"showSustainPeriods\",\r\n\t\t\t\tlabel: \"Draw Sustain Periods\",\r\n\t\t\t\tvalue: false,\r\n\t\t\t\tonChange: ev => setSetting(\"showSustainPeriods\", ev.target.checked)\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"checkbox\",\r\n\t\t\t\tid: \"showSustainedNotes\",\r\n\t\t\t\tlabel: \"Draw Sustained Notes\",\r\n\t\t\t\tvalue: false,\r\n\t\t\t\tonChange: ev => setSetting(\"showSustainedNotes\", ev.target.checked)\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"slider\",\r\n\t\t\t\tid: \"sustainedNotesOpacity\",\r\n\t\t\t\tlabel: \"Sustained Notes Opacity (%)\",\r\n\t\t\t\tvalue: 50,\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tmax: 100,\r\n\t\t\t\tstep: 1,\r\n\t\t\t\tonChange: value => setSetting(\"sustainedNotesOpacity\", value)\r\n\t\t\t}\r\n\t\t],\r\n\t\tParticles: [\r\n\t\t\t{\r\n\t\t\t\ttype: \"checkbox\",\r\n\t\t\t\tid: \"showParticlesTop\",\r\n\t\t\t\tlabel: \"Enable top particles\",\r\n\t\t\t\tvalue: true,\r\n\t\t\t\tonChange: ev => setSetting(\"showParticlesTop\", ev.target.checked)\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"checkbox\",\r\n\t\t\t\tid: \"showParticlesBottom\",\r\n\t\t\t\tlabel: \"Enable bottom particles \",\r\n\t\t\t\tvalue: true,\r\n\t\t\t\tonChange: ev => setSetting(\"showParticlesBottom\", ev.target.checked)\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"checkbox\",\r\n\t\t\t\tid: \"particleStroke\",\r\n\t\t\t\tlabel: \"Stroke particles\",\r\n\t\t\t\tvalue: true,\r\n\t\t\t\tonChange: ev => setSetting(\"particleStroke\", ev.target.checked)\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"slider\",\r\n\t\t\t\tid: \"particleBlur\",\r\n\t\t\t\tlabel: \"Particle blur amount (px)\",\r\n\t\t\t\tvalue: 3,\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tmax: 10,\r\n\t\t\t\tstep: 1,\r\n\t\t\t\tonChange: value => setSetting(\"particleBlur\", value)\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"slider\",\r\n\t\t\t\tid: \"particleAmount\",\r\n\t\t\t\tlabel: \"Particle Amount (per frame)\",\r\n\t\t\t\tvalue: 3,\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tmax: 15,\r\n\t\t\t\tstep: 1,\r\n\t\t\t\tonChange: value => setSetting(\"particleAmount\", value)\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"slider\",\r\n\t\t\t\tid: \"particleSize\",\r\n\t\t\t\tlabel: \"Particle Size\",\r\n\t\t\t\tvalue: 6,\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tmax: 10,\r\n\t\t\t\tstep: 1,\r\n\t\t\t\tonChange: value => setSetting(\"particleSize\", value)\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"slider\",\r\n\t\t\t\tid: \"particleLife\",\r\n\t\t\t\tlabel: \"Particle Duration\",\r\n\t\t\t\tvalue: 20,\r\n\t\t\t\tmin: 1,\r\n\t\t\t\tmax: 150,\r\n\t\t\t\tstep: 1,\r\n\t\t\t\tonChange: value => setSetting(\"particleLife\", value)\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"slider\",\r\n\t\t\t\tid: \"particleSpeed\",\r\n\t\t\t\tlabel: \"Particle Speed\",\r\n\t\t\t\tvalue: 4,\r\n\t\t\t\tmin: 1,\r\n\t\t\t\tmax: 15,\r\n\t\t\t\tstep: 1,\r\n\t\t\t\tonChange: value => setSetting(\"particleSpeed\", value)\r\n\t\t\t}\r\n\t\t],\r\n\t\tBackground: [\r\n\t\t\t{\r\n\t\t\t\ttype: \"color\",\r\n\t\t\t\tid: \"bgCol1\",\r\n\t\t\t\tlabel: \"Background fill color 1\",\r\n\t\t\t\tvalue: \"rgba(40,40,40,0.8)\",\r\n\t\t\t\tonChange: value => {\r\n\t\t\t\t\tsetSetting(\"bgCol1\", value)\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"color\",\r\n\t\t\t\tid: \"bgCol2\",\r\n\t\t\t\tlabel: \"Background fill color 2\",\r\n\t\t\t\tvalue: \"rgba(25,25,25,1)\",\r\n\t\t\t\tonChange: value => {\r\n\t\t\t\t\tsetSetting(\"bgCol2\", value)\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"color\",\r\n\t\t\t\tid: \"bgCol3\",\r\n\t\t\t\tlabel: \"Background stroke color\",\r\n\t\t\t\tvalue: \"rgba(10,10,10,0.5)\",\r\n\t\t\t\tonChange: value => {\r\n\t\t\t\t\tsetSetting(\"bgCol3\", value)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\tAudio: {\r\n\t\tdefault: [\r\n\t\t\t{\r\n\t\t\t\ttype: \"list\",\r\n\t\t\t\tid: \"soundfontName\",\r\n\t\t\t\tlabel: \"Soundfont\",\r\n\t\t\t\tvalue: \"MusyngKite\",\r\n\t\t\t\tlist: [\"MusyngKite\", \"FluidR3_GM\", \"FatBoy\"],\r\n\t\t\t\tonChange: newVal => setSetting(\"soundfontName\", newVal)\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"checkbox\",\r\n\t\t\t\tid: \"sustainEnabled\",\r\n\t\t\t\tlabel: \"Enable Sustain\",\r\n\t\t\t\tvalue: true,\r\n\t\t\t\tonChange: function (ev) {\r\n\t\t\t\t\tsetSetting(\"sustainEnabled\", ev.target.checked)\r\n\t\t\t\t}.bind(this)\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"checkbox\",\r\n\t\t\t\tid: \"enableMetronome\",\r\n\t\t\t\tlabel: \"Enable Metronome\",\r\n\t\t\t\tvalue: true,\r\n\t\t\t\tonChange: function (ev) {\r\n\t\t\t\t\tsetSetting(\"enableMetronome\", ev.target.checked)\r\n\t\t\t\t}.bind(this)\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"slider\",\r\n\t\t\t\tid: \"metronomeVolume\",\r\n\t\t\t\tlabel: \"Metronome Volume\",\r\n\t\t\t\tvalue: 0.5,\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tmax: 1,\r\n\t\t\t\tstep: 0.1,\r\n\t\t\t\tonChange: value => setSetting(\"metronomeVolume\", value)\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"ADSR Envelope\": [\r\n\t\t\t{\r\n\t\t\t\ttype: \"slider\",\r\n\t\t\t\tid: \"adsrAttack\",\r\n\t\t\t\tlabel: \"Attack (Seconds)\",\r\n\t\t\t\tvalue: 0,\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tmax: 2,\r\n\t\t\t\tstep: 0.01,\r\n\t\t\t\tonChange: value => setSetting(\"adsrAttack\", value)\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"slider\",\r\n\t\t\t\tid: \"adsrDecay\",\r\n\t\t\t\tlabel: \"Decay (Seconds)\",\r\n\t\t\t\tvalue: 0,\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tmax: 0.5,\r\n\t\t\t\tstep: 0.01,\r\n\t\t\t\tonChange: value => setSetting(\"adsrDecay\", value)\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"slider\",\r\n\t\t\t\tid: \"adsrSustain\",\r\n\t\t\t\tlabel: \"Sustain (%)\",\r\n\t\t\t\tvalue: 100,\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tmax: 100,\r\n\t\t\t\tstep: 1,\r\n\t\t\t\tonChange: value => setSetting(\"adsrSustain\", value)\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"slider\",\r\n\t\t\t\tid: \"adsrReleaseKey\",\r\n\t\t\t\tlabel: \"Release - Key (Seconds)\",\r\n\t\t\t\tvalue: 0.2,\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tmax: 2,\r\n\t\t\t\tstep: 0.01,\r\n\t\t\t\tonChange: value => setSetting(\"adsrReleaseKey\", value)\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"slider\",\r\n\t\t\t\tid: \"adsrReleasePedal\",\r\n\t\t\t\tlabel: \"Release - Pedal (Seconds)\",\r\n\t\t\t\tvalue: 0.2,\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tmax: 2,\r\n\t\t\t\tstep: 0.01,\r\n\t\t\t\tonChange: value => setSetting(\"adsrReleasePedal\", value)\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n}\r\n","import { getSettingObject } from \"./Settings.js\"\r\n\r\nconst SAVE_PATH_ROOT = \"Midiano/SavedSettings\"\r\nexport const getGlobalSavedSettings = () => {\r\n\tlet obj = {}\r\n\tif (window.localStorage) {\r\n\t\tlet storedObj = window.localStorage.getItem(SAVE_PATH_ROOT)\r\n\t\tif (storedObj) {\r\n\t\t\tobj = JSON.parse(storedObj)\r\n\t\t}\r\n\t}\r\n\treturn obj\r\n}\r\n\r\nexport const saveCurrentSettings = () => {\r\n\tif (window.localStorage) {\r\n\t\tlet saveObj = getSettingObject()\r\n\t\twindow.localStorage.setItem(SAVE_PATH_ROOT, JSON.stringify(saveObj))\r\n\t}\r\n}\r\n","import { getDefaultSettings } from \"./DefaultSettings.js\"\r\nimport { SettingUI } from \"../ui/SettingUI.js\"\r\nimport {\r\n\tgetGlobalSavedSettings,\r\n\tsaveCurrentSettings\r\n} from \"./LocalStorageHandler.js\"\r\n\r\nclass Settings {\r\n\tconstructor(ui) {\r\n\t\tthis.settings = getDefaultSettings()\r\n\t\tlet savedSettings = getGlobalSavedSettings()\r\n\r\n\t\tthis.settingsById = {}\r\n\t\tObject.keys(this.settings).forEach(tabId =>\r\n\t\t\tObject.keys(this.settings[tabId]).forEach(categoryId =>\r\n\t\t\t\tthis.settings[tabId][categoryId].forEach(setting => {\r\n\t\t\t\t\tthis.settingsById[setting.id] = setting\r\n\r\n\t\t\t\t\tif (savedSettings.hasOwnProperty(setting.id)) {\r\n\t\t\t\t\t\tsetting.value = savedSettings[setting.id]\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t)\r\n\t\t)\r\n\t\tthis.settingsUi = new SettingUI()\r\n\t}\r\n\tsetSettingValue(settingId, value) {\r\n\t\tthis.settingsById[settingId].value = value\r\n\t}\r\n}\r\n\r\nconst globalSettings = new Settings()\r\nexport const getSetting = settingId => {\r\n\tif (globalSettings == null) {\r\n\t\tglobalSettings = new Settings()\r\n\t}\r\n\treturn globalSettings.settingsById[settingId]\r\n\t\t? globalSettings.settingsById[settingId].value\r\n\t\t: null\r\n}\r\nexport const setSetting = (settingId, value) => {\r\n\tglobalSettings.settingsById[settingId].value = value\r\n\tif (settingCallbacks.hasOwnProperty(settingId)) {\r\n\t\tsettingCallbacks[settingId].forEach(callback => callback())\r\n\t}\r\n\tsaveCurrentSettings()\r\n}\r\nexport const getSettingsDiv = () => {\r\n\treturn globalSettings.settingsUi.getSettingsDiv(globalSettings.settings)\r\n}\r\nvar settingCallbacks = {}\r\nexport const setSettingCallback = (settingId, callback) => {\r\n\tif (!settingCallbacks.hasOwnProperty(settingId)) {\r\n\t\tsettingCallbacks[settingId] = []\r\n\t}\r\n\tsettingCallbacks[settingId].push(callback)\r\n}\r\nexport const getSettingObject = () => {\r\n\tlet obj = {}\r\n\tfor (let key in globalSettings.settingsById) {\r\n\t\tobj[key] = globalSettings.settingsById[key].value\r\n\t}\r\n\treturn obj\r\n}\r\n\r\nexport const resetSettingsToDefault = () => {\r\n\tlet defaultSettings = getDefaultSettings()\r\n\tObject.keys(defaultSettings).forEach(tabId =>\r\n\t\tObject.keys(defaultSettings[tabId]).forEach(categoryId =>\r\n\t\t\tdefaultSettings[tabId][categoryId].forEach(setting => {\r\n\t\t\t\tglobalSettings.settingsById[setting.id].value = setting.value\r\n\t\t\t})\r\n\t\t)\r\n\t)\r\n\r\n\tlet parent = globalSettings.settingsUi.getSettingsDiv(globalSettings.settings)\r\n\t\t.parentElement\r\n\tparent.removeChild(\r\n\t\tglobalSettings.settingsUi.getSettingsDiv(globalSettings.settings)\r\n\t)\r\n\tglobalSettings.settingsUi.mainDiv = null\r\n\tparent.appendChild(getSettingsDiv())\r\n}\r\n","import { replaceAllString } from \"../Util.js\"\r\n\r\nexport class DomHelper {\r\n\tstatic createCanvas(width, height, styles) {\r\n\t\treturn DomHelper.createElement(\"canvas\", styles, {\r\n\t\t\twidth: width,\r\n\t\t\theight: height\r\n\t\t})\r\n\t}\r\n\tstatic createSpinner() {\r\n\t\treturn DomHelper.createDivWithIdAndClass(\"loadSpinner\", \"loader\")\r\n\t}\r\n\tstatic setCanvasSize(cnv, width, height) {\r\n\t\tif (cnv.width != width) {\r\n\t\t\tcnv.width = width\r\n\t\t}\r\n\t\tif (cnv.height != height) {\r\n\t\t\tcnv.height = height\r\n\t\t}\r\n\t}\r\n\tstatic replaceGlyph(element, oldIcon, newIcon) {\r\n\t\telement.children.forEach(childNode => {\r\n\t\t\tif (childNode.classList.contains(\"glyphicon-\" + oldIcon)) {\r\n\t\t\t\tchildNode.className = childNode.className.replace(\r\n\t\t\t\t\t\"glyphicon-\" + oldIcon,\r\n\t\t\t\t\t\"glyphicon-\" + newIcon\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\tstatic removeClass(className, element) {\r\n\t\tif (element.classList.contains(className)) {\r\n\t\t\telement.classList.remove(className)\r\n\t\t}\r\n\t}\r\n\tstatic removeClassFromElementsSelector(selector, className) {\r\n\t\tdocument.querySelectorAll(selector).forEach(el => {\r\n\t\t\tif (el.classList.contains(className)) {\r\n\t\t\t\tel.classList.remove(className)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\tstatic createSliderWithLabel(id, label, val, min, max, step, onChange) {\r\n\t\tlet cont = DomHelper.createElement(\r\n\t\t\t\"div\",\r\n\t\t\t{},\r\n\t\t\t{ id: id + \"container\", className: \"sliderContainer\" }\r\n\t\t)\r\n\t\tlet labelDiv = DomHelper.createElement(\r\n\t\t\t\"label\",\r\n\t\t\t{},\r\n\t\t\t{ id: id + \"label\", className: \"sliderLabel\", innerHTML: label }\r\n\t\t)\r\n\t\tlet slider = DomHelper.createSlider(id, val, min, max, step, onChange)\r\n\t\tcont.appendChild(labelDiv)\r\n\t\tcont.appendChild(slider)\r\n\t\treturn { slider: slider, container: cont }\r\n\t}\r\n\tstatic createSliderWithLabelAndField(\r\n\t\tid,\r\n\t\tlabel,\r\n\t\tval,\r\n\t\tmin,\r\n\t\tmax,\r\n\t\tstep,\r\n\t\tonChange\r\n\t) {\r\n\t\tlet displayDiv = DomHelper.createElement(\r\n\t\t\t\"div\",\r\n\t\t\t{},\r\n\t\t\t{ id: id + \"Field\", className: \"sliderVal\", innerHTML: val }\r\n\t\t)\r\n\r\n\t\tlet onChangeInternal = ev => {\r\n\t\t\tdisplayDiv.innerHTML = ev.target.value\r\n\t\t\tonChange(ev.target.value)\r\n\t\t}\r\n\r\n\t\tlet cont = DomHelper.createElement(\r\n\t\t\t\"div\",\r\n\t\t\t{},\r\n\t\t\t{ id: id + \"container\", className: \"sliderContainer\" }\r\n\t\t)\r\n\t\tlet labelDiv = DomHelper.createElement(\r\n\t\t\t\"label\",\r\n\t\t\t{},\r\n\t\t\t{ id: id + \"label\", className: \"sliderLabel\", innerHTML: label }\r\n\t\t)\r\n\t\tlet slider = DomHelper.createSlider(\r\n\t\t\tid,\r\n\t\t\tval,\r\n\t\t\tmin,\r\n\t\t\tmax,\r\n\t\t\tstep,\r\n\t\t\tonChangeInternal\r\n\t\t)\r\n\t\tcont.appendChild(labelDiv)\r\n\t\tcont.appendChild(displayDiv)\r\n\t\tcont.appendChild(slider)\r\n\r\n\t\treturn { slider: slider, container: cont }\r\n\t}\r\n\tstatic createGlyphiconButton(id, glyph, onClick) {\r\n\t\tlet bt = DomHelper.createButton(id, onClick)\r\n\t\tbt.appendChild(this.getGlyphicon(glyph))\r\n\t\treturn bt\r\n\t}\r\n\tstatic createGlyphiconTextButton(id, glyph, text, onClick) {\r\n\t\tlet bt = DomHelper.createButton(id, onClick)\r\n\t\tbt.appendChild(this.getGlyphicon(glyph))\r\n\t\tbt.innerHTML += \" \" + text\r\n\t\treturn bt\r\n\t}\r\n\tstatic createDiv(styles, attributes) {\r\n\t\treturn DomHelper.createElement(\"div\", styles, attributes)\r\n\t}\r\n\tstatic createDivWithId(id, styles, attributes) {\r\n\t\tattributes = attributes || {}\r\n\t\tattributes.id = id\r\n\t\treturn DomHelper.createElement(\"div\", styles, attributes)\r\n\t}\r\n\tstatic createDivWithClass(className, styles, attributes) {\r\n\t\tattributes = attributes || {}\r\n\t\tattributes.className = className\r\n\t\treturn DomHelper.createElement(\"div\", styles, attributes)\r\n\t}\r\n\tstatic createDivWithIdAndClass(id, className, styles, attributes) {\r\n\t\tattributes = attributes || {}\r\n\t\tattributes.id = id\r\n\t\tattributes.className = className\r\n\t\treturn DomHelper.createElement(\"div\", styles, attributes)\r\n\t}\r\n\tstatic createElementWithId(id, tag, styles, attributes) {\r\n\t\tattributes = attributes || {}\r\n\t\tattributes.id = id\r\n\t\treturn DomHelper.createElement(tag, styles, attributes)\r\n\t}\r\n\tstatic createElementWithClass(className, tag, styles, attributes) {\r\n\t\tattributes = attributes || {}\r\n\t\tattributes.className = className\r\n\t\treturn DomHelper.createElement(tag, styles, attributes)\r\n\t}\r\n\tstatic createElementWithIdAndClass(id, className, tag, styles, attributes) {\r\n\t\tstyles = styles || {}\r\n\t\tattributes = attributes || {}\r\n\t\tattributes.id = id\r\n\t\tattributes.className = className\r\n\t\treturn DomHelper.createElement(tag, styles, attributes)\r\n\t}\r\n\tstatic getGlyphicon(name) {\r\n\t\treturn DomHelper.createElement(\r\n\t\t\t\"span\",\r\n\t\t\t{},\r\n\t\t\t{ className: \"glyphicon glyphicon-\" + name }\r\n\t\t)\r\n\t}\r\n\tstatic createSlider(id, val, min, max, step, onChange) {\r\n\t\tlet el = DomHelper.createElement(\r\n\t\t\t\"input\",\r\n\t\t\t{},\r\n\t\t\t{\r\n\t\t\t\tid: id,\r\n\t\t\t\toninput: onChange,\r\n\t\t\t\ttype: \"range\",\r\n\t\t\t\tvalue: val,\r\n\t\t\t\tmin: min,\r\n\t\t\t\tmax: max,\r\n\t\t\t\tstep: step\r\n\t\t\t}\r\n\t\t)\r\n\t\tel.value = val\r\n\t\treturn el\r\n\t}\r\n\tstatic createTextInput(onChange, styles, attributes) {\r\n\t\tattributes = attributes || {}\r\n\t\tattributes.type = \"text\"\r\n\t\tattributes.onchange = onChange\r\n\t\treturn DomHelper.createElement(\"input\", styles, attributes)\r\n\t}\r\n\tstatic createCheckbox(text, onChange, value, isChecked) {\r\n\t\tlet id = replaceAllString(text, \" \", \"\") + \"checkbox\"\r\n\t\tlet cont = DomHelper.createDivWithIdAndClass(id, \"checkboxCont\")\r\n\t\tlet checkbox = DomHelper.createElementWithClass(\"checkboxInput\", \"input\")\r\n\t\tcheckbox.setAttribute(\"type\", \"checkbox\")\r\n\t\tcheckbox.checked = value\r\n\t\tcheckbox.setAttribute(\"name\", id)\r\n\t\tcheckbox.onchange = onChange\r\n\r\n\t\tlet label = DomHelper.createElementWithClass(\r\n\t\t\t\"checkboxlabel\",\r\n\t\t\t\"label\",\r\n\t\t\t{},\r\n\t\t\t{ innerHTML: text, for: id }\r\n\t\t)\r\n\r\n\t\tlabel.setAttribute(\"for\", id)\r\n\r\n\t\tcont.appendChild(checkbox)\r\n\t\tcont.appendChild(label)\r\n\t\tcont.addEventListener(\"click\", ev => {\r\n\t\t\tif (ev.target != checkbox) {\r\n\t\t\t\tcheckbox.click()\r\n\t\t\t\tif (isChecked) {\r\n\t\t\t\t\tcheckbox.checked = isChecked()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn cont\r\n\t}\r\n\tstatic addClassToElements(className, elements) {\r\n\t\telements.forEach(element => DomHelper.addClassToElement(className, element))\r\n\t}\r\n\tstatic addClassToElement(className, element) {\r\n\t\tif (!element.classList.contains(className)) {\r\n\t\t\telement.classList.add(className)\r\n\t\t}\r\n\t}\r\n\tstatic createFlexContainer() {\r\n\t\treturn DomHelper.createElement(\"div\", {}, { className: \"flexContainer\" })\r\n\t}\r\n\tstatic addToFlexContainer(el) {\r\n\t\tlet cont = DomHelper.createFlexContainer()\r\n\t\tcont.appendChild(el)\r\n\t\treturn cont\r\n\t}\r\n\tstatic appendChildren(parent, children) {\r\n\t\tchildren.forEach(child => parent.appendChild(child))\r\n\t}\r\n\tstatic createButtonGroup(vertical) {\r\n\t\treturn vertical\r\n\t\t\t? DomHelper.createElement(\r\n\t\t\t\t\"div\",\r\n\t\t\t\t{ justifyContent: \"space-around\" },\r\n\t\t\t\t{ className: \"btn-group btn-group-vertical\", role: \"group\" }\r\n\t\t\t)\r\n\t\t\t: DomHelper.createElement(\r\n\t\t\t\t\"div\",\r\n\t\t\t\t{ justifyContent: \"space-around\" },\r\n\t\t\t\t{ className: \"btn-group\", role: \"group\" }\r\n\t\t\t)\r\n\t}\r\n\tstatic createFileInput(text, callback) {\r\n\t\tlet customFile = DomHelper.createElement(\r\n\t\t\t\"label\",\r\n\t\t\t{},\r\n\t\t\t{ className: \"btn btn-default btn-file\" }\r\n\t\t)\r\n\t\tcustomFile.appendChild(DomHelper.getGlyphicon(\"folder-open\"))\r\n\t\tcustomFile.innerHTML += \" \" + text\r\n\t\tlet inp = DomHelper.createElement(\r\n\t\t\t\"input\",\r\n\t\t\t{ display: \"none\" },\r\n\t\t\t{ type: \"file\" }\r\n\t\t)\r\n\r\n\t\tcustomFile.appendChild(inp)\r\n\t\tinp.onchange = callback\r\n\r\n\t\treturn customFile\r\n\t}\r\n\tstatic getDivider() {\r\n\t\treturn DomHelper.createElement(\"div\", {}, { className: \"divider\" })\r\n\t}\r\n\tstatic createButton(id, onClick) {\r\n\t\tlet bt = DomHelper.createElement(\r\n\t\t\t\"button\",\r\n\t\t\t{},\r\n\t\t\t{\r\n\t\t\t\tid: id,\r\n\t\t\t\ttype: \"button\",\r\n\t\t\t\tclassName: \"btn btn-default\",\r\n\t\t\t\tonclick: onClick\r\n\t\t\t}\r\n\t\t)\r\n\t\tbt.appendChild(DomHelper.getButtonSelectLine())\r\n\t\treturn bt\r\n\t}\r\n\tstatic createTextButton(id, text, onClick) {\r\n\t\tlet bt = DomHelper.createElement(\r\n\t\t\t\"button\",\r\n\t\t\t{},\r\n\t\t\t{\r\n\t\t\t\tid: id,\r\n\t\t\t\ttype: \"button\",\r\n\t\t\t\tclassName: \"btn btn-default\",\r\n\t\t\t\tonclick: onClick,\r\n\t\t\t\tinnerHTML: text\r\n\t\t\t}\r\n\t\t)\r\n\t\tbt.appendChild(DomHelper.getButtonSelectLine())\r\n\t\treturn bt\r\n\t}\r\n\tstatic getButtonSelectLine() {\r\n\t\treturn DomHelper.createDivWithClass(\"btn-select-line\")\r\n\t}\r\n\tstatic createElement(tag, styles, attributes) {\r\n\t\ttag = tag || \"div\"\r\n\t\tattributes = attributes || {}\r\n\t\tstyles = styles || {}\r\n\t\tlet el = document.createElement(tag)\r\n\t\tObject.keys(attributes).forEach(attr => {\r\n\t\t\tel[attr] = attributes[attr]\r\n\t\t})\r\n\t\tObject.keys(styles).forEach(style => {\r\n\t\t\tel.style[style] = styles[style]\r\n\t\t})\r\n\t\treturn el\r\n\t}\r\n\r\n\tstatic createInputSelect(title, items, callback) {\r\n\t\tlet selectBox = DomHelper.createDivWithId(title)\r\n\t\tlet label = DomHelper.createElementWithClass(\r\n\t\t\t\"inputSelectLabel\",\r\n\t\t\t\"label\",\r\n\t\t\t{},\r\n\t\t\t{ innerHTML: title }\r\n\t\t)\r\n\t\tselectBox.appendChild(label)\r\n\t\tlet selectTag = DomHelper.createElementWithIdAndClass(\r\n\t\t\ttitle,\r\n\t\t\t\"inputSelect\",\r\n\t\t\t\"select\"\r\n\t\t)\r\n\t\tselectBox.appendChild(selectTag)\r\n\t\titems.forEach((item, index) => {\r\n\t\t\tlet option = DomHelper.createElement(\r\n\t\t\t\t\"option\",\r\n\t\t\t\t{},\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue: item,\r\n\t\t\t\t\tinnerHTML: item\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\tselectTag.appendChild(option)\r\n\t\t})\r\n\t\tselectBox.addEventListener(\"change\", ev => {\r\n\t\t\tcallback(selectTag.value)\r\n\t\t})\r\n\t\treturn selectBox\r\n\t}\r\n\r\n\tstatic createColorPickerGlyphiconText(glyph, text, startColor, onChange) {\r\n\t\tlet pickrEl = null\r\n\t\tlet pickrElCont = DomHelper.createDiv()\r\n\t\tlet glyphBut = DomHelper.createGlyphiconTextButton(\r\n\t\t\t\"colorPickerGlyph\" + glyph + replaceAllString(text, \" \", \"_\"),\r\n\t\t\tglyph,\r\n\t\t\ttext,\r\n\t\t\t() => {\r\n\t\t\t\tpickrEl.show()\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\tglyphBut.appendChild(pickrElCont)\r\n\r\n\t\tpickrEl = Pickr.create({\r\n\t\t\tel: pickrElCont,\r\n\t\t\ttheme: \"nano\",\r\n\t\t\tuseAsButton: true,\r\n\t\t\tcomponents: {\r\n\t\t\t\thue: true,\r\n\t\t\t\tpreview: true,\r\n\t\t\t\topacity: true,\r\n\t\t\t\tinteraction: {\r\n\t\t\t\t\tinput: true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tlet getGlyphEl = () =>\r\n\t\t\tglyphBut.querySelector(\r\n\t\t\t\t\"#colorPickerGlyph\" +\r\n\t\t\t\tglyph +\r\n\t\t\t\treplaceAllString(text, \" \", \"_\") +\r\n\t\t\t\t\" .glyphicon\"\r\n\t\t\t)\r\n\r\n\t\tpickrEl.on(\"init\", () => {\r\n\t\t\tpickrEl.setColor(startColor)\r\n\t\t\tgetGlyphEl().style.color = startColor\r\n\t\t})\r\n\t\tpickrEl.on(\"change\", color => {\r\n\t\t\tlet colorString = color.toRGBA().toString()\r\n\t\t\tgetGlyphEl().style.color = colorString\r\n\t\t\tonChange(colorString)\r\n\t\t})\r\n\t\treturn glyphBut\r\n\t}\r\n\t/**\r\n\t *\r\n\t * @param {String} text\r\n\t * @param {String} startColor\r\n\t * @param {Function} onChange  A color string of the newly selected color will be passed as argument\r\n\t */\r\n\tstatic createColorPickerText(text, startColor, onChange) {\r\n\t\tlet cont = DomHelper.createDivWithClass(\"settingContainer\")\r\n\r\n\t\tlet label = DomHelper.createDivWithClass(\r\n\t\t\t\"colorLabel settingLabel\",\r\n\t\t\t{},\r\n\t\t\t{ innerHTML: text }\r\n\t\t)\r\n\r\n\t\tlet colorButtonContainer = DomHelper.createDivWithClass(\r\n\t\t\t\"colorPickerButtonContainer\"\r\n\t\t)\r\n\t\tlet colorButton = DomHelper.createDivWithClass(\"colorPickerButton\")\r\n\t\tcolorButtonContainer.appendChild(colorButton)\r\n\r\n\t\tcont.appendChild(label)\r\n\t\tcont.appendChild(colorButtonContainer)\r\n\r\n\t\tlet colorPicker = Pickr.create({\r\n\t\t\tel: colorButton,\r\n\t\t\ttheme: \"nano\",\r\n\t\t\tdefaultRepresentation: \"RGBA\",\r\n\t\t\tcomponents: {\r\n\t\t\t\thue: true,\r\n\t\t\t\tpreview: true,\r\n\t\t\t\topacity: true,\r\n\t\t\t\tinteraction: {\r\n\t\t\t\t\tinput: true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\tcolorButtonContainer.style.backgroundColor = startColor\r\n\t\tcont.onclick = () => colorPicker.show()\r\n\t\tcolorPicker.on(\"init\", () => {\r\n\t\t\tcolorPicker.show()\r\n\t\t\tcolorPicker.setColor(startColor)\r\n\t\t\tcolorPicker.hide()\r\n\t\t})\r\n\t\tcolorPicker.on(\"change\", color => {\r\n\t\t\tcolorButtonContainer.style.backgroundColor = colorPicker\r\n\t\t\t\t.getColor()\r\n\t\t\t\t.toRGBA()\r\n\t\t\t\t.toString()\r\n\t\t\tonChange(color.toRGBA().toString())\r\n\t\t})\r\n\r\n\t\treturn cont\r\n\t}\r\n\r\n\tstatic removeClassFromElement(className, element) {\r\n\t\tif (element.classList.contains(className)) {\r\n\t\t\telement.classList.remove(className);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","export class ElementHighlight {\r\n\tconstructor(element, time) {\r\n\t\ttime = time || 1500\r\n\r\n\t\telement.classList.add(\"highlighted\")\r\n\t\twindow.setTimeout(() => {\r\n\t\t\telement.classList.remove(\"highlighted\")\r\n\t\t}, time)\r\n\t}\r\n}\r\n","import { DomHelper } from \"./DomHelper.js\"\r\nclass Loader {\r\n\tstartLoad() {\r\n\t\tthis.getLoadingDiv().style.display = \"block\"\r\n\t\tthis.getLoadingText().innerHTML = \"Loading\"\r\n\t\tthis.loading = true\r\n\t\tthis.loadAnimation()\r\n\t}\r\n\tstopLoad() {\r\n\t\tthis.getLoadingDiv().style.display = \"none\"\r\n\t\tthis.loading = false\r\n\t}\r\n\tloadAnimation() {\r\n\t\tlet currentText = this.getLoadingText().innerHTML\r\n\t\tcurrentText = currentText.replace(\"...\", \" ..\")\r\n\t\tcurrentText = currentText.replace(\" ..\", \". .\")\r\n\t\tcurrentText = currentText.replace(\". .\", \".. \")\r\n\t\tcurrentText = currentText.replace(\".. \", \"...\")\r\n\t\tthis.getLoadingText().innerHTML = currentText\r\n\t\tif (this.loading) {\r\n\t\t\twindow.requestAnimationFrame(this.loadAnimation.bind(this))\r\n\t\t}\r\n\t}\r\n\tsetLoadMessage(msg) {\r\n\t\tthis.getLoadingText().innerHTML = msg + \"...\"\r\n\t}\r\n\tgetLoadingText() {\r\n\t\tif (!this.loadingText) {\r\n\t\t\tthis.loadingText = DomHelper.createElement(\"p\")\r\n\t\t\tthis.getLoadingDiv().appendChild(this.loadingText)\r\n\t\t}\r\n\t\treturn this.loadingText\r\n\t}\r\n\tgetLoadingDiv() {\r\n\t\tif (!this.loadingDiv) {\r\n\t\t\tthis.loadingDiv = DomHelper.createDivWithIdAndClass(\r\n\t\t\t\t\"loadingDiv\",\r\n\t\t\t\t\"fullscreen\"\r\n\t\t\t)\r\n\r\n\t\t\tlet spinner = DomHelper.createSpinner()\r\n\t\t\tthis.loadingDiv.appendChild(spinner)\r\n\t\t\tdocument.body.appendChild(this.loadingDiv)\r\n\t\t}\r\n\t\treturn this.loadingDiv\r\n\t}\r\n}\r\n\r\nexport const getLoader = () => loaderSingleton\r\nconst loaderSingleton = new Loader()\r\n","import { DomHelper } from \"./DomHelper.js\"\r\n\r\nexport class Notification {\r\n\tstatic create(message, time) {\r\n\t\ttime = time || 1500\r\n\t\tlet notifEl = DomHelper.createDivWithClass(\"notification\")\r\n\t\tnotifEl.innerHTML = message\r\n\t\tdocument.body.appendChild(notifEl)\r\n\t\twindow.setTimeout(() => document.body.removeChild(notifEl), time)\r\n\t}\r\n}\r\n","import { resetSettingsToDefault } from \"../settings/Settings.js\"\r\nimport { DomHelper } from \"../ui/DomHelper.js\"\r\nimport { groupArrayBy } from \"../Util.js\"\r\n/**\r\n * Class to create the DOM Elements used to manipulate the settings.\r\n */\r\nexport class SettingUI {\r\n\tconstructor() {\r\n\t\tthis.tabs = {}\r\n\t\tthis.activeTab = \"General\"\r\n\t\tthis.mainDiv = null\r\n\t}\r\n\t/**\r\n\t * returns a div with the following structure:\r\n\t * \t.settingsContainer {\r\n\t * \t\t.settingsTabButtonContainer {\r\n\t * \t\t\t.settingsTabButton ...\r\n\t * \t\t}\r\n\t * \t\t.settingsContentContainer {\r\n\t * \t\t\t.settingContainer ...\r\n\t * \t\t}\r\n\t * }\r\n\t *\r\n\t * @param {Object} settings  as defined in DefaultSettings.js\r\n\t */\r\n\tgetSettingsDiv(settings) {\r\n\t\tif (this.mainDiv == null) {\r\n\t\t\tthis.mainDiv = DomHelper.createDivWithClass(\"settingsContainer\")\r\n\t\t\tthis.mainDiv.appendChild(this.getTabDiv(Object.keys(settings)))\r\n\t\t\tthis.mainDiv.appendChild(this.getContentDiv(settings))\r\n\r\n\t\t\tthis.mainDiv\r\n\t\t\t\t.querySelectorAll(\".settingsTabContent\" + this.activeTab)\r\n\t\t\t\t.forEach(el => (el.style.display = \"block\"))\r\n\t\t\tthis.mainDiv\r\n\t\t\t\t.querySelector(\"#\" + this.activeTab + \"Tab\")\r\n\t\t\t\t.classList.add(\"selected\")\r\n\t\t}\r\n\t\treturn this.mainDiv\r\n\t}\r\n\tgetTabDiv(tabIds) {\r\n\t\tlet cont = DomHelper.createDivWithClass(\"settingsTabButtonContainer\")\r\n\t\ttabIds.forEach(tabId => {\r\n\t\t\tlet tabButton = this.createTabButton(tabId)\r\n\t\t\ttabButton.classList.add(\"settingsTabButton\")\r\n\t\t\tcont.appendChild(tabButton)\r\n\t\t})\r\n\t\treturn cont\r\n\t}\r\n\tcreateTabButton(tabName) {\r\n\t\tlet butEl = DomHelper.createTextButton(tabName + \"Tab\", tabName, ev => {\r\n\t\t\tdocument\r\n\t\t\t\t.querySelectorAll(\".settingsTabButton\")\r\n\t\t\t\t.forEach(el => el.classList.remove(\"selected\"))\r\n\r\n\t\t\tbutEl.classList.add(\"selected\")\r\n\r\n\t\t\tdocument\r\n\t\t\t\t.querySelectorAll(\".settingsTabContentContainer\")\r\n\t\t\t\t.forEach(settingEl => (settingEl.style.display = \"none\"))\r\n\t\t\tdocument\r\n\t\t\t\t.querySelectorAll(\".settingsTabContent\" + tabName)\r\n\t\t\t\t.forEach(settingEl => (settingEl.style.display = \"block\"))\r\n\t\t})\r\n\t\treturn butEl\r\n\t}\r\n\tgetContentDiv(settings) {\r\n\t\tlet cont = DomHelper.createDivWithClass(\"settingsContentContainer\")\r\n\t\tObject.keys(settings).forEach(tabId => {\r\n\t\t\tcont.appendChild(this.createSettingTabContentDiv(tabId, settings[tabId]))\r\n\t\t})\r\n\r\n\t\treturn cont\r\n\t}\r\n\tcreateSettingTabContentDiv(tabName, settingGroups) {\r\n\t\tlet cont = DomHelper.createDivWithClass(\r\n\t\t\t\"settingsTabContentContainer settingsTabContent\" + tabName\r\n\t\t)\r\n\t\tObject.keys(settingGroups).forEach(groupId => {\r\n\t\t\tcont.appendChild(\r\n\t\t\t\tthis.createSettingGroupDiv(groupId, settingGroups[groupId])\r\n\t\t\t)\r\n\t\t})\r\n\t\tif (tabName == \"General\") {\r\n\t\t\tcont.appendChild(this.getResetButton())\r\n\t\t}\r\n\t\treturn cont\r\n\t}\r\n\tgetResetButton() {\r\n\t\tlet but = DomHelper.createTextButton(\r\n\t\t\t\"settingsResetButton\",\r\n\t\t\t\"Reset to defaults\",\r\n\t\t\t() => {\r\n\t\t\t\tresetSettingsToDefault()\r\n\t\t\t}\r\n\t\t)\r\n\t\treturn but\r\n\t}\r\n\tcreateSettingGroupDiv(categoryName, settingsList) {\r\n\t\tlet cont = DomHelper.createDivWithClass(\r\n\t\t\t\"settingsGroupContainer innerMenuContDiv\"\r\n\t\t)\r\n\t\tif (categoryName != \"default\") {\r\n\t\t\tcont.classList.add(\"collapsed\")\r\n\t\t\tlet label = DomHelper.createElementWithClass(\r\n\t\t\t\t\"settingsGroupLabel clickableTitle\",\r\n\t\t\t\t\"div\",\r\n\t\t\t\t{},\r\n\t\t\t\t{ innerHTML: categoryName + \": \" }\r\n\t\t\t)\r\n\t\t\tcont.appendChild(label)\r\n\r\n\t\t\tlet collapsed = true\r\n\t\t\tlet glyph = DomHelper.getGlyphicon(\"plus\")\r\n\t\t\tglyph.classList.add(\"collapserGlyphSpan\")\r\n\t\t\tlabel.appendChild(glyph)\r\n\r\n\t\t\tlabel.onclick = () => {\r\n\t\t\t\tif (collapsed == true) {\r\n\t\t\t\t\tcollapsed = false\r\n\t\t\t\t\tcont.classList.remove(\"collapsed\")\r\n\t\t\t\t\tDomHelper.replaceGlyph(label, \"plus\", \"minus\")\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcollapsed = true\r\n\t\t\t\t\tcont.classList.add(\"collapsed\")\r\n\t\t\t\t\tDomHelper.replaceGlyph(label, \"minus\", \"plus\")\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsettingsList.forEach(setting =>\r\n\t\t\tcont.appendChild(SettingUI.createSettingDiv(setting))\r\n\t\t)\r\n\t\treturn cont\r\n\t}\r\n\tstatic createSettingDiv(setting) {\r\n\t\tswitch (setting.type) {\r\n\t\t\tcase \"list\":\r\n\t\t\t\treturn SettingUI.createListSettingDiv(setting)\r\n\t\t\tcase \"checkbox\":\r\n\t\t\t\treturn SettingUI.createCheckboxSettingDiv(setting)\r\n\t\t\tcase \"slider\":\r\n\t\t\t\treturn SettingUI.createSliderSettingDiv(setting)\r\n\t\t\tcase \"color\":\r\n\t\t\t\treturn SettingUI.createColorSettingDiv(setting)\r\n\t\t}\r\n\t}\r\n\tstatic createListSettingDiv(setting) {\r\n\t\tlet el = DomHelper.createInputSelect(\r\n\t\t\tsetting.label,\r\n\t\t\tsetting.list,\r\n\t\t\tsetting.onChange\r\n\t\t)\r\n\t\tel.classList.add(\"settingContainer\")\r\n\t\treturn el\r\n\t}\r\n\tstatic createCheckboxSettingDiv(setting) {\r\n\t\tlet el = DomHelper.createCheckbox(\r\n\t\t\tsetting.label,\r\n\t\t\tsetting.onChange,\r\n\t\t\tsetting.value,\r\n\t\t\tsetting.isChecked\r\n\t\t)\r\n\t\tel.classList.add(\"settingContainer\")\r\n\t\treturn el\r\n\t}\r\n\tstatic createSliderSettingDiv(setting) {\r\n\t\tlet el = DomHelper.createSliderWithLabelAndField(\r\n\t\t\tsetting.id + \"Slider\",\r\n\t\t\tsetting.label,\r\n\t\t\tparseFloat(setting.value),\r\n\t\t\tsetting.min,\r\n\t\t\tsetting.max,\r\n\t\t\tsetting.step,\r\n\t\t\tsetting.onChange\r\n\t\t).container\r\n\t\tel.classList.add(\"settingContainer\")\r\n\t\treturn el\r\n\t}\r\n\tstatic createColorSettingDiv(setting) {\r\n\t\treturn DomHelper.createColorPickerText(\r\n\t\t\tsetting.label,\r\n\t\t\tsetting.value,\r\n\t\t\tsetting.onChange\r\n\t\t)\r\n\t}\r\n}\r\n","import { FileLoader } from \"../player/FileLoader.js\"\r\nimport { getCurrentSong, getPlayer } from \"../player/Player.js\"\r\nimport { replaceAllString } from \"../Util.js\"\r\nimport { DomHelper } from \"./DomHelper.js\"\r\nimport { getLoader } from \"./Loader.js\"\r\n\r\nexport class SongUI {\r\n\tconstructor() {\r\n\t\tthis.songDivs = {}\r\n\t\tthis.wrapper = DomHelper.createDiv()\r\n\t}\r\n\tgetDivContent() {\r\n\t\treturn this.wrapper\r\n\t}\r\n\tsetExampleSongs(jsonSongs) {\r\n\t\tjsonSongs.forEach(exampleSongJson => {\r\n\t\t\tlet songDivObj = createUnloadedSongDiv(exampleSongJson)\r\n\t\t\tthis.songDivs[exampleSongJson.fileName] = songDivObj\r\n\t\t\tthis.wrapper.appendChild(songDivObj.wrapper)\r\n\t\t})\r\n\t}\r\n\tnewSongCallback(song) {\r\n\t\tif (!this.songDivs.hasOwnProperty(song.fileName)) {\r\n\t\t\tlet songDivObj = createLoadedSongDiv(song)\r\n\t\t\tthis.songDivs[song.fileName] = songDivObj\r\n\t\t\tthis.wrapper.appendChild(songDivObj.wrapper)\r\n\t\t} else {\r\n\t\t\tthis.replaceNowLoadedSongDiv(song)\r\n\t\t}\r\n\t\tDomHelper.removeClassFromElementsSelector(\".songButton\", \"selected\")\r\n\t\tDomHelper.addClassToElement(\"selected\", song.div)\r\n\t}\r\n\treplaceNowLoadedSongDiv(song) {\r\n\t\tsong.div = this.songDivs[song.fileName].button\r\n\t\tsong.div.onclick = () => loadedButtonClickCallback(song)\r\n\t}\r\n}\r\nfunction createUnloadedSongDiv(songJson) {\r\n\tlet wrapper = DomHelper.createDivWithIdAndClass(\r\n\t\t\"songWrap\" + replaceAllString(songJson.fileName, \" \", \"_\"),\r\n\t\t\"innerMenuContDiv\"\r\n\t)\r\n\tlet button = createUnloadedSongButton(songJson)\r\n\r\n\twrapper.appendChild(button)\r\n\r\n\treturn {\r\n\t\twrapper: wrapper,\r\n\t\tname: songJson.name,\r\n\t\tbutton: button\r\n\t}\r\n}\r\n\r\nfunction createLoadedSongDiv(song) {\r\n\tlet wrapper = DomHelper.createDivWithIdAndClass(\r\n\t\t\"songWrap\" + replaceAllString(song.fileName, \" \", \"_\"),\r\n\t\t\"innerMenuContDiv\"\r\n\t)\r\n\tlet button = createLoadedSongButton(song)\r\n\tsong.div = button\r\n\twrapper.appendChild(song.div)\r\n\r\n\treturn {\r\n\t\twrapper: wrapper,\r\n\t\tname: song.name,\r\n\t\tbutton: button\r\n\t}\r\n}\r\nfunction createUnloadedSongButton(songJson) {\r\n\tlet but = DomHelper.createTextButton(\r\n\t\t\"song\" + replaceAllString(songJson.fileName, \" \", \"_\"),\r\n\t\tsongJson.name,\r\n\t\t() => {\r\n\t\t\tgetLoader().setLoadMessage(\"Downloading Song\")\r\n\t\t\tFileLoader.loadSongFromURL(songJson.url, respone => {\r\n\t\t\t\tgetPlayer().loadSong(respone, songJson.fileName, songJson.name)\r\n\t\t\t})\r\n\t\t}\r\n\t)\r\n\tbut.classList.add(\"songButton\")\r\n\treturn but\r\n}\r\nfunction createLoadedSongButton(song) {\r\n\tlet but = DomHelper.createTextButton(\r\n\t\t\"song\" + replaceAllString(song.fileName, \" \", \"_\"),\r\n\t\tsong.name,\r\n\t\t() => loadedButtonClickCallback(song)\r\n\t)\r\n\tbut.classList.add(\"songButton\")\r\n\treturn but\r\n}\r\n\r\nfunction loadedButtonClickCallback(song) {\r\n\tlet currentSong = getCurrentSong()\r\n\tif (currentSong != song) {\r\n\t\tDomHelper.removeClassFromElementsSelector(\".songButton\", \"selected\")\r\n\t\tDomHelper.addClassToElement(\"selected\", song.div)\r\n\t\tgetPlayer().setSong(song)\r\n\t}\r\n}\r\n","import { DomHelper } from \"./DomHelper.js\"\r\nimport {\r\n\tgetTrack,\r\n\tgetTrackColor,\r\n\tgetTracks,\r\n\tsetTrackColor\r\n} from \"../player/Tracks.js\"\r\nimport { getPlayer } from \"../player/Player.js\"\r\nimport { SettingUI } from \"./SettingUI.js\"\r\nimport { ElementHighlight } from \"./ElementHighlight.js\"\r\nimport { Notification } from \"./Notification.js\"\r\nimport { getMidiHandler } from \"../MidiInputHandler.js\"\r\n\r\n/**\r\n *  Handles creation of the Track-Divs that give control over volume, diplay, color...\r\n *\r\n *  Directly changes values in the track objects\r\n */\r\n\r\nexport const createTrackDivs = () => {\r\n\treturn Object.keys(getTracks()).map(trackId => createTrackDiv(trackId))\r\n}\r\n\r\nexport const createTrackDiv = trackId => {\r\n\tconst trackObj = getTrack(trackId)\r\n\tlet volumeSlider,\r\n\t\tmuteButton,\r\n\t\thideButton,\r\n\t\ttrackName,\r\n\t\tinstrumentName,\r\n\t\trequireToPlayAlongButton,\r\n\t\tclickableTitleDiv\r\n\r\n\tlet trackDiv = DomHelper.createDivWithIdAndClass(\r\n\t\t\"trackDiv\" + trackId,\r\n\t\t\"innerMenuContDiv settingGroupContainer\",\r\n\t\t{\r\n\t\t\tborderLeft: \"5px solid \" + getTrackColor(trackId).white\r\n\t\t}\r\n\t)\r\n\r\n\tclickableTitleDiv = DomHelper.createDivWithClass(\"clickableTitle\")\r\n\tlet collapsed = instrumentName == \"percussion\" ? true : false\r\n\r\n\tlet glyph = DomHelper.getGlyphicon(collapsed ? \"plus\" : \"minus\")\r\n\tglyph.classList.add(\"collapserGlyphSpan\")\r\n\tclickableTitleDiv.appendChild(glyph)\r\n\r\n\tif (collapsed) {\r\n\t\ttrackDiv.classList.add(\"collapsed\")\r\n\t}\r\n\tclickableTitleDiv.onclick = () => {\r\n\t\tif (collapsed) {\r\n\t\t\tcollapsed = false\r\n\t\t\ttrackDiv.classList.remove(\"collapsed\")\r\n\t\t\tDomHelper.replaceGlyph(clickableTitleDiv, \"plus\", \"minus\")\r\n\t\t} else {\r\n\t\t\tcollapsed = true\r\n\t\t\ttrackDiv.classList.add(\"collapsed\")\r\n\t\t\tDomHelper.replaceGlyph(clickableTitleDiv, \"minus\", \"plus\")\r\n\t\t}\r\n\t}\r\n\r\n\t//Name\r\n\ttrackName = DomHelper.createDivWithIdAndClass(\r\n\t\t\"trackName\" + trackId,\r\n\t\t\"trackName\"\r\n\t)\r\n\ttrackName.innerHTML = trackObj.name || \"Track \" + trackId\r\n\r\n\t//Instrument\r\n\tlet currentInstrument = getPlayer().getCurrentTrackInstrument(trackObj.index)\r\n\tinstrumentName = DomHelper.createDivWithIdAndClass(\r\n\t\t\"instrumentName\" + trackObj.index,\r\n\t\t\"instrumentName\"\r\n\t)\r\n\tinstrumentName.innerHTML = currentInstrument\r\n\r\n\twindow.setInterval(\r\n\t\t() =>\r\n\t\t\t(instrumentName.innerHTML = getPlayer().getCurrentTrackInstrument(\r\n\t\t\t\ttrackObj.index\r\n\t\t\t)),\r\n\t\t2000\r\n\t)\r\n\r\n\tlet btnGrp = DomHelper.createButtonGroup(false)\r\n\r\n\t//Track Volume\r\n\tvolumeSlider = SettingUI.createSettingDiv({\r\n\t\ttype: \"slider\",\r\n\t\tlabel: \"Volume \",\r\n\t\tvalue: trackObj.volume,\r\n\t\tmin: 0,\r\n\t\tmax: 200,\r\n\t\tstep: 1,\r\n\t\tonChange: value => {\r\n\t\t\tif (trackObj.volume == 0 && value != 0) {\r\n\t\t\t\tmuteButton.querySelector(\"input\").checked = false\r\n\t\t\t} else if (trackObj.volume != 0 && value == 0) {\r\n\t\t\t\tmuteButton.querySelector(\"input\").checked = true\r\n\t\t\t}\r\n\t\t\ttrackObj.volume = parseInt(value)\r\n\t\t}\r\n\t})\r\n\t// DomHelper.createSliderWithLabel(\r\n\t// \t\"volume\" + trackId,\r\n\t// \t\"Volume\",\r\n\t// \ttrackObj.volume,\r\n\t// \t0,\r\n\t// \t200,\r\n\t// \t1,\r\n\t// \tev => {\r\n\t// \t\ttrackObj.volume = parseInt(ev.target.value)\r\n\t// \t}\r\n\t// )\r\n\r\n\t//Hide Track\r\n\thideButton = SettingUI.createSettingDiv({\r\n\t\ttype: \"checkbox\",\r\n\t\tlabel: \"Show track\",\r\n\t\tvalue: trackObj.draw,\r\n\t\tonChange: () => {\r\n\t\t\tif (trackObj.draw) {\r\n\t\t\t\ttrackObj.draw = false\r\n\t\t\t} else {\r\n\t\t\t\ttrackObj.draw = true\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\r\n\t//Mute Track\r\n\tmuteButton = SettingUI.createSettingDiv({\r\n\t\ttype: \"checkbox\",\r\n\t\tlabel: \"Mute track\",\r\n\t\tvalue: trackObj.volume == 0,\r\n\t\tonChange: () => {\r\n\t\t\tlet volumeSliderInput = volumeSlider.querySelector(\"input\")\r\n\t\t\tlet volumeSliderLabel = volumeSlider.querySelector(\".sliderVal\")\r\n\t\t\tif (trackObj.volume == 0) {\r\n\t\t\t\tlet volume = trackObj.volumeAtMute || 100\r\n\t\t\t\ttrackObj.volume = volume\r\n\t\t\t\tvolumeSliderInput.value = volume\r\n\t\t\t\ttrackObj.volumeAtMute = 0\r\n\t\t\t\tvolumeSliderLabel.innerHTML = volume\r\n\t\t\t} else {\r\n\t\t\t\ttrackObj.volumeAtMute = trackObj.volume\r\n\t\t\t\ttrackObj.volume = 0\r\n\t\t\t\tvolumeSliderInput.value = 0\r\n\t\t\t\tvolumeSliderLabel.innerHTML = 0\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\r\n\t//Require Track to play along\r\n\trequireToPlayAlongButton = SettingUI.createSettingDiv({\r\n\t\ttype: \"checkbox\",\r\n\t\tlabel: \"Require playalong\",\r\n\t\tvalue: trackObj.requiredToPlay,\r\n\t\tisChecked: () => trackObj.requiredToPlay,\r\n\t\tonChange: () => {\r\n\t\t\tconsole.log(trackObj.requiredToPlay)\r\n\t\t\tif (!trackObj.requiredToPlay) {\r\n\t\t\t\tif (!getMidiHandler().isInputActive()) {\r\n\t\t\t\t\tNotification.create(\r\n\t\t\t\t\t\t\"You have to choose a Midi Input Device to play along.\",\r\n\t\t\t\t\t\t5000\r\n\t\t\t\t\t)\r\n\t\t\t\t\tnew ElementHighlight(document.querySelector(\"#midiInput\"))\r\n\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\ttrackObj.requiredToPlay = true\r\n\t\t\t} else {\r\n\t\t\t\ttrackObj.requiredToPlay = false\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\r\n\tlet colorPickerWhite = SettingUI.createColorSettingDiv({\r\n\t\ttype: \"color\",\r\n\t\tlabel: \"White note color\",\r\n\t\tvalue: getTrackColor(trackId).white,\r\n\t\tonChange: colorString => {\r\n\t\t\ttrackDiv.style.borderLeft = \"5px solid \" + colorString\r\n\t\t\tsetTrackColor(trackId, \"white\", colorString)\r\n\t\t}\r\n\t})\r\n\tlet colorPickerBlack = SettingUI.createColorSettingDiv({\r\n\t\ttype: \"color\",\r\n\t\tlabel: \"Black note color\",\r\n\t\tvalue: getTrackColor(trackId).black,\r\n\t\tonChange: colorString => setTrackColor(trackId, \"black\", colorString)\r\n\t})\r\n\r\n\tDomHelper.appendChildren(btnGrp, [\r\n\t\thideButton,\r\n\t\tmuteButton,\r\n\t\tDomHelper.getDivider(),\r\n\t\trequireToPlayAlongButton,\r\n\t\tDomHelper.getDivider(),\r\n\t\tcolorPickerWhite,\r\n\t\tcolorPickerBlack\r\n\t])\r\n\r\n\tDomHelper.appendChildren(clickableTitleDiv, [trackName, instrumentName])\r\n\tDomHelper.appendChildren(trackDiv, [\r\n\t\tclickableTitleDiv,\r\n\t\tDomHelper.getDivider(),\r\n\t\tvolumeSlider,\r\n\t\tbtnGrp\r\n\t])\r\n\r\n\treturn trackDiv\r\n}\r\n","import { DomHelper } from \"./DomHelper.js\"\r\nimport { getSettingsDiv } from \"../settings/Settings.js\"\r\nimport { ZoomUI } from \"./ZoomUI.js\"\r\nimport { createTrackDivs } from \"./TrackUI.js\"\r\nimport { getCurrentSong, getPlayer, getSongFilename } from \"../player/Player.js\"\r\nimport { SongUI } from \"./SongUI.js\"\r\nimport { getMidiHandler } from \"../MidiInputHandler.js\"\r\nimport MidiRecorder from \"../recording/midi-recorder.js\"\r\n\r\n/**\r\n * Contains all initiation, appending and manipulation of DOM-elements.\r\n * Callback-bindings for some events are created in  the constructor\r\n */\r\nexport class UI {\r\n\tconstructor(render, isMobile) {\r\n\t\tthis.isMobile = window.matchMedia(\r\n\t\t\t\"only screen and (max-width: 1600px)\"\r\n\t\t).matches\r\n\r\n\t\tthis.timerInterval = null;\r\n\r\n\t\tthis.midiRecorder = new MidiRecorder()\r\n\r\n\t\tthis.songUI = new SongUI()\r\n\t\t//add callbacks to the player\r\n\t\tgetPlayer().newSongCallbacks.push(this.newSongCallback.bind(this))\r\n\r\n\t\tdocument.body.addEventListener(\"mousemove\", this.mouseMoved.bind(this))\r\n\r\n\t\tthis.createControlMenu()\r\n\t\tlet hasActiveInput = false;\r\n\r\n\t\tthis.menuHeight = 200\r\n\r\n\t\tdocument\r\n\t\t\t.querySelectorAll(\".innerMenuDiv\")\r\n\t\t\t.forEach(\r\n\t\t\t\tel =>\r\n\t\t\t\t(el.style.height =\r\n\t\t\t\t\t\"calc(100% - \" + (this.getNavBar().clientHeight + 24) + \"px)\")\r\n\t\t\t)\r\n\r\n\t\tdocument.body.appendChild(new ZoomUI().getContentDiv(render))\r\n\t}\r\n\r\n\tsetExampleSongs(exampleSongsJson) {\r\n\t\tthis.songUI.setExampleSongs(exampleSongsJson)\r\n\t}\r\n\r\n\tfireInitialListeners() {\r\n\t\tthis.onMenuHeightChange(this.getNavBar().clientHeight)\r\n\t\twindow.setTimeout(\r\n\t\t\t() => this.onMenuHeightChange(this.getNavBar().clientHeight),\r\n\t\t\t500\r\n\t\t)\r\n\t}\r\n\r\n\tmouseMoved() {\r\n\t\tthis.getMinimizeButton().style.opacity = 1\r\n\t\tif (!this.fadingOutMinimizeButton) {\r\n\t\t\tthis.fadingOutMinimizeButton = true\r\n\t\t\twindow.setTimeout(() => {\r\n\t\t\t\tthis.getMinimizeButton().style.opacity = 0\r\n\t\t\t\tthis.fadingOutMinimizeButton = false\r\n\t\t\t}, 1000)\r\n\t\t}\r\n\t}\r\n\tcreateControlMenu() {\r\n\t\tlet topGroupsContainer = DomHelper.createDivWithClass(\"container\")\r\n\r\n\t\tlet fileGrp = this.getFileButtonGroup()\r\n\t\tlet songSpeedGrp = this.getSpeedButtonGroup()\r\n\t\tlet songControlGrp = this.getSongControlButtonGroup()\r\n\t\tlet generteMelodyGrp = this.getGenerateMelodyButton()\r\n\t\tlet volumeGrp = this.getVolumneButtonGroup()\r\n\t\tlet settingsGrpRight = this.getSettingsButtonGroup()\r\n\t\tlet trackGrp = this.getTracksButtonGroup()\r\n\r\n\t\tDomHelper.addClassToElements(\"align-middle\", [\r\n\t\t\tfileGrp,\r\n\t\t\tsongSpeedGrp,\r\n\t\t\tsongControlGrp,\r\n\t\t\tvolumeGrp,\r\n\t\t\ttrackGrp\r\n\t\t])\r\n\r\n\t\tlet leftTop = DomHelper.createElementWithClass(\"topContainer\")\r\n\t\tlet middleTop = DomHelper.createElementWithClass(\"topContainer\")\r\n\t\tlet rightTop = DomHelper.createElementWithClass(\"topContainer\")\r\n\r\n\t\tDomHelper.appendChildren(leftTop, [fileGrp, trackGrp])\r\n\t\tDomHelper.appendChildren(middleTop, [songControlGrp, generteMelodyGrp])\r\n\t\tDomHelper.appendChildren(rightTop, [\r\n\t\t\tsongSpeedGrp,\r\n\t\t\tvolumeGrp,\r\n\t\t\tsettingsGrpRight\r\n\t\t])\r\n\r\n\t\tDomHelper.appendChildren(topGroupsContainer, [leftTop, middleTop, rightTop])\r\n\t\tthis.getNavBar().appendChild(topGroupsContainer)\r\n\r\n\t\tlet minimizeButton = this.getMinimizeButton()\r\n\r\n\t\tlet innerMenuDivsContainer = DomHelper.createElementWithClass(\r\n\t\t\t\"innerMenuDivsContainer\"\r\n\t\t)\r\n\t\tDomHelper.appendChildren(innerMenuDivsContainer, [\r\n\t\t\tthis.getTrackMenuDiv(),\r\n\t\t\tthis.getLoadedSongsDiv(),\r\n\t\t\tthis.getSettingsDiv()\r\n\t\t])\r\n\r\n\t\tdocument.body.appendChild(minimizeButton)\r\n\t\tdocument.body.appendChild(this.getNavBar())\r\n\t\tdocument.body.appendChild(innerMenuDivsContainer)\r\n\r\n\t\tthis.createFileDragArea()\r\n\t}\r\n\r\n\tgetMinimizeButton() {\r\n\t\tif (!this.minimizeButton) {\r\n\t\t\tthis.minimizeButton = DomHelper.createGlyphiconButton(\r\n\t\t\t\t\"minimizeMenu\",\r\n\t\t\t\t\"chevron-up\",\r\n\t\t\t\t() => {\r\n\t\t\t\t\tif (!this.navMinimized) {\r\n\t\t\t\t\t\tthis.getNavBar().style.marginTop =\r\n\t\t\t\t\t\t\t\"-\" + this.getNavBar().clientHeight + \"px\"\r\n\t\t\t\t\t\tthis.navMinimized = true\r\n\t\t\t\t\t\tthis.minimizeButton\r\n\t\t\t\t\t\t\t.querySelector(\"span\")\r\n\t\t\t\t\t\t\t.classList.remove(\"glyphicon-chevron-up\")\r\n\t\t\t\t\t\tthis.minimizeButton\r\n\t\t\t\t\t\t\t.querySelector(\"span\")\r\n\t\t\t\t\t\t\t.classList.add(\"glyphicon-chevron-down\")\r\n\t\t\t\t\t\tthis.onMenuHeightChange(0)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.getNavBar().style.marginTop = \"0px\"\r\n\t\t\t\t\t\tthis.navMinimized = false\r\n\r\n\t\t\t\t\t\tthis.minimizeButton\r\n\t\t\t\t\t\t\t.querySelector(\"span\")\r\n\t\t\t\t\t\t\t.classList.add(\"glyphicon-chevron-up\")\r\n\t\t\t\t\t\tthis.minimizeButton\r\n\t\t\t\t\t\t\t.querySelector(\"span\")\r\n\t\t\t\t\t\t\t.classList.remove(\"glyphicon-chevron-down\")\r\n\t\t\t\t\t\tthis.onMenuHeightChange(this.getNavBar().clientHeight)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\tthis.minimizeButton.style.padding = \"0px\"\r\n\t\t\tthis.minimizeButton.style.fontSize = \"0.5em\"\r\n\t\t}\r\n\t\tlet navbarHeight = this.navMinimized ? 0 : this.getNavBar().clientHeight\r\n\t\tthis.minimizeButton.style.top = navbarHeight + 23 + \"px\"\r\n\t\treturn this.minimizeButton\r\n\t}\r\n\r\n\tgetSettingsButtonGroup() {\r\n\t\tlet settingsGrpRight = DomHelper.createButtonGroup(true)\r\n\t\tDomHelper.appendChildren(settingsGrpRight, [\r\n\t\t\tthis.getFullscreenButton(),\r\n\t\t\tthis.getSettingsButton()\r\n\t\t])\r\n\t\treturn settingsGrpRight\r\n\t}\r\n\tsetOnMenuHeightChange(func) {\r\n\t\tthis.onMenuHeightChange = func\r\n\t}\r\n\r\n\tgetTracksButtonGroup() {\r\n\t\tlet trackGrp = DomHelper.createButtonGroup(true)\r\n\t\tDomHelper.appendChildren(trackGrp, [\r\n\t\t\tthis.getTracksButton(),\r\n\t\t\tthis.getMidiSetupButton()\r\n\t\t\t// this.getChannelsButton()\r\n\t\t])\r\n\t\treturn trackGrp\r\n\t}\r\n\r\n\tgetVolumneButtonGroup() {\r\n\t\tlet volumeGrp = DomHelper.createButtonGroup(true)\r\n\t\tDomHelper.appendChildren(volumeGrp, [\r\n\t\t\tthis.getMainVolumeSlider().container,\r\n\t\t\tthis.getMuteButton()\r\n\t\t])\r\n\t\treturn volumeGrp\r\n\t}\r\n\r\n\tgetSongControlButtonGroup() {\r\n\t\tlet songControlGrp = DomHelper.createButtonGroup(false)\r\n\t\tDomHelper.appendChildren(songControlGrp, [\r\n\t\t\tthis.getPlayButton(),\r\n\t\t\tthis.getPauseButton(),\r\n\t\t\tthis.getStopButton(),\r\n\t\t\tthis.getRecordButton()\r\n\t\t])\r\n\t\treturn songControlGrp\r\n\t}\r\n\r\n\tgetSpeedButtonGroup() {\r\n\t\tlet songSpeedGrp = DomHelper.createButtonGroup(true)\r\n\t\tDomHelper.appendChildren(songSpeedGrp, [this.getSpeedDiv()])\r\n\t\treturn songSpeedGrp\r\n\t}\r\n\r\n\tgetFileButtonGroup() {\r\n\t\tlet fileGrp = DomHelper.createButtonGroup(true)\r\n\t\tDomHelper.appendChildren(fileGrp, [\r\n\t\t\tthis.getLoadSongButton(),\r\n\t\t\tthis.getLoadedSongsButton()\r\n\t\t])\r\n\t\treturn fileGrp\r\n\t}\r\n\r\n\tgetNavBar() {\r\n\t\tif (!this.navBar) {\r\n\t\t\tthis.navBar = DomHelper.createElement(\r\n\t\t\t\t\"nav\",\r\n\t\t\t\t{},\r\n\t\t\t\t{\r\n\t\t\t\t\tclassName: \"navbar navbar-wrapper\"\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t}\r\n\t\treturn this.navBar\r\n\t}\r\n\tgetSettingsButton() {\r\n\t\tif (!this.settingsButton) {\r\n\t\t\tthis.settingsButton = DomHelper.createGlyphiconButton(\r\n\t\t\t\t\"settingsButton\",\r\n\t\t\t\t\"cog\",\r\n\t\t\t\t() => {\r\n\t\t\t\t\tif (this.settingsShown) {\r\n\t\t\t\t\t\tthis.hideSettings()\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.showSettings()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t}\r\n\t\treturn this.settingsButton\r\n\t}\r\n\thideDiv(div) {\r\n\t\tdiv.classList.add(\"hidden\")\r\n\t\tdiv.classList.remove(\"unhidden\")\r\n\t}\r\n\tshowDiv(div) {\r\n\t\tdiv.classList.remove(\"hidden\")\r\n\t\tdiv.classList.add(\"unhidden\")\r\n\t}\r\n\thideSettings() {\r\n\t\tDomHelper.removeClass(\"selected\", this.getSettingsButton())\r\n\t\tthis.settingsShown = false\r\n\t\tthis.hideDiv(this.getSettingsDiv())\r\n\t}\r\n\tshowSettings() {\r\n\t\tthis.hideAllDialogs()\r\n\t\tDomHelper.addClassToElement(\"selected\", this.getSettingsButton())\r\n\t\tthis.settingsShown = true\r\n\t\tthis.showDiv(this.getSettingsDiv())\r\n\t}\r\n\tgetSettingsDiv() {\r\n\t\tif (!this.settingsDiv) {\r\n\t\t\tthis.settingsDiv = DomHelper.createDivWithIdAndClass(\r\n\t\t\t\t\"settingsDiv\",\r\n\t\t\t\t\"innerMenuDiv\"\r\n\t\t\t)\r\n\t\t\tthis.hideDiv(this.settingsDiv)\r\n\t\t\tthis.settingsDiv.appendChild(this.getSettingsContent())\r\n\t\t}\r\n\t\treturn this.settingsDiv\r\n\t}\r\n\tgetSettingsContent() {\r\n\t\treturn getSettingsDiv()\r\n\t}\r\n\tgetFullscreenButton() {\r\n\t\tif (!this.fullscreenButton) {\r\n\t\t\tthis.fullscreen = false\r\n\t\t\tlet clickFullscreen = () => {\r\n\t\t\t\tif (!this.fullscreen) {\r\n\t\t\t\t\tdocument.body.requestFullscreen()\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdocument.exitFullscreen()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.fullscreenButton = DomHelper.createGlyphiconButton(\r\n\t\t\t\t\"fullscreenButton\",\r\n\t\t\t\t\"fullscreen\",\r\n\t\t\t\tclickFullscreen.bind(this)\r\n\t\t\t)\r\n\t\t\tlet fullscreenSwitch = () => (this.fullscreen = !this.fullscreen)\r\n\t\t\tdocument.body.onfullscreenchange = fullscreenSwitch.bind(this)\r\n\t\t}\r\n\t\treturn this.fullscreenButton\r\n\t}\r\n\tgetLoadSongButton() {\r\n\t\tif (!this.loadSongButton) {\r\n\t\t\tthis.loadSongButton = DomHelper.createFileInput(\r\n\t\t\t\t\"Upload Midi\",\r\n\t\t\t\tthis.handleFileSelect.bind(this)\r\n\t\t\t)\r\n\t\t\tDomHelper.addClassToElement(\"floatSpanLeft\", this.loadSongButton)\r\n\t\t}\r\n\t\treturn this.loadSongButton\r\n\t}\r\n\tgetLoadedSongsButton() {\r\n\t\tif (!this.loadedSongsButton) {\r\n\t\t\tthis.loadedSongsButton = DomHelper.createGlyphiconTextButton(\r\n\t\t\t\t\"mute\",\r\n\t\t\t\t\"music\",\r\n\t\t\t\t\"Loaded Songs\",\r\n\t\t\t\tev => {\r\n\t\t\t\t\tif (this.loadedSongsShown) {\r\n\t\t\t\t\t\tthis.hideLoadedSongsDiv()\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.showLoadedSongsDiv()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t}\r\n\t\treturn this.loadedSongsButton\r\n\t}\r\n\tshowLoadedSongsDiv() {\r\n\t\tthis.hideAllDialogs()\r\n\t\tDomHelper.addClassToElement(\"selected\", this.loadedSongsButton)\r\n\t\tthis.loadedSongsShown = true\r\n\t\tthis.showDiv(this.getLoadedSongsDiv())\r\n\t}\r\n\r\n\thideLoadedSongsDiv() {\r\n\t\tDomHelper.removeClass(\"selected\", this.loadedSongsButton)\r\n\t\tthis.loadedSongsShown = false\r\n\t\tthis.hideDiv(this.getLoadedSongsDiv())\r\n\t}\r\n\r\n\tgetLoadedSongsDiv() {\r\n\t\tif (!this.loadedSongsDiv) {\r\n\t\t\tthis.loadedSongsDiv = DomHelper.createDivWithClass(\"innerMenuDiv\")\r\n\t\t\tthis.loadedSongsDiv.appendChild(this.songUI.getDivContent())\r\n\t\t\tthis.hideDiv(this.loadedSongsDiv)\r\n\t\t}\r\n\t\treturn this.loadedSongsDiv\r\n\t}\r\n\r\n\tcreateFileDragArea() {\r\n\t\tlet dragArea = DomHelper.createElement(\r\n\t\t\t\"div\",\r\n\t\t\t{\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\ttop: 0,\r\n\t\t\t\tleft: 0,\r\n\t\t\t\twidth: \"100%\",\r\n\t\t\t\theight: \"100%\",\r\n\t\t\t\tzIndex: 10000,\r\n\t\t\t\tvisibility: \"hidden\",\r\n\t\t\t\topacity: \"0\",\r\n\t\t\t\tbackgroundColor: \"rgba(0,0,0,0.2)\",\r\n\t\t\t\ttransition: \"all 0.2s ease-out\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tdraggable: \"true\"\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\tlet dragAreaText = DomHelper.createDivWithClass(\r\n\t\t\t\"centeredBigText\",\r\n\t\t\t{\r\n\t\t\t\tmarginTop: \"25%\",\r\n\t\t\t\tfontSize: \"35px\",\r\n\t\t\t\tcolor: \"rgba(225,225,225,0.8)\"\r\n\t\t\t},\r\n\t\t\t{ innerHTML: \"Drop Midi File anywhere!\" }\r\n\t\t)\r\n\t\tdragArea.appendChild(dragAreaText)\r\n\r\n\t\tdragArea.ondrop = ev => {\r\n\t\t\tdragArea.style.backgroundColor = \"rgba(0,0,0,0)\"\r\n\t\t\tthis.handleDragDropFileSelect(ev)\r\n\t\t}\r\n\t\tlet lastTarget\r\n\t\twindow.ondragenter = ev => {\r\n\t\t\tev.preventDefault()\r\n\t\t\tlastTarget = ev.target\r\n\t\t\tdragArea.style.visibility = \"\"\r\n\t\t\tdragArea.style.opacity = \"1\"\r\n\t\t}\r\n\t\twindow.ondragleave = ev => {\r\n\t\t\tif (ev.target === lastTarget || ev.target === document) {\r\n\t\t\t\tdragArea.style.visibility = \"hidden\"\r\n\t\t\t\tdragArea.style.opacity = \"0\"\r\n\t\t\t}\r\n\t\t}\r\n\t\twindow.ondragover = ev => ev.preventDefault()\r\n\t\twindow.ondrop = ev => {\r\n\t\t\tev.preventDefault()\r\n\t\t\tdragArea.style.visibility = \"hidden\"\r\n\t\t\tdragArea.style.opacity = \"0\"\r\n\t\t\tthis.handleDragDropFileSelect(ev)\r\n\t\t}\r\n\t\tdocument.body.appendChild(dragArea)\r\n\t}\r\n\thandleDragOverFile(ev) {\r\n\t\tthis.createFileDragArea().style\r\n\t}\r\n\thandleDragDropFileSelect(ev) {\r\n\t\tif (ev.dataTransfer.items) {\r\n\t\t\t// Use DataTransferItemList interface to access the file(s)\r\n\t\t\tif (ev.dataTransfer.items.length > 0) {\r\n\t\t\t\tif (ev.dataTransfer.items[0].kind === \"file\") {\r\n\t\t\t\t\tvar file = ev.dataTransfer.items[0].getAsFile()\r\n\t\t\t\t\tthis.readFile(file)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// Use DataTransfer interface to access the file(s)\r\n\t\t\tif (ev.dataTransfer.files.length > 0) {\r\n\t\t\t\tvar file = ev.dataTransfer.files[0]\r\n\t\t\t\tthis.readFile(file)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\thandleFileSelect(evt) {\r\n\t\tvar files = evt.target.files\r\n\t\tfor (var i = 0, f; (f = files[i]); i++) {\r\n\t\t\tthis.readFile(f)\r\n\t\t}\r\n\t}\r\n\treadFile(file) {\r\n\t\tlet reader = new FileReader()\r\n\t\tlet fileName = file.name\r\n\t\treader.onload = function (theFile) {\r\n\t\t\tgetPlayer().loadSong(reader.result, fileName)\r\n\t\t}.bind(this)\r\n\t\treader.readAsDataURL(file)\r\n\t}\r\n\r\n\tgetSpeedDiv() {\r\n\t\tif (!this.speedDiv) {\r\n\t\t\tthis.speedDiv = DomHelper.createDivWithClass(\r\n\t\t\t\t\"btn-group btn-group-vertical\"\r\n\t\t\t)\r\n\t\t\tthis.speedDiv.appendChild(this.getSpeedUpButton())\r\n\t\t\tthis.speedDiv.appendChild(this.getSpeedDisplayField())\r\n\t\t\tthis.speedDiv.appendChild(this.getSpeedDownButton())\r\n\t\t}\r\n\t\treturn this.speedDiv\r\n\t}\r\n\tgetSpeedUpButton() {\r\n\t\tif (!this.speedUpButton) {\r\n\t\t\tthis.speedUpButton = DomHelper.createGlyphiconButton(\r\n\t\t\t\t\"speedUp\",\r\n\t\t\t\t\"triangle-top\",\r\n\t\t\t\tev => {\r\n\t\t\t\t\tgetPlayer().increaseSpeed(0.05)\r\n\t\t\t\t\tthis.updateSpeed()\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\tthis.speedUpButton.className += \" btn-xs forcedThinButton\"\r\n\t\t}\r\n\t\treturn this.speedUpButton\r\n\t}\r\n\tupdateSpeed() {\r\n\t\tthis.getSpeedDisplayField().value =\r\n\t\t\tMath.round(getPlayer().playbackSpeed * 100) + \"%\"\r\n\t}\r\n\tgetSpeedDisplayField() {\r\n\t\tif (!this.speedDisplay) {\r\n\t\t\tthis.speedDisplay = DomHelper.createTextInput(\r\n\t\t\t\tev => {\r\n\t\t\t\t\tlet newVal = Math.max(1, Math.min(1000, parseInt(ev.target.value)))\r\n\t\t\t\t\tif (!isNaN(newVal)) {\r\n\t\t\t\t\t\tev.target.value = newVal + \"%\"\r\n\t\t\t\t\t\tgetPlayer().playbackSpeed = newVal / 100\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfloat: \"none\",\r\n\t\t\t\t\ttextAlign: \"center\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue: Math.floor(getPlayer().playbackSpeed * 100) + \"%\",\r\n\t\t\t\t\tclassName: \"forcedThinButton\",\r\n\t\t\t\t\ttype: \"text\"\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t}\r\n\t\treturn this.speedDisplay\r\n\t}\r\n\tgetSpeedDownButton() {\r\n\t\tif (!this.speedDownButton) {\r\n\t\t\tthis.speedDownButton = DomHelper.createGlyphiconButton(\r\n\t\t\t\t\"speedUp\",\r\n\t\t\t\t\"triangle-bottom\",\r\n\t\t\t\tev => {\r\n\t\t\t\t\tgetPlayer().increaseSpeed(-0.05)\r\n\t\t\t\t\tthis.updateSpeed()\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\tthis.speedDownButton.className += \" btn-xs forcedThinButton\"\r\n\t\t}\r\n\t\treturn this.speedDownButton\r\n\t}\r\n\tgetTracksButton() {\r\n\t\tif (!this.tracksButton) {\r\n\t\t\tthis.tracksButton = DomHelper.createGlyphiconTextButton(\r\n\t\t\t\t\"tracks\",\r\n\t\t\t\t\"align-justify\",\r\n\t\t\t\t\"Tracks\",\r\n\t\t\t\tev => {\r\n\t\t\t\t\tif (this.tracksShown) {\r\n\t\t\t\t\t\tthis.hideTracks()\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.showTracks()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\tDomHelper.addClassToElement(\"floatSpanLeft\", this.tracksButton)\r\n\t\t}\r\n\t\treturn this.tracksButton\r\n\t}\r\n\thideTracks() {\r\n\t\tDomHelper.removeClass(\"selected\", this.tracksButton)\r\n\t\tthis.tracksShown = false\r\n\t\tthis.hideDiv(this.getTrackMenuDiv())\r\n\t}\r\n\r\n\tshowTracks() {\r\n\t\tthis.hideAllDialogs()\r\n\t\tDomHelper.addClassToElement(\"selected\", this.tracksButton)\r\n\t\tthis.tracksShown = true\r\n\t\t//instrument of a track could theoretically change during the song.\r\n\t\tdocument\r\n\t\t\t.querySelectorAll(\".instrumentName\")\r\n\t\t\t.forEach(\r\n\t\t\t\tel =>\r\n\t\t\t\t(el.innerHTML = getPlayer().getCurrentTrackInstrument(\r\n\t\t\t\t\tel.id.split(\"instrumentName\")[1]\r\n\t\t\t\t))\r\n\t\t\t)\r\n\t\tthis.showDiv(this.getTrackMenuDiv())\r\n\t}\r\n\r\n\tgetMidiSetupButton() {\r\n\t\tif (!this.midiSetupButton) {\r\n\t\t\tthis.midiSetupButton = DomHelper.createGlyphiconTextButton(\r\n\t\t\t\t\"midiSetup\",\r\n\t\t\t\t\"tower\",\r\n\t\t\t\t\"Midi-Setup\",\r\n\t\t\t\tev => {\r\n\t\t\t\t\tif (this.midiSetupDialogShown) {\r\n\t\t\t\t\t\tthis.hideMidiSetupDialog()\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.showMidiSetupDialog()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\tDomHelper.addClassToElement(\"floatSpanLeft\", this.midiSetupButton)\r\n\t\t}\r\n\t\treturn this.midiSetupButton\r\n\t}\r\n\thideMidiSetupDialog() {\r\n\t\tDomHelper.removeClass(\"selected\", this.midiSetupButton)\r\n\t\tthis.midiSetupDialogShown = false\r\n\t\tthis.hideDiv(this.getMidiSetupDialog())\r\n\t}\r\n\r\n\tshowMidiSetupDialog() {\r\n\t\tthis.hideAllDialogs()\r\n\t\tDomHelper.addClassToElement(\"selected\", this.midiSetupButton)\r\n\t\tthis.midiSetupDialogShown = true\r\n\r\n\t\tthis.showDiv(this.getMidiSetupDialog())\r\n\t}\r\n\tgetChannelsButton() {\r\n\t\tif (!this.channelsButton) {\r\n\t\t\tlet channelMenuDiv = this.getChannelMenuDiv()\r\n\t\t\tthis.channelsButton = DomHelper.createGlyphiconTextButton(\r\n\t\t\t\t\"channels\",\r\n\t\t\t\t\"align-justify\",\r\n\t\t\t\t\"Channels\",\r\n\t\t\t\tev => {\r\n\t\t\t\t\tif (this.channelsShown) {\r\n\t\t\t\t\t\tthis.hideChannels(channelMenuDiv)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.showChannels(channelMenuDiv)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\tDomHelper.addClassToElement(\"floatSpanLeft\", this.channelsButton)\r\n\r\n\t\t\t//Todo. decide what channel info to show...\r\n\t\t\tthis.channelsButton.style.opacity = 0\r\n\t\t}\r\n\t\treturn this.channelsButton\r\n\t}\r\n\tgetChannelMenuDiv() {\r\n\t\tif (!this.channelMenuDiv) {\r\n\t\t\tthis.channelMenuDiv = DomHelper.createDivWithId(\"trackContainerDiv\")\r\n\t\t\tthis.channelMenuDiv.style.display = \"none\"\r\n\t\t\tthis.channelMenuDiv.style.top = this.getNavBar().style.height\r\n\t\t\tdocument.body.appendChild(this.channelMenuDiv)\r\n\t\t}\r\n\t\treturn this.channelMenuDiv\r\n\t}\r\n\tshowChannels(channelMenuDiv) {\r\n\t\tif (this.tracksShown) {\r\n\t\t\tthis.hideTracks()\r\n\t\t}\r\n\t\tDomHelper.addClassToElement(\"selected\", this.tracksButton)\r\n\t\tthis.channelsShown = true\r\n\t\tchannelMenuDiv.style.display = \"block\"\r\n\t}\r\n\r\n\thideChannels(channelMenuDiv) {\r\n\t\tDomHelper.removeClass(\"selected\", this.tracksButton)\r\n\t\tthis.channelsShown = false\r\n\t\tchannelMenuDiv.style.display = \"none\"\r\n\t}\r\n\thideAllDialogs() {\r\n\t\t// this.hideChannels()\r\n\t\tthis.hideMidiSetupDialog()\r\n\t\tthis.hideSettings()\r\n\t\tthis.hideLoadedSongsDiv()\r\n\t\tthis.hideTracks()\r\n\t\tthis.hideLoadedSongsDiv()\r\n\t}\r\n\r\n\tgetMainVolumeSlider() {\r\n\t\tif (!this.mainVolumeSlider) {\r\n\t\t\tthis.mainVolumeSlider = DomHelper.createSliderWithLabel(\r\n\t\t\t\t\"volumeMain\",\r\n\t\t\t\t\"Master Volume\",\r\n\t\t\t\tgetPlayer().volume,\r\n\t\t\t\t0,\r\n\t\t\t\t100,\r\n\t\t\t\t1,\r\n\t\t\t\tev => {\r\n\t\t\t\t\tif (getPlayer().volume == 0 && parseInt(ev.target.value) != 0) {\r\n\t\t\t\t\t\tDomHelper.replaceGlyph(\r\n\t\t\t\t\t\t\tthis.getMuteButton(),\r\n\t\t\t\t\t\t\t\"volume-off\",\r\n\t\t\t\t\t\t\t\"volume-up\"\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t//this.getMuteButton().firstChild.className = this.muteButton.firstChild.className.replace('volume-off', 'volume-up')\r\n\t\t\t\t\t}\r\n\t\t\t\t\tgetPlayer().volume = parseInt(ev.target.value)\r\n\t\t\t\t\tif (getPlayer().volume <= 0) {\r\n\t\t\t\t\t\tDomHelper.replaceGlyph(\r\n\t\t\t\t\t\t\tthis.getMuteButton(),\r\n\t\t\t\t\t\t\t\"volume-up\",\r\n\t\t\t\t\t\t\t\"volume-off\"\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t} else if (this.getMuteButton().innerHTML == \"Unmute\") {\r\n\t\t\t\t\t\tDomHelper.replaceGlyph(\r\n\t\t\t\t\t\t\tthis.getMuteButton(),\r\n\t\t\t\t\t\t\t\"volume-off\",\r\n\t\t\t\t\t\t\t\"volume-up\"\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t}\r\n\t\treturn this.mainVolumeSlider\r\n\t}\r\n\tgetMuteButton() {\r\n\t\tif (!this.muteButton) {\r\n\t\t\tthis.muteButton = DomHelper.createGlyphiconButton(\r\n\t\t\t\t\"mute\",\r\n\t\t\t\t\"volume-up\",\r\n\t\t\t\tev => {\r\n\t\t\t\t\tif (getPlayer().muted) {\r\n\t\t\t\t\t\tgetPlayer().muted = false\r\n\t\t\t\t\t\tif (!isNaN(getPlayer().mutedAtVolume)) {\r\n\t\t\t\t\t\t\tif (getPlayer().mutedAtVolume == 0) {\r\n\t\t\t\t\t\t\t\tgetPlayer().mutedAtVolume = 100\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis.getMainVolumeSlider().slider.value = getPlayer().mutedAtVolume\r\n\t\t\t\t\t\t\tgetPlayer().volume = getPlayer().mutedAtVolume\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tDomHelper.replaceGlyph(this.muteButton, \"volume-off\", \"volume-up\")\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tgetPlayer().mutedAtVolume = getPlayer().volume\r\n\t\t\t\t\t\tgetPlayer().muted = true\r\n\t\t\t\t\t\tgetPlayer().volume = 0\r\n\t\t\t\t\t\tthis.getMainVolumeSlider().slider.value = 0\r\n\t\t\t\t\t\tDomHelper.replaceGlyph(this.muteButton, \"volume-up\", \"volume-off\")\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t}\r\n\t\treturn this.muteButton\r\n\t}\r\n\tgetPlayButton() {\r\n\t\tif (!this.playButton) {\r\n\t\t\tthis.playButton = DomHelper.createGlyphiconButton(\r\n\t\t\t\t\"play\",\r\n\t\t\t\t\"play\",\r\n\t\t\t\tthis.clickPlay.bind(this)\r\n\t\t\t)\r\n\t\t\tDomHelper.addClassToElement(\"btn-lg\", this.playButton)\r\n\t\t}\r\n\t\treturn this.playButton\r\n\t}\r\n\tclickPlay(ev) {\r\n\t\tif (getPlayer().song) {\r\n\t\t\tDomHelper.removeClass(\"selected\", this.getPauseButton())\r\n\t\t\tgetPlayer().startPlay()\r\n\t\t\tDomHelper.addClassToElement(\"selected\", this.playButton)\r\n\t\t}\r\n\t}\r\n\tgetPauseButton() {\r\n\t\tif (!this.pauseButton) {\r\n\t\t\tthis.pauseButton = DomHelper.createGlyphiconButton(\r\n\t\t\t\t\"pause\",\r\n\t\t\t\t\"pause\",\r\n\t\t\t\tthis.clickPause.bind(this)\r\n\t\t\t)\r\n\t\t\tDomHelper.addClassToElement(\"btn-lg\", this.pauseButton)\r\n\t\t}\r\n\t\treturn this.pauseButton\r\n\t}\r\n\tclickPause(ev) {\r\n\t\tgetPlayer().pause()\r\n\t\tDomHelper.removeClass(\"selected\", this.getPlayButton())\r\n\r\n\t\tDomHelper.addClassToElement(\"selected\", this.pauseButton)\r\n\t}\r\n\r\n\tgetStopButton() {\r\n\t\tif (!this.stopButton) {\r\n\t\t\tthis.stopButton = DomHelper.createGlyphiconButton(\r\n\t\t\t\t\"stop\",\r\n\t\t\t\t\"stop\",\r\n\t\t\t\tthis.clickStop.bind(this)\r\n\t\t\t)\r\n\r\n\t\t\tDomHelper.addClassToElement(\"btn-lg\", this.stopButton)\r\n\t\t}\r\n\t\treturn this.stopButton\r\n\t}\r\n\tclickStop(ev) {\r\n\t\tgetPlayer().stop()\r\n\t\tDomHelper.removeClass(\"selected\", this.getPlayButton())\r\n\t\tDomHelper.removeClass(\"selected\", this.getPauseButton())\r\n\t}\r\n\tgetRecordButton() {\r\n\t\tif (!this.recordButton) {\r\n\t\t\tthis.recordButton = DomHelper.createGlyphiconButton(\r\n\t\t\t\t\"record\",\r\n\t\t\t\t\"record\",\r\n\t\t\t\tthis.clickRecord.bind(this)\r\n\t\t\t);\r\n\t\t\tDomHelper.addClassToElement(\"btn-lg\", this.recordButton);\r\n\t\t}\r\n\t\treturn this.recordButton;\r\n\t}\r\n\r\n\tgetGenerateMelodyButton() {\r\n\t\tif (!this.generateMelodyButton) {\r\n\t\t\tthis.generateMelodyButton = DomHelper.createGlyphiconTextButton(\r\n\t\t\t\t\"generateMelody\",\r\n\t\t\t\t\"music\", // Assuming the glyph icon for music is \"music\"\r\n\t\t\t\t\"Generate Melody\",\r\n\t\t\t\tthis.clickGenerateMelody.bind(this)\r\n\t\t\t);\r\n\t\t\tDomHelper.addClassToElement(\"floatSpanLeft\", this.generateMelodyButton);\r\n\t\t}\r\n\t\treturn this.generateMelodyButton;\r\n\t}\r\n\r\n\tclickGenerateMelody(ev) {\r\n\t\tthis.clickStop();\r\n\t\tconsole.log(\"Generating melody...\");\r\n\t}\r\n\r\n\tgetRecordingDialog() {\r\n\t\tif (!this.recordingDialog) {\r\n\t\t\tthis.recordingDialog = DomHelper.createDivWithIdAndClass(\r\n\t\t\t\t\"recordingDialog\",\r\n\t\t\t\t\"centeredMenuDiv\"\r\n\t\t\t);\r\n\t\t\tthis.hideDiv(this.recordingDialog);\r\n\t\t\tdocument.body.appendChild(this.recordingDialog);\r\n\r\n\t\t\tthis.recordingDialog.innerHTML = ''; // clear the recording dialog\r\n\r\n\t\t\tlet text = DomHelper.createDivWithClass(\r\n\t\t\t\t\"centeredBigText\",\r\n\t\t\t\t{ marginTop: \"25px\" },\r\n\t\t\t\t{ innerHTML: \"Recording Controls:\" }\r\n\t\t\t);\r\n\t\t\tthis.recordingDialog.appendChild(text);\r\n\t\t\tif (this.hasActiveInput) {\r\n\t\t\t\tlet recordingControls = this.getRecordingControls.bind(this)();\r\n\t\t\t\trecordingControls.forEach(control => {\r\n\t\t\t\t\tthis.recordingDialog.appendChild(control);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tlet noInputText = DomHelper.createDivWithClass(\r\n\t\t\t\t\t\"centeredBigText\",\r\n\t\t\t\t\t{ marginTop: \"25px\" },\r\n\t\t\t\t\t{ innerHTML: \"No MIDI input device selected\" }\r\n\t\t\t\t);\r\n\t\t\t\tthis.recordingDialog.appendChild(noInputText);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.recordingDialog.style.marginTop =\r\n\t\t\tthis.getNavBar().clientHeight + 25 + \"px\";\r\n\t\treturn this.recordingDialog;\r\n\t}\r\n\r\n\tcheckMIDIInput() {\r\n\t\tif (this.inputDevicesDiv) {\r\n\t\t\tlet inputDevicesDivs = this.inputDevicesDiv.childNodes;\r\n\r\n\t\t\tfor (let i = 0; i < inputDevicesDivs.length; i++) {\r\n\t\t\t\tif (inputDevicesDivs[i].classList.contains('selected')) {\r\n\t\t\t\t\tthis.hasActiveInput = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.hasActiveInput = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tclickRecord(ev) {\r\n\t\tthis.checkMIDIInput();\r\n\t\tif (this.recordingDialogShown) {\r\n\t\t\tthis.hideDiv(this.getRecordingDialog());\r\n\t\t\tDomHelper.removeClass(\"selected\", this.recordButton);\r\n\t\t\tthis.recordingDialogShown = false;\r\n\t\t} else {\r\n\t\t\tthis.showDiv(this.getRecordingDialog());\r\n\t\t\tDomHelper.addClassToElement(\"selected\", this.recordButton);\r\n\t\t\tthis.recordingDialogShown = true;\r\n\t\t}\r\n\t\tthis.updateRecordingControls(); // Update recording controls when record button is clicked\r\n\t}\r\n\r\n\tresetTrackMenuDiv() {\r\n\t\tlet menuDiv = this.getTrackMenuDiv()\r\n\t\tmenuDiv.innerHTML = \"\"\r\n\t\tDomHelper.appendChildren(menuDiv, createTrackDivs())\r\n\t}\r\n\tnewSongCallback() {\r\n\t\tthis.resetTrackMenuDiv()\r\n\t\tthis.clickStop()\r\n\t\tthis.songUI.newSongCallback(getCurrentSong())\r\n\t}\r\n\r\n\tgetMidiSetupDialog() {\r\n\t\tif (!this.midiSetupDialog) {\r\n\t\t\tthis.midiSetupDialog = DomHelper.createDivWithIdAndClass(\r\n\t\t\t\t\"midiSetupDialog\",\r\n\t\t\t\t\"centeredMenuDiv\"\r\n\t\t\t)\r\n\t\t\tthis.hideDiv(this.midiSetupDialog)\r\n\t\t\tdocument.body.appendChild(this.midiSetupDialog)\r\n\r\n\t\t\tlet text = DomHelper.createDivWithClass(\r\n\t\t\t\t\"centeredBigText\",\r\n\t\t\t\t{ marginTop: \"25px\" },\r\n\t\t\t\t{ innerHTML: \"Choose Midi device:\" }\r\n\t\t\t)\r\n\t\t\tthis.midiSetupDialog.appendChild(text)\r\n\r\n\t\t\tthis.inputDevicesDiv = DomHelper.createDivWithClass(\"halfContainer\")\r\n\t\t\tthis.outputDevicesDiv = DomHelper.createDivWithClass(\"halfContainer\")\r\n\t\t\tthis.midiSetupDialog.appendChild(this.inputDevicesDiv)\r\n\t\t\tthis.midiSetupDialog.appendChild(this.outputDevicesDiv)\r\n\t\t}\r\n\t\tlet inputDevices = getMidiHandler().getAvailableInputDevices()\r\n\t\tif (inputDevices.length == 0) {\r\n\t\t\tthis.inputDevicesDiv.innerHTML = \"No MIDI input-devices found.\"\r\n\t\t} else {\r\n\t\t\tthis.inputDevicesDiv.innerHTML = \"\"\r\n\t\t\tlet inputTitle = DomHelper.createElementWithClass(\"row\", \"span\")\r\n\t\t\tinputTitle.innerHTML = \"Input: \"\r\n\t\t\tthis.inputDevicesDiv.appendChild(inputTitle)\r\n\t\t\tinputDevices.forEach(device => {\r\n\t\t\t\tthis.inputDevicesDiv.appendChild(this.createDeviceDiv(device))\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet outputDevices = getMidiHandler().getAvailableOutputDevices()\r\n\t\tif (outputDevices.length == 0) {\r\n\t\t\tthis.outputDevicesDiv.innerHTML = \"No MIDI output-devices found.\"\r\n\t\t} else {\r\n\t\t\tthis.outputDevicesDiv.innerHTML = \"\"\r\n\t\t\tlet outputTitle = DomHelper.createDivWithClass(\"row\")\r\n\t\t\toutputTitle.innerHTML = \"Output: \"\r\n\t\t\tthis.outputDevicesDiv.appendChild(outputTitle)\r\n\t\t\toutputDevices.forEach(device => {\r\n\t\t\t\tthis.outputDevicesDiv.appendChild(this.createOutputDeviceDiv(device))\r\n\t\t\t})\r\n\t\t}\r\n\t\tthis.midiSetupDialog.style.marginTop =\r\n\t\t\tthis.getNavBar().clientHeight + 25 + \"px\"\r\n\t\treturn this.midiSetupDialog\r\n\t}\r\n\tcreateDeviceDiv(device) {\r\n\t\tlet deviceDiv = DomHelper.createTextButton(\r\n\t\t\t\"midiInDeviceDiv\" + device.id,\r\n\t\t\tdevice.name,\r\n\t\t\t() => {\r\n\t\t\t\tif (deviceDiv.classList.contains(\"selected\")) {\r\n\t\t\t\t\tDomHelper.removeClass(\"selected\", deviceDiv);\r\n\t\t\t\t\tgetMidiHandler().clearInput(device);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tDomHelper.addClassToElement(\"selected\", deviceDiv);\r\n\t\t\t\t\tgetMidiHandler().addInput(device);\r\n\t\t\t\t}\r\n\t\t\t\tthis.updateRecordingControls(); // Update recording controls when MIDI device is selected\r\n\t\t\t}\r\n\t\t);\r\n\t\tif (getMidiHandler().isDeviceActive(device)) {\r\n\t\t\tDomHelper.addClassToElement(\"selected\", deviceDiv);\r\n\t\t}\r\n\r\n\t\treturn deviceDiv;\r\n\t}\r\n\tcreateOutputDeviceDiv(device) {\r\n\t\tlet deviceDiv = DomHelper.createTextButton(\r\n\t\t\t\"midiOutDeviceDiv\" + device.id,\r\n\t\t\tdevice.name,\r\n\t\t\t() => {\r\n\t\t\t\tif (deviceDiv.classList.contains(\"selected\")) {\r\n\t\t\t\t\tDomHelper.removeClass(\"selected\", deviceDiv)\r\n\t\t\t\t\tgetMidiHandler().clearOutput(device)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tDomHelper.addClassToElement(\"selected\", deviceDiv)\r\n\t\t\t\t\tgetMidiHandler().addOutput(device)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)\r\n\t\tif (getMidiHandler().isOutputDeviceActive(device)) {\r\n\t\t\tdocument\r\n\t\t\t\t.querySelectorAll(\".midiOutDeviceDiv\")\r\n\t\t\t\t.forEach(el =>\r\n\t\t\t\t\tel.classList.contains(\"selected\")\r\n\t\t\t\t\t\t? el.classList.remove(\"selected\")\r\n\t\t\t\t\t\t: null\r\n\t\t\t\t)\r\n\t\t\tDomHelper.addClassToElement(\"selected\", deviceDiv)\r\n\t\t}\r\n\t\tdeviceDiv.classList.add(\"midiOutDeviceDiv\")\r\n\r\n\t\treturn deviceDiv\r\n\t}\r\n\tgetTrackMenuDiv() {\r\n\t\tif (!this.trackMenuDiv) {\r\n\t\t\tthis.trackMenuDiv = DomHelper.createDivWithIdAndClass(\r\n\t\t\t\t\"trackContainerDiv\",\r\n\t\t\t\t\"innerMenuDiv\"\r\n\t\t\t)\r\n\t\t\tthis.hideDiv(this.trackMenuDiv)\r\n\t\t}\r\n\t\treturn this.trackMenuDiv\r\n\t}\r\n\r\n\tgetRecordingControls() {\r\n\t\tlet startRecordingButton = DomHelper.createGlyphiconTextButton(\r\n\t\t\t\"startRecording\",\r\n\t\t\t\"record\",\r\n\t\t\t\"Start Recording\",\r\n\t\t\tthis.startRecording.bind(this)\r\n\t\t);\r\n\t\tstartRecordingButton.classList.add(\"recordingControl\");\r\n\r\n\t\t// Hide these buttons initially\r\n\t\tlet pauseRecordingButton = DomHelper.createGlyphiconTextButton(\r\n\t\t\t\"pauseRecording\",\r\n\t\t\t\"pause\",\r\n\t\t\t\"Pause Recording\",\r\n\t\t\tthis.pauseRecording.bind(this)\r\n\t\t);\r\n\t\tpauseRecordingButton.classList.add(\"recordingControl\");\r\n\t\tpauseRecordingButton.style.display = \"none\";\r\n\r\n\t\tlet clearRecordingButton = DomHelper.createGlyphiconTextButton(\r\n\t\t\t\"clearRecording\",\r\n\t\t\t\"remove\",\r\n\t\t\t\"Clear Recording\",\r\n\t\t\tthis.clearRecording.bind(this)\r\n\t\t);\r\n\t\tclearRecordingButton.classList.add(\"recordingControl\");\r\n\t\tclearRecordingButton.style.display = \"none\";\r\n\r\n\t\tlet saveRecordingButton = DomHelper.createGlyphiconTextButton(\r\n\t\t\t\"saveRecording\",\r\n\t\t\t\"save\",\r\n\t\t\t\"Save Recording\",\r\n\t\t\tthis.saveRecording.bind(this)\r\n\t\t);\r\n\t\tsaveRecordingButton.classList.add(\"recordingControl\");\r\n\t\tsaveRecordingButton.style.display = \"none\";\r\n\r\n\t\tlet exportRecordingButton = DomHelper.createGlyphiconTextButton(\r\n\t\t\t\"exportRecording\",\r\n\t\t\t\"export\",\r\n\t\t\t\"Export Recording\",\r\n\t\t\tthis.exportRecording.bind(this)\r\n\t\t);\r\n\t\texportRecordingButton.classList.add(\"recordingControl\");\r\n\r\n\t\t// Timer for visualizing the recording\r\n\t\tlet timer = document.createElement(\"span\");\r\n\t\ttimer.id = \"recordingTimer\";\r\n\t\ttimer.innerHTML = \"00:00:00\";\r\n\r\n\t\t// Red record symbol\r\n\t\tlet recordSymbol = document.createElement(\"span\");\r\n\t\trecordSymbol.id = \"recordSymbol\";\r\n\t\trecordSymbol.innerHTML = \"&#9679;\";\r\n\t\trecordSymbol.style.color = \"red\";\r\n\t\trecordSymbol.style.display = \"none\";\r\n\r\n\t\t// If a MIDI input has been selected, show the \"Start Recording\" button\r\n\t\t// Otherwise, show a message asking the user to select an input device\r\n\t\tif (this.hasActiveInput) {\r\n\t\t\treturn [\r\n\t\t\t\tstartRecordingButton,\r\n\t\t\t\tpauseRecordingButton,\r\n\t\t\t\tclearRecordingButton,\r\n\t\t\t\tsaveRecordingButton,\r\n\t\t\t\texportRecordingButton,\r\n\t\t\t\ttimer,\r\n\t\t\t\trecordSymbol\r\n\t\t\t];\r\n\t\t} else {\r\n\t\t\tlet message = document.createElement(\"p\");\r\n\t\t\tmessage.innerHTML = \"Please select a MIDI input device in the MIDI setup.\";\r\n\t\t\treturn [message];\r\n\t\t}\r\n\t}\r\n\r\n\tupdateRecordingControls() {\r\n\t\t// Logic to show/hide recording controls based on the selected MIDI device\r\n\t\tif (this.hasActiveInput) {\r\n\t\t\t// Show recording controls if a MIDI device is selected\r\n\t\t\tthis.getRecordingDialog().innerHTML = ''; // clear the recording dialog\r\n\r\n\t\t\tthis.recordingDialog.innerHTML = ''; // clear the recording dialog\r\n\r\n\t\t\tlet text = DomHelper.createDivWithClass(\r\n\t\t\t\t\"centeredBigText\",\r\n\t\t\t\t{ marginTop: \"25px\" },\r\n\t\t\t\t{ innerHTML: \"Recording Controls:\" }\r\n\t\t\t);\r\n\t\t\tthis.getRecordingDialog().appendChild(text);\r\n\r\n\t\t\tlet recordingControls = this.getRecordingControls.bind(this)();\r\n\t\t\trecordingControls.forEach(control => {\r\n\t\t\t\tthis.getRecordingDialog().appendChild(control);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.recordingDialog.innerHTML = ''; // clear the recording dialog\r\n\r\n\t\t\tlet text = DomHelper.createDivWithClass(\r\n\t\t\t\t\"centeredBigText\",\r\n\t\t\t\t{ marginTop: \"25px\" },\r\n\t\t\t\t{ innerHTML: \"Recording Controls:\" }\r\n\t\t\t);\r\n\t\t\tthis.getRecordingDialog().appendChild(text);\r\n\r\n\t\t\tlet noInputText = DomHelper.createDivWithClass(\r\n\t\t\t\t\"centeredBigText\",\r\n\t\t\t\t{ marginTop: \"25px\" },\r\n\t\t\t\t{ innerHTML: \"No MIDI input device selected\" }\r\n\t\t\t);\r\n\t\t\tthis.getRecordingDialog().appendChild(noInputText);\r\n\t\t}\r\n\t}\r\n\r\n\tstartRecording() {\r\n\t\tif (this.hasActiveInput) {\r\n\t\t\tthis.clickStop()\r\n\t\t\tthis.midiRecorder.startRecording();\r\n\r\n\t\t\t// Show the timer and the red record symbol\r\n\t\t\tdocument.getElementById(\"recordingTimer\").style.display = \"inline\";\r\n\t\t\tdocument.getElementById(\"recordSymbol\").style.display = \"inline\";\r\n\r\n\t\t\tconst checkInterval = setInterval(() => {\r\n\t\t\t\tif (this.checkAndStartTimer()) {\r\n\t\t\t\t\tclearInterval(checkInterval);\r\n\t\t\t\t}\r\n\t\t\t}, 100);\r\n\r\n\t\t\t// Make the other buttons visible\r\n\t\t\tdocument.getElementById(\"pauseRecording\").style.display = \"inline\";\r\n\t\t\tdocument.getElementById(\"clearRecording\").style.display = \"inline\";\r\n\t\t\tdocument.getElementById(\"saveRecording\").style.display = \"inline\";\r\n\t\t}\r\n\t}\r\n\r\n\tstartTimer() {\r\n\t\tthis.timerStartTime = Date.now();\r\n\t\tthis.timerInterval = setInterval(this.updateTimerDisplay.bind(this), 1000);\r\n\t}\r\n\r\n\tcheckAndStartTimer() {\r\n\t\tif (this.midiRecorder.isFirstNotePlayed() && !this.timerInterval) {\r\n\t\t\tthis.startTimer();\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tupdateTimerDisplay() {\r\n\t\tconst elapsedSeconds = Math.floor((Date.now() - this.timerStartTime) / 1000);\r\n\t\tconst hours = String(Math.floor(elapsedSeconds / 3600)).padStart(2, '0');\r\n\t\tconst minutes = String(Math.floor((elapsedSeconds % 3600) / 60)).padStart(2, '0');\r\n\t\tconst seconds = String(elapsedSeconds % 60).padStart(2, '0');\r\n\t\tdocument.getElementById(\"recordingTimer\").innerHTML = `${hours}:${minutes}:${seconds}`;\r\n\t}\r\n\r\n\tclearRecording() {\r\n\t\tthis.midiRecorder.clearRecording();\r\n\t\tclearInterval(this.timerInterval);\r\n\t\tthis.timerInterval = null;\r\n\t\tdocument.getElementById(\"recordSymbol\").style.display = \"none\";\r\n\t\t// Reset the timer and hide the other buttons\r\n\t\tdocument.getElementById(\"recordingTimer\").innerHTML = \"00:00:00\";\r\n\t\tdocument.getElementById(\"pauseRecording\").style.display = \"none\";\r\n\t\tdocument.getElementById(\"saveRecording\").style.display = \"none\";\r\n\t}\r\n\r\n\tpauseRecording() {\r\n\t\tthis.midiRecorder.pauseRecording();\r\n\t\tclearInterval(this.timerInterval);\r\n\t\tthis.timerInterval = null; // Pause the timer\r\n\t}\r\n\r\n\tasync exportRecording() {\r\n\t\tlet file = getSongFilename();\r\n\t\tawait this.midiRecorder.saveRecording(file);\r\n\t}\r\n\tasync saveRecording() {\r\n\t\tlet file = await this.midiRecorder.saveRecordingToLocalStorage();\r\n\t\tconsole.log(file);\r\n\t\tgetPlayer().loadFromRecording(file);\r\n\t}\r\n\r\n}\r\n","import { getPlayer } from \"../player/Player.js\"\r\nimport { DomHelper } from \"./DomHelper.js\"\r\n\r\nexport class ZoomUI {\r\n\tconstructor() {}\r\n\tgetContentDiv(render) {\r\n\t\tlet cont = DomHelper.createDivWithClass(\"zoomGroup btn-group\")\r\n\t\t//zoomIn\r\n\t\tcont.appendChild(\r\n\t\t\tDomHelper.createGlyphiconButton(\"zoomInButton\", \"zoom-in\", () =>\r\n\t\t\t\trender.renderDimensions.zoomIn()\r\n\t\t\t)\r\n\t\t)\r\n\r\n\t\t//zoomOut\r\n\t\tcont.appendChild(\r\n\t\t\tDomHelper.createGlyphiconButton(\"zoomOutButton\", \"zoom-out\", () =>\r\n\t\t\t\trender.renderDimensions.zoomOut()\r\n\t\t\t)\r\n\t\t)\r\n\t\t//moveLeft\r\n\t\tcont.appendChild(\r\n\t\t\tDomHelper.createGlyphiconButton(\"moveViewLeftButton\", \"arrow-left\", () =>\r\n\t\t\t\trender.renderDimensions.moveViewLeft()\r\n\t\t\t)\r\n\t\t)\r\n\r\n\t\t//moveRight\r\n\t\tcont.appendChild(\r\n\t\t\tDomHelper.createGlyphiconButton(\"moveViewLeftButton\", \"arrow-right\", () =>\r\n\t\t\t\trender.renderDimensions.moveViewRight()\r\n\t\t\t)\r\n\t\t)\r\n\t\tconst fitSongButton = DomHelper.createTextButton(\r\n\t\t\t\"fitSongButton\",\r\n\t\t\t\"Fit Song\",\r\n\t\t\t() => render.renderDimensions.fitSong(getPlayer().song.getNoteRange())\r\n\t\t)\r\n\t\tfitSongButton.style.float = \"none\"\r\n\t\t//FitSong\r\n\t\tcont.appendChild(fitSongButton)\r\n\t\t//ShowAll\r\n\t\tcont.appendChild(\r\n\t\t\tDomHelper.createTextButton(\"showAllButton\", \"Show All\", () =>\r\n\t\t\t\trender.renderDimensions.showAll()\r\n\t\t\t)\r\n\t\t)\r\n\t\treturn cont\r\n\t}\r\n}\r\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.insert = exports.search = void 0;\n/**\n * Return the index of the element at or before the given property\n * @hidden\n */\nfunction search(array, value, prop) {\n    if (prop === void 0) { prop = \"ticks\"; }\n    var beginning = 0;\n    var len = array.length;\n    var end = len;\n    if (len > 0 && array[len - 1][prop] <= value) {\n        return len - 1;\n    }\n    while (beginning < end) {\n        // calculate the midpoint for roughly equal partition\n        var midPoint = Math.floor(beginning + (end - beginning) / 2);\n        var event_1 = array[midPoint];\n        var nextEvent = array[midPoint + 1];\n        if (event_1[prop] === value) {\n            // choose the last one that has the same value\n            for (var i = midPoint; i < array.length; i++) {\n                var testEvent = array[i];\n                if (testEvent[prop] === value) {\n                    midPoint = i;\n                }\n            }\n            return midPoint;\n        }\n        else if (event_1[prop] < value && nextEvent[prop] > value) {\n            return midPoint;\n        }\n        else if (event_1[prop] > value) {\n            // search lower\n            end = midPoint;\n        }\n        else if (event_1[prop] < value) {\n            // search upper\n            beginning = midPoint + 1;\n        }\n    }\n    return -1;\n}\nexports.search = search;\n/**\n * Does a binary search to insert the note\n * in the correct spot in the array\n * @hidden\n */\nfunction insert(array, event, prop) {\n    if (prop === void 0) { prop = \"ticks\"; }\n    if (array.length) {\n        var index = search(array, event[prop], prop);\n        array.splice(index + 1, 0, event);\n    }\n    else {\n        array.push(event);\n    }\n}\nexports.insert = insert;\n//# sourceMappingURL=BinarySearch.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ControlChange = exports.controlChangeIds = exports.controlChangeNames = void 0;\n/**\n * A map of values to control change names\n * @hidden\n */\nexports.controlChangeNames = {\n    1: \"modulationWheel\",\n    2: \"breath\",\n    4: \"footController\",\n    5: \"portamentoTime\",\n    7: \"volume\",\n    8: \"balance\",\n    10: \"pan\",\n    64: \"sustain\",\n    65: \"portamentoTime\",\n    66: \"sostenuto\",\n    67: \"softPedal\",\n    68: \"legatoFootswitch\",\n    84: \"portamentoControl\",\n};\n/**\n * swap the keys and values\n * @hidden\n */\nexports.controlChangeIds = Object.keys(exports.controlChangeNames).reduce(function (obj, key) {\n    obj[exports.controlChangeNames[key]] = key;\n    return obj;\n}, {});\nvar privateHeaderMap = new WeakMap();\nvar privateCCNumberMap = new WeakMap();\n/**\n * Represents a control change event\n */\nvar ControlChange = /** @class */ (function () {\n    /**\n     * @param event\n     * @param header\n     */\n    function ControlChange(event, header) {\n        privateHeaderMap.set(this, header);\n        privateCCNumberMap.set(this, event.controllerType);\n        this.ticks = event.absoluteTime;\n        this.value = event.value;\n    }\n    Object.defineProperty(ControlChange.prototype, \"number\", {\n        /**\n         * The controller number\n         */\n        get: function () {\n            return privateCCNumberMap.get(this);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ControlChange.prototype, \"name\", {\n        /**\n         * return the common name of the control number if it exists\n         */\n        get: function () {\n            if (exports.controlChangeNames[this.number]) {\n                return exports.controlChangeNames[this.number];\n            }\n            else {\n                return null;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ControlChange.prototype, \"time\", {\n        /**\n         * The time of the event in seconds\n         */\n        get: function () {\n            var header = privateHeaderMap.get(this);\n            return header.ticksToSeconds(this.ticks);\n        },\n        set: function (t) {\n            var header = privateHeaderMap.get(this);\n            this.ticks = header.secondsToTicks(t);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ControlChange.prototype.toJSON = function () {\n        return {\n            number: this.number,\n            ticks: this.ticks,\n            time: this.time,\n            value: this.value,\n        };\n    };\n    return ControlChange;\n}());\nexports.ControlChange = ControlChange;\n//# sourceMappingURL=ControlChange.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createControlChanges = void 0;\nvar ControlChange_1 = require(\"./ControlChange\");\n/**\n * Automatically creates an alias for named control values using Proxies\n * @hidden\n */\nfunction createControlChanges() {\n    return new Proxy({}, {\n        // tslint:disable-next-line: typedef\n        get: function (target, handler) {\n            if (target[handler]) {\n                return target[handler];\n            }\n            else if (ControlChange_1.controlChangeIds.hasOwnProperty(handler)) {\n                return target[ControlChange_1.controlChangeIds[handler]];\n            }\n        },\n        // tslint:disable-next-line: typedef\n        set: function (target, handler, value) {\n            if (ControlChange_1.controlChangeIds.hasOwnProperty(handler)) {\n                target[ControlChange_1.controlChangeIds[handler]] = value;\n            }\n            else {\n                target[handler] = value;\n            }\n            return true;\n        },\n    });\n}\nexports.createControlChanges = createControlChanges;\n//# sourceMappingURL=ControlChanges.js.map","\"use strict\";\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.encode = void 0;\nvar midi_file_1 = require(\"midi-file\");\nvar Header_1 = require(\"./Header\");\nvar array_flatten_1 = require(\"array-flatten\");\nfunction encodeNote(note, channel) {\n    return [{\n            absoluteTime: note.ticks,\n            channel: channel,\n            deltaTime: 0,\n            noteNumber: note.midi,\n            type: \"noteOn\",\n            velocity: Math.floor(note.velocity * 127),\n        },\n        {\n            absoluteTime: note.ticks + note.durationTicks,\n            channel: channel,\n            deltaTime: 0,\n            noteNumber: note.midi,\n            type: \"noteOff\",\n            velocity: Math.floor(note.noteOffVelocity * 127),\n        }];\n}\nfunction encodeNotes(track) {\n    return (0, array_flatten_1.flatten)(track.notes.map(function (note) { return encodeNote(note, track.channel); }));\n}\nfunction encodeControlChange(cc, channel) {\n    return {\n        absoluteTime: cc.ticks,\n        channel: channel,\n        controllerType: cc.number,\n        deltaTime: 0,\n        type: \"controller\",\n        value: Math.floor(cc.value * 127),\n    };\n}\nfunction encodeControlChanges(track) {\n    var controlChanges = [];\n    for (var i = 0; i < 127; i++) {\n        if (track.controlChanges.hasOwnProperty(i)) {\n            track.controlChanges[i].forEach(function (cc) {\n                controlChanges.push(encodeControlChange(cc, track.channel));\n            });\n        }\n    }\n    return controlChanges;\n}\nfunction encodePitchBend(pb, channel) {\n    return {\n        absoluteTime: pb.ticks,\n        channel: channel,\n        deltaTime: 0,\n        type: \"pitchBend\",\n        value: pb.value,\n    };\n}\nfunction encodePitchBends(track) {\n    var pitchBends = [];\n    track.pitchBends.forEach(function (pb) {\n        pitchBends.push(encodePitchBend(pb, track.channel));\n    });\n    return pitchBends;\n}\nfunction encodeInstrument(track) {\n    return {\n        absoluteTime: 0,\n        channel: track.channel,\n        deltaTime: 0,\n        programNumber: track.instrument.number,\n        type: \"programChange\",\n    };\n}\nfunction encodeTrackName(name) {\n    return {\n        absoluteTime: 0,\n        deltaTime: 0,\n        meta: true,\n        text: name,\n        type: \"trackName\",\n    };\n}\nfunction encodeTempo(tempo) {\n    return {\n        absoluteTime: tempo.ticks,\n        deltaTime: 0,\n        meta: true,\n        microsecondsPerBeat: Math.floor(60000000 / tempo.bpm),\n        type: \"setTempo\",\n    };\n}\nfunction encodeTimeSignature(timeSig) {\n    return {\n        absoluteTime: timeSig.ticks,\n        deltaTime: 0,\n        denominator: timeSig.timeSignature[1],\n        meta: true,\n        metronome: 24,\n        numerator: timeSig.timeSignature[0],\n        thirtyseconds: 8,\n        type: \"timeSignature\",\n    };\n}\n// function encodeMeta(event: )\nfunction encodeKeySignature(keySig) {\n    var keyIndex = Header_1.keySignatureKeys.indexOf(keySig.key);\n    return {\n        absoluteTime: keySig.ticks,\n        deltaTime: 0,\n        key: keyIndex + 7,\n        meta: true,\n        scale: keySig.scale === \"major\" ? 0 : 1,\n        type: \"keySignature\",\n    };\n}\nfunction encodeText(textEvent) {\n    return {\n        absoluteTime: textEvent.ticks,\n        deltaTime: 0,\n        meta: true,\n        text: textEvent.text,\n        type: textEvent.type,\n    };\n}\n/**\n * Convert the MIDI object to an array.\n */\nfunction encode(midi) {\n    var midiData = {\n        header: {\n            format: 1,\n            numTracks: midi.tracks.length + 1,\n            ticksPerBeat: midi.header.ppq,\n        },\n        tracks: __spreadArray([\n            __spreadArray(__spreadArray(__spreadArray(__spreadArray([\n                // The name data.\n                {\n                    absoluteTime: 0,\n                    deltaTime: 0,\n                    meta: true,\n                    text: midi.header.name,\n                    type: \"trackName\",\n                }\n            ], midi.header.keySignatures.map(function (keySig) { return encodeKeySignature(keySig); }), true), midi.header.meta.map(function (e) { return encodeText(e); }), true), midi.header.tempos.map(function (tempo) { return encodeTempo(tempo); }), true), midi.header.timeSignatures.map(function (timeSig) { return encodeTimeSignature(timeSig); }), true)\n        ], midi.tracks.map(function (track) {\n            return __spreadArray(__spreadArray(__spreadArray([\n                // Add the name\n                encodeTrackName(track.name),\n                // the instrument\n                encodeInstrument(track)\n            ], encodeNotes(track), true), encodeControlChanges(track), true), encodePitchBends(track), true);\n        }), true),\n    };\n    // Sort and set `deltaTime` of all of the tracks.\n    midiData.tracks = midiData.tracks.map(function (track) {\n        track = track.sort(function (a, b) { return a.absoluteTime - b.absoluteTime; });\n        var lastTime = 0;\n        track.forEach(function (note) {\n            note.deltaTime = note.absoluteTime - lastTime;\n            lastTime = note.absoluteTime;\n            delete note.absoluteTime;\n        });\n        // End of track.\n        track.push({\n            deltaTime: 0,\n            meta: true,\n            type: \"endOfTrack\",\n        });\n        return track;\n    });\n    // Rreturn `midiData`.\n    return new Uint8Array((0, midi_file_1.writeMidi)(midiData));\n}\nexports.encode = encode;\n//# sourceMappingURL=Encode.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Header = exports.keySignatureKeys = void 0;\nvar BinarySearch_1 = require(\"./BinarySearch\");\nvar privatePPQMap = new WeakMap();\n/**\n * @hidden\n */\nexports.keySignatureKeys = [\n    \"Cb\",\n    \"Gb\",\n    \"Db\",\n    \"Ab\",\n    \"Eb\",\n    \"Bb\",\n    \"F\",\n    \"C\",\n    \"G\",\n    \"D\",\n    \"A\",\n    \"E\",\n    \"B\",\n    \"F#\",\n    \"C#\",\n];\n/**\n * The parsed MIDI file header.\n */\nvar Header = /** @class */ (function () {\n    function Header(midiData) {\n        var _this = this;\n        /**\n         * The array of all the tempo events.\n         */\n        this.tempos = [];\n        /**\n         * The time signatures.\n         */\n        this.timeSignatures = [];\n        /**\n         * The time signatures.\n         */\n        this.keySignatures = [];\n        /**\n         * Additional meta events.\n         */\n        this.meta = [];\n        /**\n         * The name of the MIDI file;\n         */\n        this.name = \"\";\n        // Look through all the tracks for tempo changes.\n        privatePPQMap.set(this, 480);\n        if (midiData) {\n            privatePPQMap.set(this, midiData.header.ticksPerBeat);\n            // Check time signature and tempo events from all of the tracks.\n            midiData.tracks.forEach(function (track) {\n                track.forEach(function (event) {\n                    if (event.meta) {\n                        if (event.type === \"timeSignature\") {\n                            _this.timeSignatures.push({\n                                ticks: event.absoluteTime,\n                                timeSignature: [\n                                    event.numerator,\n                                    event.denominator,\n                                ],\n                            });\n                        }\n                        else if (event.type === \"setTempo\") {\n                            _this.tempos.push({\n                                bpm: 60000000 / event.microsecondsPerBeat,\n                                ticks: event.absoluteTime,\n                            });\n                        }\n                        else if (event.type === \"keySignature\") {\n                            _this.keySignatures.push({\n                                key: exports.keySignatureKeys[event.key + 7],\n                                scale: event.scale === 0 ? \"major\" : \"minor\",\n                                ticks: event.absoluteTime,\n                            });\n                        }\n                    }\n                });\n            });\n            // Check the first track for other relevant data.\n            var firstTrackCurrentTicks_1 = 0; // Used for absolute times.\n            midiData.tracks[0].forEach(function (event) {\n                firstTrackCurrentTicks_1 += event.deltaTime;\n                if (event.meta) {\n                    if (event.type === \"trackName\") {\n                        _this.name = event.text;\n                    }\n                    else if (event.type === \"text\" ||\n                        event.type === \"cuePoint\" ||\n                        event.type === \"marker\" ||\n                        event.type === \"lyrics\") {\n                        _this.meta.push({\n                            text: event.text,\n                            ticks: firstTrackCurrentTicks_1,\n                            type: event.type,\n                        });\n                    }\n                }\n            });\n            this.update();\n        }\n    }\n    /**\n     * This must be invoked after any changes are made to the tempo array\n     * or the timeSignature array for the updated values to be reflected.\n     */\n    Header.prototype.update = function () {\n        var _this = this;\n        var currentTime = 0;\n        var lastEventBeats = 0;\n        // Make sure it's sorted;\n        this.tempos.sort(function (a, b) { return a.ticks - b.ticks; });\n        this.tempos.forEach(function (event, index) {\n            var lastBPM = index > 0 ? _this.tempos[index - 1].bpm : _this.tempos[0].bpm;\n            var beats = event.ticks / _this.ppq - lastEventBeats;\n            var elapsedSeconds = (60 / lastBPM) * beats;\n            event.time = elapsedSeconds + currentTime;\n            currentTime = event.time;\n            lastEventBeats += beats;\n        });\n        this.timeSignatures.sort(function (a, b) { return a.ticks - b.ticks; });\n        this.timeSignatures.forEach(function (event, index) {\n            var lastEvent = index > 0\n                ? _this.timeSignatures[index - 1]\n                : _this.timeSignatures[0];\n            var elapsedBeats = (event.ticks - lastEvent.ticks) / _this.ppq;\n            var elapsedMeasures = elapsedBeats /\n                lastEvent.timeSignature[0] /\n                (lastEvent.timeSignature[1] / 4);\n            lastEvent.measures = lastEvent.measures || 0;\n            event.measures = elapsedMeasures + lastEvent.measures;\n        });\n    };\n    /**\n     * Convert ticks into seconds based on the tempo changes.\n     */\n    Header.prototype.ticksToSeconds = function (ticks) {\n        // Find the relevant position.\n        var index = (0, BinarySearch_1.search)(this.tempos, ticks);\n        if (index !== -1) {\n            var tempo = this.tempos[index];\n            var tempoTime = tempo.time;\n            var elapsedBeats = (ticks - tempo.ticks) / this.ppq;\n            return tempoTime + (60 / tempo.bpm) * elapsedBeats;\n        }\n        else {\n            // Assume 120.\n            var beats = ticks / this.ppq;\n            return (60 / 120) * beats;\n        }\n    };\n    /**\n     * Convert ticks into measures based off of the time signatures.\n     */\n    Header.prototype.ticksToMeasures = function (ticks) {\n        var index = (0, BinarySearch_1.search)(this.timeSignatures, ticks);\n        if (index !== -1) {\n            var timeSigEvent = this.timeSignatures[index];\n            var elapsedBeats = (ticks - timeSigEvent.ticks) / this.ppq;\n            return (timeSigEvent.measures +\n                elapsedBeats /\n                    (timeSigEvent.timeSignature[0] /\n                        timeSigEvent.timeSignature[1]) /\n                    4);\n        }\n        else {\n            return ticks / this.ppq / 4;\n        }\n    };\n    Object.defineProperty(Header.prototype, \"ppq\", {\n        /**\n         * The number of ticks per quarter note.\n         */\n        get: function () {\n            return privatePPQMap.get(this);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Convert seconds to ticks based on the tempo events.\n     */\n    Header.prototype.secondsToTicks = function (seconds) {\n        // Find the relevant position.\n        var index = (0, BinarySearch_1.search)(this.tempos, seconds, \"time\");\n        if (index !== -1) {\n            var tempo = this.tempos[index];\n            var tempoTime = tempo.time;\n            var elapsedTime = seconds - tempoTime;\n            var elapsedBeats = elapsedTime / (60 / tempo.bpm);\n            return Math.round(tempo.ticks + elapsedBeats * this.ppq);\n        }\n        else {\n            // Assume 120.\n            var beats = seconds / (60 / 120);\n            return Math.round(beats * this.ppq);\n        }\n    };\n    /**\n     * Convert the header into an object.\n     */\n    Header.prototype.toJSON = function () {\n        return {\n            keySignatures: this.keySignatures,\n            meta: this.meta,\n            name: this.name,\n            ppq: this.ppq,\n            tempos: this.tempos.map(function (t) {\n                return {\n                    bpm: t.bpm,\n                    ticks: t.ticks,\n                };\n            }),\n            timeSignatures: this.timeSignatures,\n        };\n    };\n    /**\n     * Parse a header json object.\n     */\n    Header.prototype.fromJSON = function (json) {\n        this.name = json.name;\n        // Clone all the attributes.\n        this.tempos = json.tempos.map(function (t) { return Object.assign({}, t); });\n        this.timeSignatures = json.timeSignatures.map(function (t) {\n            return Object.assign({}, t);\n        });\n        this.keySignatures = json.keySignatures.map(function (t) {\n            return Object.assign({}, t);\n        });\n        this.meta = json.meta.map(function (t) { return Object.assign({}, t); });\n        privatePPQMap.set(this, json.ppq);\n        this.update();\n    };\n    /**\n     * Update the tempo of the midi to a single tempo. Will remove and replace\n     * any other tempos currently set and update all of the event timing.\n     * @param bpm The tempo in beats per second.\n     */\n    Header.prototype.setTempo = function (bpm) {\n        this.tempos = [\n            {\n                bpm: bpm,\n                ticks: 0,\n            },\n        ];\n        this.update();\n    };\n    return Header;\n}());\nexports.Header = Header;\n//# sourceMappingURL=Header.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Instrument = void 0;\nvar InstrumentMaps_1 = require(\"./InstrumentMaps\");\n/**\n * @hidden\n */\nvar privateTrackMap = new WeakMap();\n/**\n * Describes the MIDI instrument of a track.\n */\nvar Instrument = /** @class */ (function () {\n    /**\n     * @param trackData\n     * @param track\n     */\n    function Instrument(trackData, track) {\n        /**\n         * The instrument number. Defaults to 0.\n         */\n        this.number = 0;\n        privateTrackMap.set(this, track);\n        this.number = 0;\n        if (trackData) {\n            var programChange = trackData.find(function (e) { return e.type === \"programChange\"; });\n            // Set 'number' from 'programNumber' if exists.\n            if (programChange) {\n                this.number = programChange.programNumber;\n            }\n        }\n    }\n    Object.defineProperty(Instrument.prototype, \"name\", {\n        /**\n         * The common name of the instrument.\n         */\n        get: function () {\n            if (this.percussion) {\n                return InstrumentMaps_1.DrumKitByPatchID[this.number];\n            }\n            else {\n                return InstrumentMaps_1.instrumentByPatchID[this.number];\n            }\n        },\n        set: function (n) {\n            var patchNumber = InstrumentMaps_1.instrumentByPatchID.indexOf(n);\n            if (patchNumber !== -1) {\n                this.number = patchNumber;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Instrument.prototype, \"family\", {\n        /**\n         * The instrument family, e.g. \"piano\".\n         */\n        get: function () {\n            if (this.percussion) {\n                return \"drums\";\n            }\n            else {\n                return InstrumentMaps_1.InstrumentFamilyByID[Math.floor(this.number / 8)];\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Instrument.prototype, \"percussion\", {\n        /**\n         * If the instrument is a percussion instrument.\n         */\n        get: function () {\n            var track = privateTrackMap.get(this);\n            return track.channel === 9;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Convert it to JSON form.\n     */\n    Instrument.prototype.toJSON = function () {\n        return {\n            family: this.family,\n            number: this.number,\n            name: this.name\n        };\n    };\n    /**\n     * Convert from JSON form.\n     */\n    Instrument.prototype.fromJSON = function (json) {\n        this.number = json.number;\n    };\n    return Instrument;\n}());\nexports.Instrument = Instrument;\n//# sourceMappingURL=Instrument.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DrumKitByPatchID = exports.InstrumentFamilyByID = exports.instrumentByPatchID = void 0;\nexports.instrumentByPatchID = [\n    \"acoustic grand piano\",\n    \"bright acoustic piano\",\n    \"electric grand piano\",\n    \"honky-tonk piano\",\n    \"electric piano 1\",\n    \"electric piano 2\",\n    \"harpsichord\",\n    \"clavi\",\n    \"celesta\",\n    \"glockenspiel\",\n    \"music box\",\n    \"vibraphone\",\n    \"marimba\",\n    \"xylophone\",\n    \"tubular bells\",\n    \"dulcimer\",\n    \"drawbar organ\",\n    \"percussive organ\",\n    \"rock organ\",\n    \"church organ\",\n    \"reed organ\",\n    \"accordion\",\n    \"harmonica\",\n    \"tango accordion\",\n    \"acoustic guitar (nylon)\",\n    \"acoustic guitar (steel)\",\n    \"electric guitar (jazz)\",\n    \"electric guitar (clean)\",\n    \"electric guitar (muted)\",\n    \"overdriven guitar\",\n    \"distortion guitar\",\n    \"guitar harmonics\",\n    \"acoustic bass\",\n    \"electric bass (finger)\",\n    \"electric bass (pick)\",\n    \"fretless bass\",\n    \"slap bass 1\",\n    \"slap bass 2\",\n    \"synth bass 1\",\n    \"synth bass 2\",\n    \"violin\",\n    \"viola\",\n    \"cello\",\n    \"contrabass\",\n    \"tremolo strings\",\n    \"pizzicato strings\",\n    \"orchestral harp\",\n    \"timpani\",\n    \"string ensemble 1\",\n    \"string ensemble 2\",\n    \"synthstrings 1\",\n    \"synthstrings 2\",\n    \"choir aahs\",\n    \"voice oohs\",\n    \"synth voice\",\n    \"orchestra hit\",\n    \"trumpet\",\n    \"trombone\",\n    \"tuba\",\n    \"muted trumpet\",\n    \"french horn\",\n    \"brass section\",\n    \"synthbrass 1\",\n    \"synthbrass 2\",\n    \"soprano sax\",\n    \"alto sax\",\n    \"tenor sax\",\n    \"baritone sax\",\n    \"oboe\",\n    \"english horn\",\n    \"bassoon\",\n    \"clarinet\",\n    \"piccolo\",\n    \"flute\",\n    \"recorder\",\n    \"pan flute\",\n    \"blown bottle\",\n    \"shakuhachi\",\n    \"whistle\",\n    \"ocarina\",\n    \"lead 1 (square)\",\n    \"lead 2 (sawtooth)\",\n    \"lead 3 (calliope)\",\n    \"lead 4 (chiff)\",\n    \"lead 5 (charang)\",\n    \"lead 6 (voice)\",\n    \"lead 7 (fifths)\",\n    \"lead 8 (bass + lead)\",\n    \"pad 1 (new age)\",\n    \"pad 2 (warm)\",\n    \"pad 3 (polysynth)\",\n    \"pad 4 (choir)\",\n    \"pad 5 (bowed)\",\n    \"pad 6 (metallic)\",\n    \"pad 7 (halo)\",\n    \"pad 8 (sweep)\",\n    \"fx 1 (rain)\",\n    \"fx 2 (soundtrack)\",\n    \"fx 3 (crystal)\",\n    \"fx 4 (atmosphere)\",\n    \"fx 5 (brightness)\",\n    \"fx 6 (goblins)\",\n    \"fx 7 (echoes)\",\n    \"fx 8 (sci-fi)\",\n    \"sitar\",\n    \"banjo\",\n    \"shamisen\",\n    \"koto\",\n    \"kalimba\",\n    \"bag pipe\",\n    \"fiddle\",\n    \"shanai\",\n    \"tinkle bell\",\n    \"agogo\",\n    \"steel drums\",\n    \"woodblock\",\n    \"taiko drum\",\n    \"melodic tom\",\n    \"synth drum\",\n    \"reverse cymbal\",\n    \"guitar fret noise\",\n    \"breath noise\",\n    \"seashore\",\n    \"bird tweet\",\n    \"telephone ring\",\n    \"helicopter\",\n    \"applause\",\n    \"gunshot\",\n];\nexports.InstrumentFamilyByID = [\n    \"piano\",\n    \"chromatic percussion\",\n    \"organ\",\n    \"guitar\",\n    \"bass\",\n    \"strings\",\n    \"ensemble\",\n    \"brass\",\n    \"reed\",\n    \"pipe\",\n    \"synth lead\",\n    \"synth pad\",\n    \"synth effects\",\n    \"world\",\n    \"percussive\",\n    \"sound effects\",\n];\nexports.DrumKitByPatchID = {\n    0: \"standard kit\",\n    8: \"room kit\",\n    16: \"power kit\",\n    24: \"electronic kit\",\n    25: \"tr-808 kit\",\n    32: \"jazz kit\",\n    40: \"brush kit\",\n    48: \"orchestra kit\",\n    56: \"sound fx kit\",\n};\n//# sourceMappingURL=InstrumentMaps.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Header = exports.Track = exports.Midi = void 0;\nvar midi_file_1 = require(\"midi-file\");\nvar Header_1 = require(\"./Header\");\nvar Track_1 = require(\"./Track\");\nvar Encode_1 = require(\"./Encode\");\n/**\n * The main midi parsing class.\n */\nvar Midi = /** @class */ (function () {\n    /**\n     * Parse the midi data\n     */\n    function Midi(midiArray) {\n        var _this = this;\n        // Parse the MIDI data if there is any.\n        var midiData = null;\n        if (midiArray) {\n            // Transform midiArray to ArrayLike<number>\n            // only if it's an ArrayBuffer.\n            var midiArrayLike = midiArray instanceof ArrayBuffer\n                ? new Uint8Array(midiArray)\n                : midiArray;\n            // Parse MIDI data.\n            midiData = (0, midi_file_1.parseMidi)(midiArrayLike);\n            // Add the absolute times to each of the tracks.\n            midiData.tracks.forEach(function (track) {\n                var currentTicks = 0;\n                track.forEach(function (event) {\n                    currentTicks += event.deltaTime;\n                    event.absoluteTime = currentTicks;\n                });\n            });\n            // Ensure at most one instrument per track.\n            midiData.tracks = splitTracks(midiData.tracks);\n        }\n        this.header = new Header_1.Header(midiData);\n        this.tracks = [];\n        // Parse MIDI data.\n        if (midiArray) {\n            // Format 0, everything is on the same track.\n            this.tracks = midiData.tracks.map(function (trackData) { return new Track_1.Track(trackData, _this.header); });\n            // If it's format 1 and there are no notes on the first track, remove it.\n            if (midiData.header.format === 1 && this.tracks[0].duration === 0) {\n                this.tracks.shift();\n            }\n        }\n    }\n    /**\n     * Download and parse the MIDI file. Returns a promise\n     * which resolves to the generated MIDI file.\n     * @param url The URL to fetch.\n     */\n    Midi.fromUrl = function (url) {\n        return __awaiter(this, void 0, void 0, function () {\n            var response, arrayBuffer;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, fetch(url)];\n                    case 1:\n                        response = _a.sent();\n                        if (!response.ok) return [3 /*break*/, 3];\n                        return [4 /*yield*/, response.arrayBuffer()];\n                    case 2:\n                        arrayBuffer = _a.sent();\n                        return [2 /*return*/, new Midi(arrayBuffer)];\n                    case 3: throw new Error(\"Could not load '\".concat(url, \"'\"));\n                }\n            });\n        });\n    };\n    Object.defineProperty(Midi.prototype, \"name\", {\n        /**\n         * The name of the midi file, taken from the first track.\n         */\n        get: function () {\n            return this.header.name;\n        },\n        set: function (n) {\n            this.header.name = n;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Midi.prototype, \"duration\", {\n        /**\n         * The total length of the file in seconds.\n         */\n        get: function () {\n            // Get the max of the last note of all the tracks.\n            var durations = this.tracks.map(function (t) { return t.duration; });\n            return Math.max.apply(Math, durations);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Midi.prototype, \"durationTicks\", {\n        /**\n         * The total length of the file in ticks.\n         */\n        get: function () {\n            // Get the max of the last note of all the tracks.\n            var durationTicks = this.tracks.map(function (t) { return t.durationTicks; });\n            return Math.max.apply(Math, durationTicks);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Add a track to the MIDI file.\n     */\n    Midi.prototype.addTrack = function () {\n        var track = new Track_1.Track(undefined, this.header);\n        this.tracks.push(track);\n        return track;\n    };\n    /**\n     * Encode the MIDI as a Uint8Array.\n     */\n    Midi.prototype.toArray = function () {\n        return (0, Encode_1.encode)(this);\n    };\n    /**\n     * Convert the MIDI object to JSON.\n     */\n    Midi.prototype.toJSON = function () {\n        return {\n            header: this.header.toJSON(),\n            tracks: this.tracks.map(function (track) { return track.toJSON(); }),\n        };\n    };\n    /**\n     * Parse a JSON representation of the object. Will overwrite the current\n     * tracks and header.\n     */\n    Midi.prototype.fromJSON = function (json) {\n        var _this = this;\n        this.header = new Header_1.Header();\n        this.header.fromJSON(json.header);\n        this.tracks = json.tracks.map(function (trackJSON) {\n            var track = new Track_1.Track(undefined, _this.header);\n            track.fromJSON(trackJSON);\n            return track;\n        });\n    };\n    /**\n     * Clone the entire object MIDI object.\n     */\n    Midi.prototype.clone = function () {\n        var midi = new Midi();\n        midi.fromJSON(this.toJSON());\n        return midi;\n    };\n    return Midi;\n}());\nexports.Midi = Midi;\nvar Track_2 = require(\"./Track\");\nObject.defineProperty(exports, \"Track\", { enumerable: true, get: function () { return Track_2.Track; } });\nvar Header_2 = require(\"./Header\");\nObject.defineProperty(exports, \"Header\", { enumerable: true, get: function () { return Header_2.Header; } });\n/**\n * Given a list of MIDI tracks, make sure that each channel corresponds to at\n * most one channel and at most one instrument. This means splitting up tracks\n * that contain more than one channel or instrument.\n */\nfunction splitTracks(tracks) {\n    var newTracks = [];\n    for (var i = 0; i < tracks.length; i++) {\n        var defaultTrack = newTracks.length;\n        // a map from [program, channel] tuples to new track numbers\n        var trackMap = new Map();\n        // a map from channel numbers to current program numbers\n        var currentProgram = Array(16).fill(0);\n        for (var _i = 0, _a = tracks[i]; _i < _a.length; _i++) {\n            var event_1 = _a[_i];\n            var targetTrack = defaultTrack;\n            // If the event has a channel, we need to find that channel's current\n            // program number and the appropriate track for this [program, channel]\n            // pair.\n            var channel = event_1.channel;\n            if (channel !== undefined) {\n                if (event_1.type === \"programChange\") {\n                    currentProgram[channel] = event_1.programNumber;\n                }\n                var program = currentProgram[channel];\n                var trackKey = \"\".concat(program, \" \").concat(channel);\n                if (trackMap.has(trackKey)) {\n                    targetTrack = trackMap.get(trackKey);\n                }\n                else {\n                    targetTrack = defaultTrack + trackMap.size;\n                    trackMap.set(trackKey, targetTrack);\n                }\n            }\n            if (!newTracks[targetTrack]) {\n                newTracks.push([]);\n            }\n            newTracks[targetTrack].push(event_1);\n        }\n    }\n    return newTracks;\n}\n//# sourceMappingURL=Midi.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Note = void 0;\n/**\n * Convert a MIDI note into a pitch.\n */\nfunction midiToPitch(midi) {\n    var octave = Math.floor(midi / 12) - 1;\n    return midiToPitchClass(midi) + octave.toString();\n}\n/**\n * Convert a MIDI note to a pitch class (just the pitch no octave).\n */\nfunction midiToPitchClass(midi) {\n    var scaleIndexToNote = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"];\n    var note = midi % 12;\n    return scaleIndexToNote[note];\n}\n/**\n * Convert a pitch class to a MIDI note.\n */\nfunction pitchClassToMidi(pitch) {\n    var scaleIndexToNote = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"];\n    return scaleIndexToNote.indexOf(pitch);\n}\n/**\n * Convert a pitch to a MIDI number.\n */\n// tslint:disable-next-line: only-arrow-functions typedef\nvar pitchToMidi = (function () {\n    var regexp = /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i;\n    var noteToScaleIndex = {\n        // tslint:disable-next-line: object-literal-sort-keys\n        cbb: -2, cb: -1, c: 0, \"c#\": 1, cx: 2,\n        dbb: 0, db: 1, d: 2, \"d#\": 3, dx: 4,\n        ebb: 2, eb: 3, e: 4, \"e#\": 5, ex: 6,\n        fbb: 3, fb: 4, f: 5, \"f#\": 6, fx: 7,\n        gbb: 5, gb: 6, g: 7, \"g#\": 8, gx: 9,\n        abb: 7, ab: 8, a: 9, \"a#\": 10, ax: 11,\n        bbb: 9, bb: 10, b: 11, \"b#\": 12, bx: 13,\n    };\n    return function (note) {\n        var split = regexp.exec(note);\n        var pitch = split[1];\n        var octave = split[2];\n        var index = noteToScaleIndex[pitch.toLowerCase()];\n        return index + (parseInt(octave, 10) + 1) * 12;\n    };\n}());\nvar privateHeaderMap = new WeakMap();\n/**\n * A Note consists of a `noteOn` and `noteOff` event.\n */\nvar Note = /** @class */ (function () {\n    function Note(noteOn, noteOff, header) {\n        privateHeaderMap.set(this, header);\n        this.midi = noteOn.midi;\n        this.velocity = noteOn.velocity;\n        this.noteOffVelocity = noteOff.velocity;\n        this.ticks = noteOn.ticks;\n        this.durationTicks = noteOff.ticks - noteOn.ticks;\n    }\n    Object.defineProperty(Note.prototype, \"name\", {\n        /**\n         * The note name and octave in scientific pitch notation, e.g. \"C4\".\n         */\n        get: function () {\n            return midiToPitch(this.midi);\n        },\n        set: function (n) {\n            this.midi = pitchToMidi(n);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Note.prototype, \"octave\", {\n        /**\n         * The notes octave number.\n         */\n        get: function () {\n            return Math.floor(this.midi / 12) - 1;\n        },\n        set: function (o) {\n            var diff = o - this.octave;\n            this.midi += diff * 12;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Note.prototype, \"pitch\", {\n        /**\n         * The pitch class name. e.g. \"A\".\n         */\n        get: function () {\n            return midiToPitchClass(this.midi);\n        },\n        set: function (p) {\n            this.midi = 12 * (this.octave + 1) + pitchClassToMidi(p);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Note.prototype, \"duration\", {\n        /**\n         * The duration of the segment in seconds.\n         */\n        get: function () {\n            var header = privateHeaderMap.get(this);\n            return header.ticksToSeconds(this.ticks + this.durationTicks) - header.ticksToSeconds(this.ticks);\n        },\n        set: function (d) {\n            var header = privateHeaderMap.get(this);\n            var noteEndTicks = header.secondsToTicks(this.time + d);\n            this.durationTicks = noteEndTicks - this.ticks;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Note.prototype, \"time\", {\n        /**\n         * The time of the event in seconds.\n         */\n        get: function () {\n            var header = privateHeaderMap.get(this);\n            return header.ticksToSeconds(this.ticks);\n        },\n        set: function (t) {\n            var header = privateHeaderMap.get(this);\n            this.ticks = header.secondsToTicks(t);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Note.prototype, \"bars\", {\n        /**\n         * The number of measures (and partial measures) to this beat.\n         * Takes into account time signature changes.\n         * @readonly\n         */\n        get: function () {\n            var header = privateHeaderMap.get(this);\n            return header.ticksToMeasures(this.ticks);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Note.prototype.toJSON = function () {\n        return {\n            duration: this.duration,\n            durationTicks: this.durationTicks,\n            midi: this.midi,\n            name: this.name,\n            ticks: this.ticks,\n            time: this.time,\n            velocity: this.velocity,\n        };\n    };\n    return Note;\n}());\nexports.Note = Note;\n//# sourceMappingURL=Note.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PitchBend = void 0;\nvar privateHeaderMap = new WeakMap();\n/**\n * Represents a pitch bend event.\n */\nvar PitchBend = /** @class */ (function () {\n    /**\n     * @param event\n     * @param header\n     */\n    function PitchBend(event, header) {\n        privateHeaderMap.set(this, header);\n        this.ticks = event.absoluteTime;\n        this.value = event.value;\n    }\n    Object.defineProperty(PitchBend.prototype, \"time\", {\n        /**\n         * The time of the event in seconds\n         */\n        get: function () {\n            var header = privateHeaderMap.get(this);\n            return header.ticksToSeconds(this.ticks);\n        },\n        set: function (t) {\n            var header = privateHeaderMap.get(this);\n            this.ticks = header.secondsToTicks(t);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    PitchBend.prototype.toJSON = function () {\n        return {\n            ticks: this.ticks,\n            time: this.time,\n            value: this.value,\n        };\n    };\n    return PitchBend;\n}());\nexports.PitchBend = PitchBend;\n//# sourceMappingURL=PitchBend.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Track = void 0;\nvar BinarySearch_1 = require(\"./BinarySearch\");\nvar ControlChange_1 = require(\"./ControlChange\");\nvar ControlChanges_1 = require(\"./ControlChanges\");\nvar PitchBend_1 = require(\"./PitchBend\");\nvar Instrument_1 = require(\"./Instrument\");\nvar Note_1 = require(\"./Note\");\nvar privateHeaderMap = new WeakMap();\n/**\n * A Track is a collection of 'notes' and 'controlChanges'.\n */\nvar Track = /** @class */ (function () {\n    function Track(trackData, header) {\n        var _this = this;\n        /**\n         * The name of the track.\n         */\n        this.name = \"\";\n        /**\n         * The track's note events.\n         */\n        this.notes = [];\n        /**\n         * The control change events.\n         */\n        this.controlChanges = (0, ControlChanges_1.createControlChanges)();\n        /**\n         * The pitch bend events.\n         */\n        this.pitchBends = [];\n        privateHeaderMap.set(this, header);\n        if (trackData) {\n            // Get the name of the track.\n            var nameEvent = trackData.find(function (e) { return e.type === \"trackName\"; });\n            // Set empty name if 'trackName' event isn't found.\n            this.name = nameEvent ? nameEvent.text : \"\";\n        }\n        this.instrument = new Instrument_1.Instrument(trackData, this);\n        // Defaults to 0.\n        this.channel = 0;\n        if (trackData) {\n            var noteOns = trackData.filter(function (event) { return event.type === \"noteOn\"; });\n            var noteOffs = trackData.filter(function (event) { return event.type === \"noteOff\"; });\n            var _loop_1 = function () {\n                var currentNote = noteOns.shift();\n                // Set the channel based on the note.\n                this_1.channel = currentNote.channel;\n                // Find the corresponding note off.\n                var offIndex = noteOffs.findIndex(function (note) {\n                    return note.noteNumber === currentNote.noteNumber &&\n                        note.absoluteTime >= currentNote.absoluteTime;\n                });\n                if (offIndex !== -1) {\n                    // Once it's got the note off, add it.\n                    var noteOff = noteOffs.splice(offIndex, 1)[0];\n                    this_1.addNote({\n                        durationTicks: noteOff.absoluteTime - currentNote.absoluteTime,\n                        midi: currentNote.noteNumber,\n                        noteOffVelocity: noteOff.velocity / 127,\n                        ticks: currentNote.absoluteTime,\n                        velocity: currentNote.velocity / 127,\n                    });\n                }\n            };\n            var this_1 = this;\n            while (noteOns.length) {\n                _loop_1();\n            }\n            var controlChanges = trackData.filter(function (event) { return event.type === \"controller\"; });\n            controlChanges.forEach(function (event) {\n                _this.addCC({\n                    number: event.controllerType,\n                    ticks: event.absoluteTime,\n                    value: event.value / 127,\n                });\n            });\n            var pitchBends = trackData.filter(function (event) { return event.type === \"pitchBend\"; });\n            pitchBends.forEach(function (event) {\n                _this.addPitchBend({\n                    ticks: event.absoluteTime,\n                    // Scale the value between -2^13 to 2^13 to -2 to 2.\n                    value: event.value / Math.pow(2, 13),\n                });\n            });\n            var endOfTrackEvent = trackData.find(function (event) {\n                return event.type === \"endOfTrack\";\n            });\n            this.endOfTrackTicks =\n                endOfTrackEvent !== undefined\n                    ? endOfTrackEvent.absoluteTime\n                    : undefined;\n        }\n    }\n    /**\n     * Add a note to the notes array.\n     * @param props The note properties to add.\n     */\n    Track.prototype.addNote = function (props) {\n        var header = privateHeaderMap.get(this);\n        var note = new Note_1.Note({\n            midi: 0,\n            ticks: 0,\n            velocity: 1,\n        }, {\n            ticks: 0,\n            velocity: 0,\n        }, header);\n        Object.assign(note, props);\n        (0, BinarySearch_1.insert)(this.notes, note, \"ticks\");\n        return this;\n    };\n    /**\n     * Add a control change to the track.\n     * @param props\n     */\n    Track.prototype.addCC = function (props) {\n        var header = privateHeaderMap.get(this);\n        var cc = new ControlChange_1.ControlChange({\n            controllerType: props.number,\n        }, header);\n        delete props.number;\n        Object.assign(cc, props);\n        if (!Array.isArray(this.controlChanges[cc.number])) {\n            this.controlChanges[cc.number] = [];\n        }\n        (0, BinarySearch_1.insert)(this.controlChanges[cc.number], cc, \"ticks\");\n        return this;\n    };\n    /**\n     * Add a control change to the track.\n     */\n    Track.prototype.addPitchBend = function (props) {\n        var header = privateHeaderMap.get(this);\n        var pb = new PitchBend_1.PitchBend({}, header);\n        Object.assign(pb, props);\n        (0, BinarySearch_1.insert)(this.pitchBends, pb, \"ticks\");\n        return this;\n    };\n    Object.defineProperty(Track.prototype, \"duration\", {\n        /**\n         * The end time of the last event in the track.\n         */\n        get: function () {\n            if (!this.notes.length) {\n                return 0;\n            }\n            var maxDuration = this.notes[this.notes.length - 1].time +\n                this.notes[this.notes.length - 1].duration;\n            for (var i = 0; i < this.notes.length - 1; i++) {\n                var duration = this.notes[i].time + this.notes[i].duration;\n                if (maxDuration < duration) {\n                    maxDuration = duration;\n                }\n            }\n            return maxDuration;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Track.prototype, \"durationTicks\", {\n        /**\n         * The end time of the last event in the track in ticks.\n         */\n        get: function () {\n            if (!this.notes.length) {\n                return 0;\n            }\n            var maxDuration = this.notes[this.notes.length - 1].ticks +\n                this.notes[this.notes.length - 1].durationTicks;\n            for (var i = 0; i < this.notes.length - 1; i++) {\n                var duration = this.notes[i].ticks + this.notes[i].durationTicks;\n                if (maxDuration < duration) {\n                    maxDuration = duration;\n                }\n            }\n            return maxDuration;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Assign the JSON values to this track.\n     */\n    Track.prototype.fromJSON = function (json) {\n        var _this = this;\n        this.name = json.name;\n        this.channel = json.channel;\n        this.instrument = new Instrument_1.Instrument(undefined, this);\n        this.instrument.fromJSON(json.instrument);\n        if (json.endOfTrackTicks !== undefined) {\n            this.endOfTrackTicks = json.endOfTrackTicks;\n        }\n        for (var number in json.controlChanges) {\n            if (json.controlChanges[number]) {\n                json.controlChanges[number].forEach(function (cc) {\n                    _this.addCC({\n                        number: cc.number,\n                        ticks: cc.ticks,\n                        value: cc.value,\n                    });\n                });\n            }\n        }\n        json.notes.forEach(function (n) {\n            _this.addNote({\n                durationTicks: n.durationTicks,\n                midi: n.midi,\n                ticks: n.ticks,\n                velocity: n.velocity,\n            });\n        });\n    };\n    /**\n     * Convert the track into a JSON format.\n     */\n    Track.prototype.toJSON = function () {\n        // Convert all the CCs to JSON.\n        var controlChanges = {};\n        for (var i = 0; i < 127; i++) {\n            if (this.controlChanges.hasOwnProperty(i)) {\n                controlChanges[i] = this.controlChanges[i].map(function (c) {\n                    return c.toJSON();\n                });\n            }\n        }\n        var json = {\n            channel: this.channel,\n            controlChanges: controlChanges,\n            pitchBends: this.pitchBends.map(function (pb) { return pb.toJSON(); }),\n            instrument: this.instrument.toJSON(),\n            name: this.name,\n            notes: this.notes.map(function (n) { return n.toJSON(); }),\n        };\n        if (this.endOfTrackTicks !== undefined) {\n            json.endOfTrackTicks = this.endOfTrackTicks;\n        }\n        return json;\n    };\n    return Track;\n}());\nexports.Track = Track;\n//# sourceMappingURL=Track.js.map","/**\n * Flatten an array indefinitely.\n */\nexport function flatten(array) {\n    var result = [];\n    $flatten(array, result);\n    return result;\n}\n/**\n * Internal flatten function recursively passes `result`.\n */\nfunction $flatten(array, result) {\n    for (var i = 0; i < array.length; i++) {\n        var value = array[i];\n        if (Array.isArray(value)) {\n            $flatten(value, result);\n        }\n        else {\n            result.push(value);\n        }\n    }\n}\n//# sourceMappingURL=index.js.map","/*!\n    localForage -- Offline Storage, Improved\n    Version 1.10.0\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb || !idb.open) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support\n        // (see: https://github.com/pouchdb/pouchdb/issues/5572).\n        // Safari 10.1 shipped with fetch, we can use that to detect it.\n        // Note: this creates issues with `window.fetch` polyfills and\n        // overrides; see:\n        // https://github.com/localForage/localForage/issues/856\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            var db = openreq.result;\n            db.onversionchange = function (e) {\n                // Triggered when the database is modified (e.g. adding an objectStore) or\n                // deleted (even when initiated by other sessions in different tabs).\n                // Closing the connection here prevents those operations from being blocked.\n                // If the database is accessed again later by this instance, the connection\n                // will be reopened or the database recreated as needed.\n                e.target.close();\n            };\n            resolve(db);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback returns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openKeyCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openKeyCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(req.error);\n                    };\n\n                    req.onblocked = function () {\n                        // Closing all open connections in onversionchange handler should prevent this situation, but if\n                        // we do get here, it just means the request remains pending - eventually it will succeed or error\n                        console.warn('dropInstance blocked for database \"' + options.name + '\" until all open connections are closed');\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n","exports.parseMidi = require('./lib/midi-parser')\nexports.writeMidi = require('./lib/midi-writer')\n","// data can be any array-like object.  It just needs to support .length, .slice, and an element getter []\n\nfunction parseMidi(data) {\n  var p = new Parser(data)\n\n  var headerChunk = p.readChunk()\n  if (headerChunk.id != 'MThd')\n    throw \"Bad MIDI file.  Expected 'MHdr', got: '\" + headerChunk.id + \"'\"\n  var header = parseHeader(headerChunk.data)\n\n  var tracks = []\n  for (var i=0; !p.eof() && i < header.numTracks; i++) {\n    var trackChunk = p.readChunk()\n    if (trackChunk.id != 'MTrk')\n      throw \"Bad MIDI file.  Expected 'MTrk', got: '\" + trackChunk.id + \"'\"\n    var track = parseTrack(trackChunk.data)\n    tracks.push(track)\n  }\n\n  return {\n    header: header,\n    tracks: tracks\n  }\n}\n\n\nfunction parseHeader(data) {\n  var p = new Parser(data)\n\n  var format = p.readUInt16()\n  var numTracks = p.readUInt16()\n\n  var result = {\n    format: format,\n    numTracks: numTracks\n  }\n\n  var timeDivision = p.readUInt16()\n  if (timeDivision & 0x8000) {\n    result.framesPerSecond = 0x100 - (timeDivision >> 8)\n    result.ticksPerFrame = timeDivision & 0xFF\n  } else {\n    result.ticksPerBeat = timeDivision\n  }\n\n  return result\n}\n\nfunction parseTrack(data) {\n  var p = new Parser(data)\n\n  var events = []\n  while (!p.eof()) {\n    var event = readEvent()\n    events.push(event)\n  }\n\n  return events\n\n  var lastEventTypeByte = null\n\n  function readEvent() {\n    var event = {}\n    event.deltaTime = p.readVarInt()\n\n    var eventTypeByte = p.readUInt8()\n\n    if ((eventTypeByte & 0xf0) === 0xf0) {\n      // system / meta event\n      if (eventTypeByte === 0xff) {\n        // meta event\n        event.meta = true\n        var metatypeByte = p.readUInt8()\n        var length = p.readVarInt()\n        switch (metatypeByte) {\n          case 0x00:\n            event.type = 'sequenceNumber'\n            if (length !== 2) throw \"Expected length for sequenceNumber event is 2, got \" + length\n            event.number = p.readUInt16()\n            return event\n          case 0x01:\n            event.type = 'text'\n            event.text = p.readString(length)\n            return event\n          case 0x02:\n            event.type = 'copyrightNotice'\n            event.text = p.readString(length)\n            return event\n          case 0x03:\n            event.type = 'trackName'\n            event.text = p.readString(length)\n            return event\n          case 0x04:\n            event.type = 'instrumentName'\n            event.text = p.readString(length)\n            return event\n          case 0x05:\n            event.type = 'lyrics'\n            event.text = p.readString(length)\n            return event\n          case 0x06:\n            event.type = 'marker'\n            event.text = p.readString(length)\n            return event\n          case 0x07:\n            event.type = 'cuePoint'\n            event.text = p.readString(length)\n            return event\n          case 0x20:\n            event.type = 'channelPrefix'\n            if (length != 1) throw \"Expected length for channelPrefix event is 1, got \" + length\n            event.channel = p.readUInt8()\n            return event\n          case 0x21:\n            event.type = 'portPrefix'\n            if (length != 1) throw \"Expected length for portPrefix event is 1, got \" + length\n            event.port = p.readUInt8()\n            return event\n          case 0x2f:\n            event.type = 'endOfTrack'\n            if (length != 0) throw \"Expected length for endOfTrack event is 0, got \" + length\n            return event\n          case 0x51:\n            event.type = 'setTempo';\n            if (length != 3) throw \"Expected length for setTempo event is 3, got \" + length\n            event.microsecondsPerBeat = p.readUInt24()\n            return event\n          case 0x54:\n            event.type = 'smpteOffset';\n            if (length != 5) throw \"Expected length for smpteOffset event is 5, got \" + length\n            var hourByte = p.readUInt8()\n            var FRAME_RATES = { 0x00: 24, 0x20: 25, 0x40: 29, 0x60: 30 }\n            event.frameRate = FRAME_RATES[hourByte & 0x60]\n            event.hour = hourByte & 0x1f\n            event.min = p.readUInt8()\n            event.sec = p.readUInt8()\n            event.frame = p.readUInt8()\n            event.subFrame = p.readUInt8()\n            return event\n          case 0x58:\n            event.type = 'timeSignature'\n            if (length != 2 && length != 4) throw \"Expected length for timeSignature event is 4 or 2, got \" + length\n            event.numerator = p.readUInt8()\n            event.denominator = (1 << p.readUInt8())\n            if (length === 4) {\n              event.metronome = p.readUInt8()\n              event.thirtyseconds = p.readUInt8()\n            } else {\n              event.metronome = 0x24\n              event.thirtyseconds = 0x08\n            }\n            return event\n          case 0x59:\n            event.type = 'keySignature'\n            if (length != 2) throw \"Expected length for keySignature event is 2, got \" + length\n            event.key = p.readInt8()\n            event.scale = p.readUInt8()\n            return event\n          case 0x7f:\n            event.type = 'sequencerSpecific'\n            event.data = p.readBytes(length)\n            return event\n          default:\n            event.type = 'unknownMeta'\n            event.data = p.readBytes(length)\n            event.metatypeByte = metatypeByte\n            return event\n        }\n      } else if (eventTypeByte == 0xf0) {\n        event.type = 'sysEx'\n        var length = p.readVarInt()\n        event.data = p.readBytes(length)\n        return event\n      } else if (eventTypeByte == 0xf7) {\n        event.type = 'endSysEx'\n        var length = p.readVarInt()\n        event.data = p.readBytes(length)\n        return event\n      } else {\n        throw \"Unrecognised MIDI event type byte: \" + eventTypeByte\n      }\n    } else {\n      // channel event\n      var param1\n      if ((eventTypeByte & 0x80) === 0) {\n        // running status - reuse lastEventTypeByte as the event type.\n        // eventTypeByte is actually the first parameter\n        if (lastEventTypeByte === null)\n          throw \"Running status byte encountered before status byte\"\n        param1 = eventTypeByte\n        eventTypeByte = lastEventTypeByte\n        event.running = true\n      } else {\n        param1 = p.readUInt8()\n        lastEventTypeByte = eventTypeByte\n      }\n      var eventType = eventTypeByte >> 4\n      event.channel = eventTypeByte & 0x0f\n      switch (eventType) {\n        case 0x08:\n          event.type = 'noteOff'\n          event.noteNumber = param1\n          event.velocity = p.readUInt8()\n          return event\n        case 0x09:\n          var velocity = p.readUInt8()\n          event.type = velocity === 0 ? 'noteOff' : 'noteOn'\n          event.noteNumber = param1\n          event.velocity = velocity\n          if (velocity === 0) event.byte9 = true\n          return event\n        case 0x0a:\n          event.type = 'noteAftertouch'\n          event.noteNumber = param1\n          event.amount = p.readUInt8()\n          return event\n        case 0x0b:\n          event.type = 'controller'\n          event.controllerType = param1\n          event.value = p.readUInt8()\n          return event\n        case 0x0c:\n          event.type = 'programChange'\n          event.programNumber = param1\n          return event\n        case 0x0d:\n          event.type = 'channelAftertouch'\n          event.amount = param1\n          return event\n        case 0x0e:\n          event.type = 'pitchBend'\n          event.value = (param1 + (p.readUInt8() << 7)) - 0x2000\n          return event\n        default:\n          throw \"Unrecognised MIDI event type: \" + eventType\n      }\n    }\n  }\n}\n\nfunction Parser(data) {\n  this.buffer = data\n  this.bufferLen = this.buffer.length\n  this.pos = 0\n}\n\nParser.prototype.eof = function() {\n  return this.pos >= this.bufferLen\n}\n\nParser.prototype.readUInt8 = function() {\n  var result = this.buffer[this.pos]\n  this.pos += 1\n  return result\n}\n\nParser.prototype.readInt8 = function() {\n  var u = this.readUInt8()\n  if (u & 0x80)\n    return u - 0x100\n  else\n    return u\n}\n\nParser.prototype.readUInt16 = function() {\n  var b0 = this.readUInt8(),\n      b1 = this.readUInt8()\n\n    return (b0 << 8) + b1\n}\n\nParser.prototype.readInt16 = function() {\n  var u = this.readUInt16()\n  if (u & 0x8000)\n    return u - 0x10000\n  else\n    return u\n}\n\nParser.prototype.readUInt24 = function() {\n  var b0 = this.readUInt8(),\n      b1 = this.readUInt8(),\n      b2 = this.readUInt8()\n\n    return (b0 << 16) + (b1 << 8) + b2\n}\n\nParser.prototype.readInt24 = function() {\n  var u = this.readUInt24()\n  if (u & 0x800000)\n    return u - 0x1000000\n  else\n    return u\n}\n\nParser.prototype.readUInt32 = function() {\n  var b0 = this.readUInt8(),\n      b1 = this.readUInt8(),\n      b2 = this.readUInt8(),\n      b3 = this.readUInt8()\n\n    return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3\n}\n\nParser.prototype.readBytes = function(len) {\n  var bytes = this.buffer.slice(this.pos, this.pos + len)\n  this.pos += len\n  return bytes\n}\n\nParser.prototype.readString = function(len) {\n  var bytes = this.readBytes(len)\n  return String.fromCharCode.apply(null, bytes)\n}\n\nParser.prototype.readVarInt = function() {\n  var result = 0\n  while (!this.eof()) {\n    var b = this.readUInt8()\n    if (b & 0x80) {\n      result += (b & 0x7f)\n      result <<= 7\n    } else {\n      // b is last byte\n      return result + b\n    }\n  }\n  // premature eof\n  return result\n}\n\nParser.prototype.readChunk = function() {\n  var id = this.readString(4)\n  var length = this.readUInt32()\n  var data = this.readBytes(length)\n  return {\n    id: id,\n    length: length,\n    data: data\n  }\n}\n\nmodule.exports = parseMidi\n","// data should be the same type of format returned by parseMidi\n// for maximum compatibililty, returns an array of byte values, suitable for conversion to Buffer, Uint8Array, etc.\n\n// opts:\n// - running              reuse previous eventTypeByte when possible, to compress file\n// - useByte9ForNoteOff   use 0x09 for noteOff when velocity is zero\n\nfunction writeMidi(data, opts) {\n  if (typeof data !== 'object')\n    throw 'Invalid MIDI data'\n\n  opts = opts || {}\n\n  var header = data.header || {}\n  var tracks = data.tracks || []\n  var i, len = tracks.length\n\n  var w = new Writer()\n  writeHeader(w, header, len)\n\n  for (i=0; i < len; i++) {\n    writeTrack(w, tracks[i], opts)\n  }\n\n  return w.buffer\n}\n\nfunction writeHeader(w, header, numTracks) {\n  var format = header.format == null ? 1 : header.format\n\n  var timeDivision = 128\n  if (header.timeDivision) {\n    timeDivision = header.timeDivision\n  } else if (header.ticksPerFrame && header.framesPerSecond) {\n    timeDivision = (-(header.framesPerSecond & 0xFF) << 8) | (header.ticksPerFrame & 0xFF)\n  } else if (header.ticksPerBeat) {\n    timeDivision = header.ticksPerBeat & 0x7FFF\n  }\n\n  var h = new Writer()\n  h.writeUInt16(format)\n  h.writeUInt16(numTracks)\n  h.writeUInt16(timeDivision)\n\n  w.writeChunk('MThd', h.buffer)\n}\n\nfunction writeTrack(w, track, opts) {\n  var t = new Writer()\n  var i, len = track.length\n  var eventTypeByte = null\n  for (i=0; i < len; i++) {\n    // Reuse last eventTypeByte when opts.running is set, or event.running is explicitly set on it.\n    // parseMidi will set event.running for each event, so that we can get an exact copy by default.\n    // Explicitly set opts.running to false, to override event.running and never reuse last eventTypeByte.\n    if (opts.running === false || !opts.running && !track[i].running) eventTypeByte = null\n\n    eventTypeByte = writeEvent(t, track[i], eventTypeByte, opts.useByte9ForNoteOff)\n  }\n  w.writeChunk('MTrk', t.buffer)\n}\n\nfunction writeEvent(w, event, lastEventTypeByte, useByte9ForNoteOff) {\n  var type = event.type\n  var deltaTime = event.deltaTime\n  var text = event.text || ''\n  var data = event.data || []\n  var eventTypeByte = null\n  w.writeVarInt(deltaTime)\n\n  switch (type) {\n    // meta events\n    case 'sequenceNumber':\n      w.writeUInt8(0xFF)\n      w.writeUInt8(0x00)\n      w.writeVarInt(2)\n      w.writeUInt16(event.number)\n      break;\n\n    case 'text':\n      w.writeUInt8(0xFF)\n      w.writeUInt8(0x01)\n      w.writeVarInt(text.length)\n      w.writeString(text)\n      break;\n\n    case 'copyrightNotice':\n      w.writeUInt8(0xFF)\n      w.writeUInt8(0x02)\n      w.writeVarInt(text.length)\n      w.writeString(text)\n      break;\n\n    case 'trackName':\n      w.writeUInt8(0xFF)\n      w.writeUInt8(0x03)\n      w.writeVarInt(text.length)\n      w.writeString(text)\n      break;\n\n    case 'instrumentName':\n      w.writeUInt8(0xFF)\n      w.writeUInt8(0x04)\n      w.writeVarInt(text.length)\n      w.writeString(text)\n      break;\n\n    case 'lyrics':\n      w.writeUInt8(0xFF)\n      w.writeUInt8(0x05)\n      w.writeVarInt(text.length)\n      w.writeString(text)\n      break;\n\n    case 'marker':\n      w.writeUInt8(0xFF)\n      w.writeUInt8(0x06)\n      w.writeVarInt(text.length)\n      w.writeString(text)\n      break;\n\n    case 'cuePoint':\n      w.writeUInt8(0xFF)\n      w.writeUInt8(0x07)\n      w.writeVarInt(text.length)\n      w.writeString(text)\n      break;\n\n    case 'channelPrefix':\n      w.writeUInt8(0xFF)\n      w.writeUInt8(0x20)\n      w.writeVarInt(1)\n      w.writeUInt8(event.channel)\n      break;\n\n    case 'portPrefix':\n      w.writeUInt8(0xFF)\n      w.writeUInt8(0x21)\n      w.writeVarInt(1)\n      w.writeUInt8(event.port)\n      break;\n\n    case 'endOfTrack':\n      w.writeUInt8(0xFF)\n      w.writeUInt8(0x2F)\n      w.writeVarInt(0)\n      break;\n\n    case 'setTempo':\n      w.writeUInt8(0xFF)\n      w.writeUInt8(0x51)\n      w.writeVarInt(3)\n      w.writeUInt24(event.microsecondsPerBeat)\n      break;\n\n    case 'smpteOffset':\n      w.writeUInt8(0xFF)\n      w.writeUInt8(0x54)\n      w.writeVarInt(5)\n      var FRAME_RATES = { 24: 0x00, 25: 0x20, 29: 0x40, 30: 0x60 }\n      var hourByte = (event.hour & 0x1F) | FRAME_RATES[event.frameRate]\n      w.writeUInt8(hourByte)\n      w.writeUInt8(event.min)\n      w.writeUInt8(event.sec)\n      w.writeUInt8(event.frame)\n      w.writeUInt8(event.subFrame)\n      break;\n\n    case 'timeSignature':\n      w.writeUInt8(0xFF)\n      w.writeUInt8(0x58)\n      w.writeVarInt(4)\n      w.writeUInt8(event.numerator)\n      var denominator = Math.floor((Math.log(event.denominator) / Math.LN2)) & 0xFF\n      w.writeUInt8(denominator)\n      w.writeUInt8(event.metronome)\n      w.writeUInt8(event.thirtyseconds || 8)\n      break;\n\n    case 'keySignature':\n      w.writeUInt8(0xFF)\n      w.writeUInt8(0x59)\n      w.writeVarInt(2)\n      w.writeInt8(event.key)\n      w.writeUInt8(event.scale)\n      break;\n\n    case 'sequencerSpecific':\n      w.writeUInt8(0xFF)\n      w.writeUInt8(0x7F)\n      w.writeVarInt(data.length)\n      w.writeBytes(data)\n      break;\n\n    case 'unknownMeta':\n      if (event.metatypeByte != null) {\n        w.writeUInt8(0xFF)\n        w.writeUInt8(event.metatypeByte)\n        w.writeVarInt(data.length)\n        w.writeBytes(data)\n      }\n      break;\n\n    // system-exclusive\n    case 'sysEx':\n      w.writeUInt8(0xF0)\n      w.writeVarInt(data.length)\n      w.writeBytes(data)\n      break;\n\n    case 'endSysEx':\n      w.writeUInt8(0xF7)\n      w.writeVarInt(data.length)\n      w.writeBytes(data)\n      break;\n\n    // channel events\n    case 'noteOff':\n      // Use 0x90 when opts.useByte9ForNoteOff is set and velocity is zero, or when event.byte9 is explicitly set on it.\n      // parseMidi will set event.byte9 for each event, so that we can get an exact copy by default.\n      // Explicitly set opts.useByte9ForNoteOff to false, to override event.byte9 and always use 0x80 for noteOff events.\n      var noteByte = ((useByte9ForNoteOff !== false && event.byte9) || (useByte9ForNoteOff && event.velocity == 0)) ? 0x90 : 0x80\n\n      eventTypeByte = noteByte | event.channel\n      if (eventTypeByte !== lastEventTypeByte) w.writeUInt8(eventTypeByte)\n      w.writeUInt8(event.noteNumber)\n      w.writeUInt8(event.velocity)\n      break;\n\n    case 'noteOn':\n      eventTypeByte = 0x90 | event.channel\n      if (eventTypeByte !== lastEventTypeByte) w.writeUInt8(eventTypeByte)\n      w.writeUInt8(event.noteNumber)\n      w.writeUInt8(event.velocity)\n      break;\n\n    case 'noteAftertouch':\n      eventTypeByte = 0xA0 | event.channel\n      if (eventTypeByte !== lastEventTypeByte) w.writeUInt8(eventTypeByte)\n      w.writeUInt8(event.noteNumber)\n      w.writeUInt8(event.amount)\n      break;\n\n    case 'controller':\n      eventTypeByte = 0xB0 | event.channel\n      if (eventTypeByte !== lastEventTypeByte) w.writeUInt8(eventTypeByte)\n      w.writeUInt8(event.controllerType)\n      w.writeUInt8(event.value)\n      break;\n\n    case 'programChange':\n      eventTypeByte = 0xC0 | event.channel\n      if (eventTypeByte !== lastEventTypeByte) w.writeUInt8(eventTypeByte)\n      w.writeUInt8(event.programNumber)\n      break;\n\n    case 'channelAftertouch':\n      eventTypeByte = 0xD0 | event.channel\n      if (eventTypeByte !== lastEventTypeByte) w.writeUInt8(eventTypeByte)\n      w.writeUInt8(event.amount)\n      break;\n\n    case 'pitchBend':\n      eventTypeByte = 0xE0 | event.channel\n      if (eventTypeByte !== lastEventTypeByte) w.writeUInt8(eventTypeByte)\n      var value14 = 0x2000 + event.value\n      var lsb14 = (value14 & 0x7F)\n      var msb14 = (value14 >> 7) & 0x7F\n      w.writeUInt8(lsb14)\n      w.writeUInt8(msb14)\n    break;\n\n    default:\n      throw 'Unrecognized event type: ' + type\n  }\n  return eventTypeByte\n}\n\n\nfunction Writer() {\n  this.buffer = []\n}\n\nWriter.prototype.writeUInt8 = function(v) {\n  this.buffer.push(v & 0xFF)\n}\nWriter.prototype.writeInt8 = Writer.prototype.writeUInt8\n\nWriter.prototype.writeUInt16 = function(v) {\n  var b0 = (v >> 8) & 0xFF,\n      b1 = v & 0xFF\n\n  this.writeUInt8(b0)\n  this.writeUInt8(b1)\n}\nWriter.prototype.writeInt16 = Writer.prototype.writeUInt16\n\nWriter.prototype.writeUInt24 = function(v) {\n  var b0 = (v >> 16) & 0xFF,\n      b1 = (v >> 8) & 0xFF,\n      b2 = v & 0xFF\n\n  this.writeUInt8(b0)\n  this.writeUInt8(b1)\n  this.writeUInt8(b2)\n}\nWriter.prototype.writeInt24 = Writer.prototype.writeUInt24\n\nWriter.prototype.writeUInt32 = function(v) {\n  var b0 = (v >> 24) & 0xFF,\n      b1 = (v >> 16) & 0xFF,\n      b2 = (v >> 8) & 0xFF,\n      b3 = v & 0xFF\n\n  this.writeUInt8(b0)\n  this.writeUInt8(b1)\n  this.writeUInt8(b2)\n  this.writeUInt8(b3)\n}\nWriter.prototype.writeInt32 = Writer.prototype.writeUInt32\n\n\nWriter.prototype.writeBytes = function(arr) {\n  this.buffer = this.buffer.concat(Array.prototype.slice.call(arr, 0))\n}\n\nWriter.prototype.writeString = function(str) {\n  var i, len = str.length, arr = []\n  for (i=0; i < len; i++) {\n    arr.push(str.codePointAt(i))\n  }\n  this.writeBytes(arr)\n}\n\nWriter.prototype.writeVarInt = function(v) {\n  if (v < 0) throw \"Cannot write negative variable-length integer\"\n\n  if (v <= 0x7F) {\n    this.writeUInt8(v)\n  } else {\n    var i = v\n    var bytes = []\n    bytes.push(i & 0x7F)\n    i >>= 7\n    while (i) {\n      var b = i & 0x7F | 0x80\n      bytes.push(b)\n      i >>= 7\n    }\n    this.writeBytes(bytes.reverse())\n  }\n}\n\nWriter.prototype.writeChunk = function(id, data) {\n  this.writeString(id)\n  this.writeUInt32(data.length)\n  this.writeBytes(data)\n}\n\nmodule.exports = writeMidi\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { Render } from \"./Rendering/Render.js\"\r\nimport { UI } from \"./ui/UI.js\"\r\nimport { InputListeners } from \"./InputListeners.js\"\r\nimport { getPlayer, getPlayerState } from \"./player/Player.js\"\r\nimport { loadJson } from \"./Util.js\"\r\nimport { FileLoader } from \"./player/FileLoader.js\"\r\n\r\n/**\r\n *\r\n *\r\n * TODOs:\r\n *\r\n * UI:\r\n * - Accessability\r\n * - Mobile\r\n * - Load from URL / circumvent CORS.. Extension?\r\n * - channel menu\r\n * - added song info to \"loaded songs\"\r\n * - fix the minimize button\r\n * - Fix fullscreen on mobile\r\n *\r\n * Audio\r\n * - Figure out how to handle different ADSR envelopes / release times for instruments\r\n * - implement control messages for\r\n * \t\t- sostenuto pedal\r\n * \t\t\t- only keys that are pressed while pedal is hit are sustained\r\n * \t\t- soft pedal\r\n * \t\t\t- how does that affect sound?\r\n * - implement pitch shift\r\n * - settings for playalong:\r\n * \t\t- accuracy needed\r\n * \t\t- different modes\r\n *\r\n * MISC\r\n * - add starting songs from piano-midi\r\n * - make instrument choosable for tracks\r\n * - Metronome\r\n * - Update readme - new screenshot, install/ run instructions\r\n * - Choose License\r\n * -\r\n * -\r\n *\r\n *\r\n *\r\n * bugs:\r\n * - Fix iOS\r\n * - too long notes disappear too soon\r\n */\r\nlet ui\r\nlet loading\r\nlet listeners\r\n\r\nwindow.onload = async function () {\r\n\tawait init()\r\n\tloading = true\r\n\r\n\t//\tloadSongFromURL(\"http://www.piano-midi.de/midis/brahms/brahms_opus1_1_format0.mid\")\r\n}\r\n\r\nasync function init() {\r\n\trender = new Render()\r\n\tui = new UI(render)\r\n\tlisteners = new InputListeners(ui, render)\r\n\trenderLoop()\r\n\r\n\tloadStartingSong()\r\n\r\n\tloadJson(\"./js/data/exampleSongs.json\", json =>\r\n\t\tui.setExampleSongs(JSON.parse(json))\r\n\t)\r\n}\r\n\r\nlet render\r\nfunction renderLoop() {\r\n\trender.render(getPlayerState())\r\n\twindow.requestAnimationFrame(renderLoop)\r\n}\r\nasync function loadStartingSong() {\r\n\tconst domain = window.location.href\r\n\tlet url = \"https://midiano.com/mz_331_3.mid?raw=true\" // \"https://bewelge.github.io/piano-midi.de-Files/midi/alb_esp1.mid?raw=true\" //\r\n\tif (domain.split(\"github\").length > 1) {\r\n\t\turl = \"https://Bewelge.github.io/MIDIano/mz_331_3.mid?raw=true\"\r\n\t}\r\n\r\n\tFileLoader.loadSongFromURL(url, (response, fileName) =>\r\n\t\tgetPlayer().loadSong(response, fileName, \"Mozart - Turkish March\")\r\n\t) // Local: \"../mz_331_3.mid\")\r\n}\r\n"],"names":[],"sourceRoot":""}